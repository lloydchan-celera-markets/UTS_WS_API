package com.celera.mongo.entity;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.json.Json;
import javax.json.JsonArrayBuilder;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.PersistenceConstructor;
import org.springframework.data.mongodb.core.mapping.Document;

import com.celera.mongo.repo.HedgeRepo;

//@Document(collection = "account")
public class Account /*implements IMongoDocument<HedgeRepo>*/
{
	private static Map<String, Account> map = new HashMap<String, Account>();
	static {
		
	}
	private static final Logger logger = LoggerFactory.getLogger(Account.class); 
	
	@Id
	private String id;
	private String company = null;
	private String address = null;
	private String emails = null;
	private String attn = null;

//	private Date lastModified;

	public Account()
	{
	}

	@PersistenceConstructor
	public Account(String id, String company, String address, String emails, String attn)
	{
		super();
		this.id = id;
		this.company = company;
		this.address = address;
		this.emails = emails;
		this.attn = attn;
	}

	
	public String getId()
	{
		return id;
	}

	public void setId(String id)
	{
		this.id = id;
	}

	public String getCompany()
	{
		return company;
	}

	public void setCompany(String company)
	{
		this.company = company;
	}

	public String getAddress()
	{
		return address;
	}

	public void setAddress(String address)
	{
		this.address = address;
	}

	public String getEmails()
	{
		return emails;
	}

	public void setEmails(String emails)
	{
		this.emails = emails;
	}

	public String getAttn()
	{
		return attn;
	}

	public void setAttn(String attn)
	{
		this.attn = attn;
	}

	@Override
	public String toString()
	{
		return "Account [id=" + id + ", company=" + company + ", address=" + address + ", emails=" + emails + ", attn="
				+ attn + "]";
	}

	public JsonObject json()
	{
		JsonObjectBuilder builder = Json.createObjectBuilder();

		for (Field f : this.getClass().getDeclaredFields()) {
			try
			{
				Object o = f.get(this);
				if (o != null)
				{
					String name = f.getName();
					builder.add(name, o.toString());
				}
			} catch (IllegalArgumentException | IllegalAccessException e)
			{
				logger.error("", e);
			}
		}
		
//		builder.add("side", side).add("qty", qty).add("price", price).add("future", future);
		JsonObject object = builder.build();
		return object;
	}
	
	public static void main(String[] args)
	{
		Account o1 =  new Account("CEL0001","Nomura International PLC","7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India.","santosh.dange@nomura.com","Santosh Dange");
		Account o2 =  new Account("CEL0002","Deutsche Bank AG, Deutsche Bank Group, Global Market Listed Derivatives","Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India","futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com","Futures Brokerage");
		Account o3 =  new Account("","Deutsche Bank AG, Acting Through Its London Branch","DBOI Global Services Private Limited, Velankani Tech Park, No 43, Electronic City, Hosur Road, Bangalore, 560100, India","","");
		Account o4 =  new Account("CEL0003","Optiver Australia Pty Limited","39 Hunter St., Sydney NSW 2000, Australia.","MiddleOfficeTeam@Optiver.com.au","Brian Taylor");
		Account o5 =  new Account("CEL0004","Vivienne Court Trading Pty Limited","Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia","midoffice@vivcourt.com","Helen Robertson");
		Account o6 =  new Account("CEL0005","Liquid Capital Australia Pty Limited","United Kindom","brokerage@liquidcapital.com","Robert Wickham");
		Account o7 =  new Account("CEL0006","J.P. Morgan Securities PLC","Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036","edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com","F & O House team");
		Account o8 =  new Account("CEL0007","UBS Limited","1 Broadgate, London, ECEM 2BS, United Kingdom","SH-UBS-invoices@ubs.com","SH-UBS-invoices@ubs.com");
		Account o9 =  new Account("CEL0008","Eclipse Futures (HK) Limited","Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong","kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com","Kelvin Chan");
		Account o10 =  new Account("CEL0009","Citigroup Global Markets Limited","ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK","Brokerage.ciplc@citi.com","London Billing Email");
		Account o11 =  new Account("CEL0010","Royal Bank of Canada","71 Queen Victoria Street, London, EC4V 4DE, United Kingdom","","Mark Nunns");
		Account o12 =  new Account("CEL0011","Korea Investment & Securities Co. Ltd.","19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea","Trading_op@truefriend.com, onlyone@truefriend.com","Hanna Kim");
		Account o13 =  new Account("CEL0012","Liquid Capital Hong Kong Limited","21st Floor, The Center, 99 Queens Road, Central, Hong Kong","brokerage@liquidcapital.com","Anthony Webb");
		Account o14 =  new Account("CEL0013","Celera Financial Limited ","11G, 51 Man Yue Street, Hunghom, Hong Kong","cflbrokerage@celera-group.com","");
		Account o15 =  new Account("CEL0014","BNP Paribas Arbitrage S.N.C.*","","bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com","");
		Account o16 =  new Account("CEL0015","Morgan Stanley & Co. International PLC"," 25 Cabot Square,  Canary Wharf, London, E14 4QA","brokerage.payables@morganstanley.com","");
		Account o17 =  new Account("CEL0016","BNP Paribas Paris","","MARINE.MALAGNOUX@UK.BNPPARIBAS.COM ","442075 959700");
		Account o18 =  new Account("CEL0017","BAFM","","derk.chan@bfam-partners.com,BFAM-MO@bfam-partners.com","");
		Account o19 =  new Account("CEL0018","Société Générale (HK) Limited","","FREDERIC.OLIVE@SGCIB.COM ","85221665027");
		Account o20 =  new Account("CEL0019","Mirae Asset Securities Co. Ltd.","","wonjun.hwand@miraeasset.com ","822 3774 6986");
		Account o21 =  new Account("CEL0020","HYUNDAI","","syshin09@stockmarket.co.kr","82261141866");
		Account o22 =  new Account("CEL0021","Barclays Bank PLC","","gupdocs@barclayscapital.com ","");
		Account o23 =  new Account("CEL0022","Daishin Securities Co., Ltd.","","leejw81@daishin.com;songjy@daishin.com","");
		Account o24 =  new Account("CEL0023","HMC Investment","","0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com","");
		Account o25 =  new Account("CEL0024","NH Investment & Securities Co. Ltd.","","jackie5@nhwm.com ","8227687681");
		Account o26 =  new Account("CEL0025","Yuanta Securities Korea Co., Ltd.","","kyojin.ku@yuantakorea.com ","82237705984");
		Account o27 =  new Account("CEL0026","Samsung Securities Co., Ltd.","","youngja.yoon@samsung.com","82220208426");
		Account o28 =  new Account("CEL0027","IBK Securities Co. Ltd.","","twklem@ibks.com ","82269155823");
		Account o29 =  new Account("CEL0028","Shinhan Investment Corp.","","global_fo@shinhan.com","82837722249");
	}
}
