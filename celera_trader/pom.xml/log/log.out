2017-02-20 15:39:46,615 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineSinkCollector.connect(PipelineSinkCollector.java:115) - connect sink tcp://127.0.0.1:20041
2017-02-20 15:39:46,618 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineServer.connect(PipelineServer.java:74) - connect push tcp://127.0.0.1:20040
2017-02-20 15:39:49,626 [JavaFX Application Thread] INFO  com.celera.gateway.HkexOapiGateway.sleep(HkexOapiGateway.java:457) - waiting for response ...
2017-02-20 15:39:49,628 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineServer.send(PipelineServer.java:85) - send OQP
2017-02-20 15:39:49,746 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:49,749 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:49,750 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:49,755 [JavaFX Application Thread] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2017-02-20 15:39:49,771 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-02-20 15:39:49,802 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2017-02-20 15:39:49,806 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2017-02-20 15:39:49,807 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2017-02-20 15:39:49,883 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2017-02-20 15:39:49,895 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2017-02-20 15:39:49,899 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2017-02-20 15:39:49,902 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2017-02-20 15:39:49,950 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2017-02-20 15:39:50,001 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2017-02-20 15:39:50,031 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,032 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,032 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,087 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2017-02-20 15:39:50,101 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2017-02-20 15:39:50,106 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2017-02-20 15:39:50,146 [JavaFX Application Thread] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2017-02-20 15:39:50,146 [JavaFX Application Thread] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2017-02-20 15:39:50,165 [JavaFX Application Thread] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2017-02-20 15:39:50,167 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2017-02-20 15:39:50,171 [JavaFX Application Thread] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2017-02-20 15:39:50,193 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,193 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,194 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,198 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,198 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2017-02-20 15:39:50,205 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRegisterRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/LogRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeReportRepo.class]]
2017-02-20 15:39:50,206 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class]
2017-02-20 15:39:50,207 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2017-02-20 15:39:50,207 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2017-02-20 15:39:50,207 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRegisterRepo.class]
2017-02-20 15:39:50,210 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class]
2017-02-20 15:39:50,211 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/LogRepo.class]
2017-02-20 15:39:50,211 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2017-02-20 15:39:50,212 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2017-02-20 15:39:50,212 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class]
2017-02-20 15:39:50,212 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]
2017-02-20 15:39:50,213 [JavaFX Application Thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeReportRepo.class]
2017-02-20 15:39:50,242 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,242 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,243 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,247 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,248 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2017-02-20 15:39:50,249 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2017-02-20 15:39:50,255 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,256 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,256 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,256 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,257 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,257 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AccountRepoImpl.class]
2017-02-20 15:39:50,258 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AccountRepoImpl.class] to resources []
2017-02-20 15:39:50,258 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: accountRepo - Interface: com.celera.mongo.repo.AccountRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,259 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,259 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,260 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,260 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,261 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailRepoImpl.class]
2017-02-20 15:39:50,261 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailRepoImpl.class] to resources []
2017-02-20 15:39:50,262 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailRepo - Interface: com.celera.mongo.repo.TradeDetailRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,263 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,263 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,263 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,263 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,264 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeReportRepoImpl.class]
2017-02-20 15:39:50,264 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeReportRepoImpl.class] to resources []
2017-02-20 15:39:50,265 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeReportRepo - Interface: com.celera.mongo.repo.TradeReportRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,266 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,266 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,267 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,267 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,268 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRegisterRepoImpl.class]
2017-02-20 15:39:50,268 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRegisterRepoImpl.class] to resources []
2017-02-20 15:39:50,269 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRegisterRepo - Interface: com.celera.mongo.repo.InvoiceRegisterRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,269 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,270 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,270 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,271 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,271 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2017-02-20 15:39:50,273 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2017-02-20 15:39:50,274 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,275 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,275 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,276 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,277 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,277 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRepoImpl.class]
2017-02-20 15:39:50,278 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRepoImpl.class] to resources []
2017-02-20 15:39:50,278 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRepo - Interface: com.celera.mongo.repo.InvoiceRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,279 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,280 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,280 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,281 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,281 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2017-02-20 15:39:50,281 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2017-02-20 15:39:50,290 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,291 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,291 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,292 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,292 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,293 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class]
2017-02-20 15:39:50,294 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class] to resources []
2017-02-20 15:39:50,294 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailsRepo - Interface: com.celera.mongo.repo.TradeDetailsRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,295 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,295 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,295 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,296 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,296 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*LogRepoImpl.class]
2017-02-20 15:39:50,297 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*LogRepoImpl.class] to resources []
2017-02-20 15:39:50,297 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: logRepo - Interface: com.celera.mongo.repo.LogRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,299 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2017-02-20 15:39:50,299 [JavaFX Application Thread] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2017-02-20 15:39:50,300 [JavaFX Application Thread] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2017-02-20 15:39:50,301 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2017-02-20 15:39:50,304 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2017-02-20 15:39:50,305 [JavaFX Application Thread] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2017-02-20 15:39:50,306 [JavaFX Application Thread] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2017-02-20 15:39:50,306 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 19 bean definitions from location pattern [spring-config.xml]
2017-02-20 15:39:50,310 [JavaFX Application Thread] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@4a8219d5: startup date [Mon Feb 20 15:39:50 HKT 2017]; root of context hierarchy
2017-02-20 15:39:50,310 [JavaFX Application Thread] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@4a8219d5: org.springframework.beans.factory.support.DefaultListableBeanFactory@18415196: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeConfoRepo,accountRepo,tradeDetailRepo,tradeReportRepo,invoiceRegisterRepo,hedgeRepo,invoiceRepo,addressRepo,tradeDetailsRepo,logRepo,personRepo]; root of factory hierarchy
2017-02-20 15:39:50,330 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2017-02-20 15:39:50,331 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2017-02-20 15:39:50,342 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2017-02-20 15:39:50,376 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2017-02-20 15:39:50,376 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2017-02-20 15:39:50,377 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2017-02-20 15:39:50,377 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2017-02-20 15:39:50,378 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2017-02-20 15:39:50,380 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2017-02-20 15:39:50,381 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2017-02-20 15:39:50,381 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2017-02-20 15:39:50,382 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2017-02-20 15:39:50,384 [JavaFX Application Thread] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6b9d12a8]
2017-02-20 15:39:50,387 [JavaFX Application Thread] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@40424f6d]
2017-02-20 15:39:50,390 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@18415196: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeConfoRepo,accountRepo,tradeDetailRepo,tradeReportRepo,invoiceRegisterRepo,hedgeRepo,invoiceRepo,addressRepo,tradeDetailsRepo,logRepo,personRepo]; root of factory hierarchy
2017-02-20 15:39:50,390 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2017-02-20 15:39:50,390 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2017-02-20 15:39:50,394 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2017-02-20 15:39:50,420 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2017-02-20 15:39:50,564 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2017-02-20 15:39:50,565 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2017-02-20 15:39:50,565 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2017-02-20 15:39:50,565 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,565 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2017-02-20 15:39:50,567 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2017-02-20 15:39:50,567 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2017-02-20 15:39:50,568 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2017-02-20 15:39:50,572 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2017-02-20 15:39:50,575 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2017-02-20 15:39:50,671 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2017-02-20 15:39:50,685 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2017-02-20 15:39:50,685 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2017-02-20 15:39:50,685 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2017-02-20 15:39:50,686 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2017-02-20 15:39:50,686 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2017-02-20 15:39:50,686 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2017-02-20 15:39:50,691 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2017-02-20 15:39:50,691 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2017-02-20 15:39:50,691 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2017-02-20 15:39:50,692 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2017-02-20 15:39:50,694 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,703 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7501df40'
2017-02-20 15:39:50,704 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#28cad0ed'
2017-02-20 15:39:50,710 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#28cad0ed'
2017-02-20 15:39:50,711 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#28cad0ed'
2017-02-20 15:39:50,717 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7501df40'
2017-02-20 15:39:50,717 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#633a9122'
2017-02-20 15:39:50,721 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#633a9122'
2017-02-20 15:39:50,721 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,722 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2017-02-20 15:39:50,771 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2017-02-20 15:39:50,786 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Leg for index information.
2017-02-20 15:39:50,788 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2017-02-20 15:39:50,913 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@1e1deb1]
2017-02-20 15:39:50,919 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2017-02-20 15:39:50,919 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'accountRepo'
2017-02-20 15:39:50,919 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'accountRepo'
2017-02-20 15:39:50,920 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'accountRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,920 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3711c925'
2017-02-20 15:39:50,920 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#719d3d05'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#719d3d05'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#719d3d05'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3711c925'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2dde7ce5'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2dde7ce5'
2017-02-20 15:39:50,921 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,922 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'accountRepo'
2017-02-20 15:39:50,926 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Account for index information.
2017-02-20 15:39:50,927 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@3c424c8a]
2017-02-20 15:39:50,931 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'accountRepo'
2017-02-20 15:39:50,931 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailRepo'
2017-02-20 15:39:50,931 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailRepo'
2017-02-20 15:39:50,931 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,931 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4f48f21d'
2017-02-20 15:39:50,932 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4cd60ce'
2017-02-20 15:39:50,933 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#4cd60ce'
2017-02-20 15:39:50,933 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4cd60ce'
2017-02-20 15:39:50,933 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4f48f21d'
2017-02-20 15:39:50,933 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#46f7072'
2017-02-20 15:39:50,934 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#46f7072'
2017-02-20 15:39:50,934 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,934 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailRepo'
2017-02-20 15:39:50,939 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetail for index information.
2017-02-20 15:39:50,940 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@75c2e622]
2017-02-20 15:39:50,942 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailRepo'
2017-02-20 15:39:50,942 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeReportRepo'
2017-02-20 15:39:50,943 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeReportRepo'
2017-02-20 15:39:50,943 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeReportRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,943 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#78df2490'
2017-02-20 15:39:50,943 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7d540e4a'
2017-02-20 15:39:50,944 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7d540e4a'
2017-02-20 15:39:50,944 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7d540e4a'
2017-02-20 15:39:50,944 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#78df2490'
2017-02-20 15:39:50,944 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2d52d41d'
2017-02-20 15:39:50,944 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2d52d41d'
2017-02-20 15:39:50,945 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,945 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeReportRepo'
2017-02-20 15:39:50,953 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class interface org.slf4j.Logger for index information.
2017-02-20 15:39:50,958 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class interface com.celera.core.dm.ITradeReport for index information.
2017-02-20 15:39:50,959 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeReport for index information.
2017-02-20 15:39:50,960 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@52e6168c]
2017-02-20 15:39:50,963 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeReportRepo'
2017-02-20 15:39:50,963 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRegisterRepo'
2017-02-20 15:39:50,964 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRegisterRepo'
2017-02-20 15:39:50,964 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRegisterRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,964 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7c730572'
2017-02-20 15:39:50,965 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#312c1a9f'
2017-02-20 15:39:50,965 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#312c1a9f'
2017-02-20 15:39:50,966 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#312c1a9f'
2017-02-20 15:39:50,966 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7c730572'
2017-02-20 15:39:50,966 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#48a20d40'
2017-02-20 15:39:50,966 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#48a20d40'
2017-02-20 15:39:50,966 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,967 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRegisterRepo'
2017-02-20 15:39:50,981 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.InvoiceRegister for index information.
2017-02-20 15:39:50,982 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@17cb6335]
2017-02-20 15:39:50,984 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRegisterRepo'
2017-02-20 15:39:50,985 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2017-02-20 15:39:50,985 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2017-02-20 15:39:50,985 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,986 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#e84c165'
2017-02-20 15:39:50,986 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1cb1c081'
2017-02-20 15:39:50,986 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#1cb1c081'
2017-02-20 15:39:50,987 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1cb1c081'
2017-02-20 15:39:50,987 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#e84c165'
2017-02-20 15:39:50,987 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#a2e08d1'
2017-02-20 15:39:50,987 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#a2e08d1'
2017-02-20 15:39:50,987 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:50,988 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2017-02-20 15:39:50,989 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@22097f18]
2017-02-20 15:39:50,991 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2017-02-20 15:39:50,991 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRepo'
2017-02-20 15:39:50,992 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRepo'
2017-02-20 15:39:50,992 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRepo' to allow for resolving potential circular references
2017-02-20 15:39:50,992 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1ef8fa6e'
2017-02-20 15:39:50,992 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#646a11e0'
2017-02-20 15:39:50,994 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#646a11e0'
2017-02-20 15:39:50,995 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#646a11e0'
2017-02-20 15:39:50,996 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1ef8fa6e'
2017-02-20 15:39:51,004 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4d2ccae2'
2017-02-20 15:39:51,005 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4d2ccae2'
2017-02-20 15:39:51,005 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:51,005 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRepo'
2017-02-20 15:39:51,016 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Invoice for index information.
2017-02-20 15:39:51,020 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@1bd62bd]
2017-02-20 15:39:51,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRepo'
2017-02-20 15:39:51,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2017-02-20 15:39:51,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2017-02-20 15:39:51,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2017-02-20 15:39:51,023 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#76e4011f'
2017-02-20 15:39:51,024 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6aee566b'
2017-02-20 15:39:51,024 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#6aee566b'
2017-02-20 15:39:51,024 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6aee566b'
2017-02-20 15:39:51,025 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#76e4011f'
2017-02-20 15:39:51,025 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3de9cd72'
2017-02-20 15:39:51,025 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3de9cd72'
2017-02-20 15:39:51,025 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:51,025 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2017-02-20 15:39:51,029 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2017-02-20 15:39:51,029 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@63604719]
2017-02-20 15:39:51,031 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2017-02-20 15:39:51,032 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailsRepo'
2017-02-20 15:39:51,032 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailsRepo'
2017-02-20 15:39:51,032 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailsRepo' to allow for resolving potential circular references
2017-02-20 15:39:51,032 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#5167ca8b'
2017-02-20 15:39:51,032 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4d3bbab9'
2017-02-20 15:39:51,033 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#4d3bbab9'
2017-02-20 15:39:51,033 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4d3bbab9'
2017-02-20 15:39:51,033 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#5167ca8b'
2017-02-20 15:39:51,033 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#45e256ed'
2017-02-20 15:39:51,034 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#45e256ed'
2017-02-20 15:39:51,034 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:51,034 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailsRepo'
2017-02-20 15:39:51,069 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetails for index information.
2017-02-20 15:39:51,074 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@52db9848]
2017-02-20 15:39:51,082 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailsRepo'
2017-02-20 15:39:51,082 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'logRepo'
2017-02-20 15:39:51,082 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'logRepo'
2017-02-20 15:39:51,086 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'logRepo' to allow for resolving potential circular references
2017-02-20 15:39:51,089 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#368dc89e'
2017-02-20 15:39:51,093 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7c076d9c'
2017-02-20 15:39:51,095 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7c076d9c'
2017-02-20 15:39:51,096 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7c076d9c'
2017-02-20 15:39:51,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#368dc89e'
2017-02-20 15:39:51,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6a8579f3'
2017-02-20 15:39:51,097 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6a8579f3'
2017-02-20 15:39:51,098 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:51,098 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'logRepo'
2017-02-20 15:39:51,102 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Log for index information.
2017-02-20 15:39:51,104 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@55620625]
2017-02-20 15:39:51,106 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'logRepo'
2017-02-20 15:39:51,106 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2017-02-20 15:39:51,106 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2017-02-20 15:39:51,107 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2017-02-20 15:39:51,107 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#783b6588'
2017-02-20 15:39:51,107 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7f8bf2d4'
2017-02-20 15:39:51,107 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7f8bf2d4'
2017-02-20 15:39:51,108 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7f8bf2d4'
2017-02-20 15:39:51,108 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#783b6588'
2017-02-20 15:39:51,108 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6b5696fc'
2017-02-20 15:39:51,108 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6b5696fc'
2017-02-20 15:39:51,108 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2017-02-20 15:39:51,109 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2017-02-20 15:39:51,116 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2017-02-20 15:39:51,118 [JavaFX Application Thread] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@52b22b44]
2017-02-20 15:39:51,120 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2017-02-20 15:39:51,121 [JavaFX Application Thread] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6cbe90db]
2017-02-20 15:39:51,122 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2017-02-20 15:39:51,123 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2017-02-20 15:39:51,123 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2017-02-20 15:39:51,123 [JavaFX Application Thread] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2017-02-20 15:39:51,128 [JavaFX Application Thread] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeReportRepo'
2017-02-20 15:39:51,143 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1719) - find using query: { } fields: null for class: class com.celera.mongo.entity.TradeReport in collection: tradereport
2017-02-20 15:39:51,147 [JavaFX Application Thread] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2017-02-20 15:39:52,582 [JavaFX Application Thread] INFO  com.celera.core.oms.OrderLoggerServer.loadTradeReports(OrderLoggerServer.java:71) - load trade reports 0
2017-02-20 15:39:52,583 [JavaFX Application Thread] DEBUG com.celera.core.oms.OMS.init(OMS.java:121) - set next order id 1
2017-02-20 15:40:03,933 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineServer.send(PipelineServer.java:85) - send OTOHHI9800O7                                   B�p       dCTOM  
2017-02-20 15:40:03,934 [JavaFX Application Thread] DEBUG com.celera.trader.ui.TradeUI.onOrder(TradeUI.java:640) - add display person 3
2017-02-20 15:40:06,272 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineServer.send(PipelineServer.java:85) - send OTOHHI9800O7                                   B�p       dCTOM  
2017-02-20 15:40:06,272 [JavaFX Application Thread] DEBUG com.celera.trader.ui.TradeUI.onOrder(TradeUI.java:640) - add display person 4
2017-02-20 15:40:06,999 [JavaFX Application Thread] INFO  com.celera.ipc.PipelineServer.send(PipelineServer.java:85) - send OTOHHI9800O7                                   B�p       dCTOM  
2017-02-20 15:40:07,000 [JavaFX Application Thread] DEBUG com.celera.trader.ui.TradeUI.onOrder(TradeUI.java:640) - add display person 5
