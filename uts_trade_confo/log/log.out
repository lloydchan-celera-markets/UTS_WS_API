2016-10-24 15:44:16,945 [main] INFO  com.uts.tradeconfo.main.Application.main(Application.java:20) - Read BasicConfigurator
2016-10-24 15:44:16,974 [main] DEBUG com.uts.tradeconfo.UtsEmailProcessor.<clinit>(UtsEmailProcessor.java:107) - Trade Confirmation,eqd@celera-markets.com,CELERAEQ-,.pdf,Sat Oct 01 00:00:00 HKT 2016,Fri Dec 31 00:00:00 HKT 9999
2016-10-24 15:44:16,975 [main] INFO  com.celera.core.configure.IOverrideConfig.overrideCxfSpiProvider(IOverrideConfig.java:17) - override javax.xml.ws.spi.Provider old[null] new[com.sun.xml.internal.ws.spi.ProviderImpl]
2016-10-24 15:44:17,128 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,131 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,131 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,138 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2016-10-24 15:44:17,156 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-10-24 15:44:17,188 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2016-10-24 15:44:17,194 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/datatypes.dtd=schemas/datatypes.dtd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://cxf.apache.org/schemas/configuration/http-jetty.xsd=schemas/configuration/http-jetty.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.w3.org/2001/XMLSchema.dtd=schemas/XMLSchema.dtd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2016-10-24 15:44:17,204 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2016-10-24 15:44:17,246 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2016-10-24 15:44:17,255 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2016-10-24 15:44:17,262 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2016-10-24 15:44:17,264 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2016-10-24 15:44:17,281 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2016-10-24 15:44:17,296 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://cxf.apache.org/transports/http-jetty/configuration=org.apache.cxf.transport.http_jetty.spring.NamespaceHandler, http://www.w3.org/2006/07/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxws=org.apache.cxf.jaxws.spring.NamespaceHandler, http://cxf.apache.org/policy=org.apache.cxf.ws.policy.spring.NamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/ws/addressing=org.apache.cxf.ws.addressing.spring.NamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://schemas.xmlsoap.org/ws/2004/09/policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.w3.org/ns/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler}
2016-10-24 15:44:17,334 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,335 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,335 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,341 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2016-10-24 15:44:17,359 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2016-10-24 15:44:17,374 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2016-10-24 15:44:17,405 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2016-10-24 15:44:17,406 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2016-10-24 15:44:17,426 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2016-10-24 15:44:17,430 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2016-10-24 15:44:17,438 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2016-10-24 15:44:17,469 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,469 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,469 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,488 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-24 15:44:17,489 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2016-10-24 15:44:17,491 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]]
2016-10-24 15:44:17,493 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2016-10-24 15:44:17,494 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2016-10-24 15:44:17,502 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2016-10-24 15:44:17,503 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2016-10-24 15:44:17,515 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,515 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,515 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,520 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-24 15:44:17,520 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2016-10-24 15:44:17,522 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2016-10-24 15:44:17,526 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-24 15:44:17,527 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,527 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,528 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,528 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-24 15:44:17,528 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2016-10-24 15:44:17,536 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2016-10-24 15:44:17,537 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-24 15:44:17,538 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,538 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,538 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,539 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-24 15:44:17,539 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2016-10-24 15:44:17,540 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2016-10-24 15:44:17,540 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-24 15:44:17,541 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-24 15:44:17,541 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-24 15:44:17,541 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-24 15:44:17,542 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-24 15:44:17,542 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2016-10-24 15:44:17,543 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2016-10-24 15:44:17,544 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-24 15:44:17,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 12 bean definitions from location pattern [spring-config.xml]
2016-10-24 15:44:17,547 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@63e31ee: startup date [Mon Oct 24 15:44:17 HKT 2016]; root of context hierarchy
2016-10-24 15:44:17,547 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@63e31ee: org.springframework.beans.factory.support.DefaultListableBeanFactory@1445d7f: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,hedgeRepo,addressRepo,tradeConfoRepo,personRepo]; root of factory hierarchy
2016-10-24 15:44:17,572 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-24 15:44:17,573 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-24 15:44:17,590 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2016-10-24 15:44:17,615 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-24 15:44:17,616 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-24 15:44:17,616 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-24 15:44:17,618 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2016-10-24 15:44:17,619 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-24 15:44:17,621 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-24 15:44:17,622 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-24 15:44:17,623 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2016-10-24 15:44:17,623 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-24 15:44:17,630 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@23f7d05d]
2016-10-24 15:44:17,632 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@23529fee]
2016-10-24 15:44:17,636 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1445d7f: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,hedgeRepo,addressRepo,tradeConfoRepo,personRepo]; root of factory hierarchy
2016-10-24 15:44:17,637 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2016-10-24 15:44:17,637 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2016-10-24 15:44:17,640 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2016-10-24 15:44:17,663 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2016-10-24 15:44:17,760 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2016-10-24 15:44:17,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-24 15:44:17,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-24 15:44:17,761 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2016-10-24 15:44:17,761 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2016-10-24 15:44:17,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2016-10-24 15:44:17,764 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2016-10-24 15:44:17,764 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2016-10-24 15:44:17,769 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2016-10-24 15:44:17,771 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2016-10-24 15:44:17,858 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2016-10-24 15:44:17,864 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2016-10-24 15:44:17,865 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2016-10-24 15:44:17,865 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-24 15:44:17,865 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2016-10-24 15:44:17,865 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2016-10-24 15:44:17,865 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2016-10-24 15:44:17,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2016-10-24 15:44:17,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2016-10-24 15:44:17,873 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2016-10-24 15:44:17,873 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2016-10-24 15:44:17,874 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2016-10-24 15:44:17,887 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3fb1549b'
2016-10-24 15:44:17,888 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#ea6147e'
2016-10-24 15:44:17,905 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#ea6147e'
2016-10-24 15:44:17,906 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#ea6147e'
2016-10-24 15:44:17,912 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3fb1549b'
2016-10-24 15:44:17,912 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#73700b80'
2016-10-24 15:44:17,914 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#73700b80'
2016-10-24 15:44:17,915 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-24 15:44:17,915 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2016-10-24 15:44:17,940 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2016-10-24 15:44:17,959 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@f0c8a99]
2016-10-24 15:44:17,963 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2016-10-24 15:44:17,964 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2016-10-24 15:44:17,964 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2016-10-24 15:44:17,964 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2016-10-24 15:44:17,964 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#11392934'
2016-10-24 15:44:17,964 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6892b3b6'
2016-10-24 15:44:17,965 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#6892b3b6'
2016-10-24 15:44:17,965 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6892b3b6'
2016-10-24 15:44:17,966 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#11392934'
2016-10-24 15:44:17,966 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#76a4ebf2'
2016-10-24 15:44:17,966 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#76a4ebf2'
2016-10-24 15:44:17,967 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-24 15:44:17,968 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2016-10-24 15:44:17,975 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2016-10-24 15:44:17,980 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@74e28667]
2016-10-24 15:44:17,984 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2016-10-24 15:44:17,984 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:17,984 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2016-10-24 15:44:17,985 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2016-10-24 15:44:17,985 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#663c9e7a'
2016-10-24 15:44:17,985 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#19e4653c'
2016-10-24 15:44:17,986 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#19e4653c'
2016-10-24 15:44:17,986 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#19e4653c'
2016-10-24 15:44:17,987 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#663c9e7a'
2016-10-24 15:44:17,987 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6bbe85a8'
2016-10-24 15:44:17,987 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6bbe85a8'
2016-10-24 15:44:17,987 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-24 15:44:17,988 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2016-10-24 15:44:18,012 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Leg for index information.
2016-10-24 15:44:18,014 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2016-10-24 15:44:18,036 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@5890e879]
2016-10-24 15:44:18,038 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2016-10-24 15:44:18,038 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2016-10-24 15:44:18,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2016-10-24 15:44:18,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2016-10-24 15:44:18,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#31ea9581'
2016-10-24 15:44:18,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#231f98ef'
2016-10-24 15:44:18,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#231f98ef'
2016-10-24 15:44:18,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#231f98ef'
2016-10-24 15:44:18,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#31ea9581'
2016-10-24 15:44:18,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#183ec003'
2016-10-24 15:44:18,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#183ec003'
2016-10-24 15:44:18,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-24 15:44:18,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2016-10-24 15:44:18,049 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2016-10-24 15:44:18,052 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@70ed52de]
2016-10-24 15:44:18,055 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2016-10-24 15:44:18,056 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@303cf2ba]
2016-10-24 15:44:18,056 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2016-10-24 15:44:18,058 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-10-24 15:44:18,058 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-10-24 15:44:18,058 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-10-24 15:44:18,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:18,075 [main] DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.createQuery(StringBasedMongoQuery.java:135) - Created query { "tradeDate" : { "$gte" : "01-Oct-16" , "$lte" : "31-Dec-99"}}
2016-10-24 15:44:18,087 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1719) - find using query: { "tradeDate" : { "$gte" : "01-Oct-16" , "$lte" : "31-Dec-99"}} fields: null for class: class com.celera.mongo.entity.TradeConfo in collection: tradeconfo
2016-10-24 15:44:18,091 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:19,702 [main] INFO  com.uts.tradeconfo.UtsEmailProcessor.loadTradeConfo(UtsEmailProcessor.java:162) - load 0 tradeConfo
2016-10-24 15:44:19,702 [main] INFO  com.celera.adapter.EmailServiceImpl.start(EmailServiceImpl.java:94) - Start poll email every 10 seconds
2016-10-24 15:44:21,860 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:44:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:44:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:44:48,941 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 10:45:13 HKT 2016,Dora To <DoraTo@hkex.com.hk>,RE: CG SDNet testing line connectivity
2016-10-24 15:44:48,941 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 10:49:20 HKT 2016,CHRISTINE.WO@hgc.com.hk,RE: CG SDNet testing line connectivity
2016-10-24 15:44:48,942 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 11:09:04 HKT 2016,WINNIE.FUNG@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:44:48,942 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 12:48:56 HKT 2016,no-reply@notifications.symphony.com,Lloyd Chan, Welcome to Symphony
2016-10-24 15:44:48,942 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 12:58:03 HKT 2016,Symphony <no-reply@notifications.symphony.com>,Lloyd Chan Symphony Email Verification.
2016-10-24 15:44:48,942 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 15:51:53 HKT 2016,Godefroy Coadou <godefroy.coadou@vectalis.com>,FW: Feed to UTS
2016-10-24 15:44:48,942 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 16:03:48 HKT 2016,eqd@celera-markets.com,*** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-24 15:44:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:44:49,942 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=50.0, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,575.00, premium=+1,968,750.00, product=European Put ], Leg [side=Buy, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,400.00, premium=+1,750,000.00, product=European Call ]], hedges=[], brokerageFee=600, brokerageCny=HKD]
2016-10-24 15:44:49,943 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:49,948 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:49,949 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:49,956 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 16:03:54 HKT 2016,eqd@celera-markets.com,*** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-24 15:44:50,809 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=null, sellQty=50.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,575.00, premium=-1,968,750.00, product=European Put ], Leg [side=Sell, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,400.00, premium=-1,750,000.00, product=European Call ]], hedges=[], brokerageFee=500, brokerageCny=HKD]
2016-10-24 15:44:50,810 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:50,811 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:50,812 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:50,813 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 17:00:02 HKT 2016,Dora To <DoraTo@hkex.com.hk>,[[CEL] CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:44:50,813 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 20:58:56 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-24 15:44:50,814 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 22:32:06 HKT 2016,Asana <learn@connect.asana.com>,Tools you use, integrated with Asana
2016-10-24 15:44:50,814 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 09:55:19 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-24 15:44:51,675 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=null, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=150.0, sellQty=200.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=200.0, expiry=14-Dec-17, strike=200, price=3, premium=-300,000,000, product=European Put ], Leg [side=Buy, qty=100.0, expiry=14-Dec-17, strike=240, price=9.45, premium=+472,500,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:44:51,676 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:51,677 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:51,677 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:51,678 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 09:55:24 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-24 15:44:52,518 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=null, seller=Morgan Stanley & Co. International PLC - Andre Pinto, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200.0, sellQty=150.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=200.0, expiry=14-Dec-17, strike=200, price=3, premium=+300,000,000, product=European Put ], Leg [side=Sell, qty=100.0, expiry=14-Dec-17, strike=240, price=9.45, premium=-472,500,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:44:52,519 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:52,521 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:52,522 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:52,523 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:23 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:53,343 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=595.0, sellQty=500.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=500.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-13,250,000.00, product=European Put ], Leg [side=Buy, qty=500.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+25,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=8,000, brokerageCny=HKD]
2016-10-24 15:44:53,343 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:53,344 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:53,344 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:53,346 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:29 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:54,209 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=500.0, sellQty=595.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=500.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+13,250,000.00, product=European Put ], Leg [side=Sell, qty=500.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-25,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=13,140, brokerageCny=HKD]
2016-10-24 15:44:54,210 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:54,211 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:54,211 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:54,213 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:35 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:55,065 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=100.0, sellQty=119.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,350,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+2,650,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-5,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=19.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,190, brokerageCny=HKD]
2016-10-24 15:44:55,065 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:55,066 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:55,066 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:55,068 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:55,902 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=238.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,000,000, notationalCny=HKD, rate=null, premium=4,700,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-5,300,000.00, product=European Put ], Leg [side=Buy, qty=200.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+10,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=38.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=5,256, brokerageCny=HKD]
2016-10-24 15:44:55,903 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:55,904 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:55,904 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:55,906 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:48 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:56,804 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=153.0, sellQty=182.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,205,000, notationalCny=HKD, rate=null, premium=3,595,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=153.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+4,054,500.00, product=European Put ], Leg [side=Sell, qty=153.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-7,650,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=29.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:44:56,804 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:56,805 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:56,806 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:56,807 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:01:32 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:57,642 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=469.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=63.0, sellQty=53.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=25,705,000, notationalCny=HKD, rate=null, premium=1,242,850.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=53.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-1,404,500.00, product=European Put ], Leg [side=Buy, qty=53.0, expiry=28-Dec-17, strike=9,600, price=999.00, premium=+2,647,350.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=10.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=848, brokerageCny=HKD]
2016-10-24 15:44:57,643 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:57,644 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:44:57,646 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:57,647 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:14:44 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:58,486 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=573.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=100.0, sellQty=127.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,865,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,000, price=427.00, premium=+2,135,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-5,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,724, brokerageCny=HKD]
2016-10-24 15:44:58,487 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:58,488 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:58,488 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:58,490 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:33:15 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-24 15:44:59,324 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=570.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=127.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,850,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=8,000, price=430.00, premium=-2,150,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+5,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=1,600, brokerageCny=HKD]
2016-10-24 15:44:59,325 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:44:59,326 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:44:59,326 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:44:59,328 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 13:57:32 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:44:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:00,224 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=J.P. Morgan Securities PLC - Franck Cornille, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=520.0, sellQty=1000.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=243,125,000, notationalCny=HKD, rate=null, premium=925,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=1000.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-1,500,000.00, product=European Put ], Leg [side=Buy, qty=500.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=+2,425,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=20.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=18,240, brokerageCny=HKD]
2016-10-24 15:45:00,224 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:00,225 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:00,225 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:00,227 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:05:49 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:01,066 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1500.0, sellQty=780.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=1500.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=+2,250,000.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=-3,637,500.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-24 15:45:01,066 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:01,068 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:01,068 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:01,070 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:05:55 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:02,019 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=104.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=185,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-300,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=+485,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=4.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,648, brokerageCny=HKD]
2016-10-24 15:45:02,020 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:02,021 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:02,021 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:02,024 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:07:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:02,925 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=36.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=156.0, sellQty=300.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=72,937,500, notationalCny=HKD, rate=null, premium=270,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=300.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-450,000.00, product=European Put ], Leg [side=Buy, qty=150.0, expiry=30-Mar-17, strike=7,600, price=96.00, premium=+720,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=6.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,100, brokerageCny=HKD]
2016-10-24 15:45:02,925 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:02,927 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:02,927 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:02,928 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:08:56 HKT 2016,Jerry Kwok <Jerry.Kwok@celera-markets.com>,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:03,815 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1500.0, sellQty=780.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=1500.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=+2,250,000.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=-3,637,500.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-24 15:45:03,815 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:03,816 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:03,816 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:03,818 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 15:56:10 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-24 15:45:03,818 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 16:06:39 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-24 15:45:03,818 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 17:06:19 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-24 15:45:03,818 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 22:57:15 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-24 15:45:03,818 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 09:54:09 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-24 15:45:04,714 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC - Andre Pinto, seller=null, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160.0, sellQty=344.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=160.0, expiry=08-Dec-16, strike=270, price=1.30, premium=+104,000,000, product=European Call ], Leg [side=Sell, qty=320.0, expiry=08-Dec-16, strike=290, price=0.15, premium=-24,000,000, product=European Call ]], hedges=[Hedge [side=Sell, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=740, brokerageCny=USD]
2016-10-24 15:45:04,715 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:04,716 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:04,716 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:04,718 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 09:54:16 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-24 15:45:05,558 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=null, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=344.0, sellQty=160.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=160.0, expiry=08-Dec-16, strike=270, price=1.30, premium=-104,000,000, product=European Call ], Leg [side=Buy, qty=320.0, expiry=08-Dec-16, strike=290, price=0.15, premium=+24,000,000, product=European Call ]], hedges=[Hedge [side=Buy, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:45:05,558 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:05,559 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:05,559 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:05,560 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 10:59:57 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-24 15:45:06,385 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=370.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=45.0, sellQty=29.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=536,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=29.0, expiry=28-Sep-17, strike=21,000, price=937.00, premium=+1,358,650.00, product=European Put ], Leg [side=Sell, qty=29.0, expiry=28-Sep-17, strike=26,200, price=567.00, premium=-822,150.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=464, brokerageCny=HKD]
2016-10-24 15:45:06,385 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:06,386 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:06,386 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:06,388 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 11:00:51 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-24 15:45:07,342 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=375.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29.0, sellQty=45.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=543,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=29.0, expiry=28-Sep-17, strike=21,000, price=942.00, premium=-1,365,900.00, product=European Put ], Leg [side=Buy, qty=29.0, expiry=28-Sep-17, strike=26,200, price=567.00, premium=+822,150.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:07,342 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:07,343 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:07,343 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:07,344 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 13:07:46 HKT 2016,CHRISTINE.WO@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:45:07,345 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:35 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:08,236 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=102.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=49,250,000, notationalCny=HKD, rate=null, premium=1,615,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=+2,615,000.00, product=European Call ], Leg [side=Sell, qty=200.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=-1,000,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=2.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=1,478, brokerageCny=HKD]
2016-10-24 15:45:08,237 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:08,237 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:08,238 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:08,239 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:41 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:09,157 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=null, seller=Mirae Asset Securities Co. Ltd - Sungwon Hwang, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=300.0, sellQty=153.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,875,000, notationalCny=HKD, rate=null, premium=2,422,500.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=150.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=-3,922,500.00, product=European Call ], Leg [side=Buy, qty=300.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=+1,500,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=3.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=6,795, brokerageCny=HKD]
2016-10-24 15:45:09,158 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:09,159 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:09,159 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:09,161 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:48 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:10,033 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=51.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,625,000, notationalCny=HKD, rate=null, premium=807,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=50.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=+1,307,500.00, product=European Call ], Leg [side=Sell, qty=100.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=-500,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=1.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=700, brokerageCny=HKD]
2016-10-24 15:45:10,033 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:10,034 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:10,034 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:10,034 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 10:09:07 HKT 2016,Dora To <DoraTo@hkex.com.hk>,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:45:10,035 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 10:11:22 HKT 2016,Godefroy Coadou <godefroy.coadou@vectalis.com>,RE: Feed to UTS
2016-10-24 15:45:10,035 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 11:36:11 HKT 2016,EQD <EQD@celera-markets.com>,confo OCT
2016-10-24 15:45:10,035 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:25:05 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-24 15:45:11,068 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=Barclays Bank PLC - Jean-Guy Renard, seller=null, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.00 %, buyQty=1500.0, sellQty=1508.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=373,125,000, notationalCny=HKD, rate=null, premium=43,762,500.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=750.0, expiry=29-Dec-16, strike=10,000, price=425.00, premium=-15,937,500.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=29-Dec-16, strike=10,000, price=390.00, premium=-14,625,000.00, product=European Call ], Leg [side=Buy, qty=750.0, expiry=28-Dec-17, strike=10,000, price=1,092.00, premium=+40,950,000.00, product=European Put ], Leg [side=Buy, qty=750.0, expiry=28-Dec-17, strike=10,000, price=890.00, premium=+33,375,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=8.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=45,120, brokerageCny=HKD]
2016-10-24 15:45:11,069 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:11,069 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:11,070 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:11,071 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:25:11 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-24 15:45:11,919 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.00 %, buyQty=1508.0, sellQty=1500.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=373,125,000, notationalCny=HKD, rate=null, premium=43,762,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=750.0, expiry=29-Dec-16, strike=10,000, price=425.00, premium=+15,937,500.00, product=European Put ], Leg [side=Buy, qty=750.0, expiry=29-Dec-16, strike=10,000, price=390.00, premium=+14,625,000.00, product=European Call ], Leg [side=Sell, qty=750.0, expiry=28-Dec-17, strike=10,000, price=1,092.00, premium=-40,950,000.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=28-Dec-17, strike=10,000, price=890.00, premium=-33,375,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=8.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=22,388, brokerageCny=HKD]
2016-10-24 15:45:11,919 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:11,920 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:11,920 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:11,922 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:38:36 HKT 2016,eqd@celera-markets.com,Amendment Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-24 15:45:12,770 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=Barclays Bank PLC - Jean-Guy Renard, seller=null, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.30 %, buyQty=2000.0, sellQty=2013.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=497,500,000, notationalCny=HKD, rate=null, premium=58,350,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=1000.0, expiry=29-Dec-16, strike=10,000, price=425.00, premium=-21,250,000.00, product=European Put ], Leg [side=Sell, qty=1000.0, expiry=29-Dec-16, strike=10,000, price=390.00, premium=-19,500,000.00, product=European Call ], Leg [side=Buy, qty=1000.0, expiry=28-Dec-17, strike=10,000, price=1,092.00, premium=+54,600,000.00, product=European Put ], Leg [side=Buy, qty=1000.0, expiry=28-Dec-17, strike=10,000, price=890.00, premium=+44,500,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=13.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=60,195, brokerageCny=HKD]
2016-10-24 15:45:12,771 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:12,772 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:12,772 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:12,773 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:38:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-24 15:45:13,592 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+2.00 %, buyQty=505.0, sellQty=500.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=124,375,000, notationalCny=HKD, rate=null, premium=14,587,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=250.0, expiry=29-Dec-16, strike=10,000, price=425.00, premium=+5,312,500.00, product=European Put ], Leg [side=Buy, qty=250.0, expiry=29-Dec-16, strike=10,000, price=390.00, premium=+4,875,000.00, product=European Call ], Leg [side=Sell, qty=250.0, expiry=28-Dec-17, strike=10,000, price=1,092.00, premium=-13,650,000.00, product=European Put ], Leg [side=Sell, qty=250.0, expiry=28-Dec-17, strike=10,000, price=890.00, premium=-11,125,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=5.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=12,060, brokerageCny=HKD]
2016-10-24 15:45:13,593 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:13,593 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:13,594 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 02:36:53 HKT 2016,Asana <no-reply@asana.com>,Asana Dashboard for celera-markets.com
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 11:44:50 HKT 2016,Gregoire from Unito <gregoire.bois@unito.mail.intercom.io>,Welcome to Unito! Ready to sync your teams?
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 11:57:35 HKT 2016,Wrike <noreply@wrike.com>,Please complete your registration
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 14:32:17 HKT 2016,Andrew Filev <andrew.filev@wrike.com>,Ready?
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 00:11:58 HKT 2016,Liz Young <liz@team.wrike.com>,Run your next meeting with Wrike
2016-10-24 15:45:13,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 09:17:20 HKT 2016,=?utf-8?B?7J2064uk7Z2s?= <107918@truefriend.com>,Invoice from Celera Markets Limited
2016-10-24 15:45:13,596 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 09:30:57 HKT 2016,mLab <team@mlab.com>,Welcome to mLab!
2016-10-24 15:45:13,596 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 10:29:40 HKT 2016,Amazon Web Services <no-reply-aws@amazon.com>,Welcome to Amazon Web Services
2016-10-24 15:45:13,596 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-24 15:45:14,455 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=300.0, sellQty=48.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,125,000, notationalCny=HKD, rate=null, premium=6,517,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=150.0, expiry=29-Dec-16, strike=9,400, price=230.00, premium=+1,725,000.00, product=European Put ], Leg [side=Buy, qty=150.0, expiry=29-Dec-16, strike=9,400, price=639.00, premium=+4,792,500.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=48.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=2,400, brokerageCny=HKD]
2016-10-24 15:45:14,455 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:14,456 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:14,456 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:14,458 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:08 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-24 15:45:15,276 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=null, seller=Vivienne Court Trading Pty Ltd - Jeroen Plooster, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=32.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,750,000, notationalCny=HKD, rate=null, premium=4,345,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=29-Dec-16, strike=9,400, price=230.00, premium=-1,150,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=29-Dec-16, strike=9,400, price=639.00, premium=-3,195,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=32.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=4,320, brokerageCny=HKD]
2016-10-24 15:45:15,277 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:15,277 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:15,278 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:15,279 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-24 15:45:16,288 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=16.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,375,000, notationalCny=HKD, rate=null, premium=2,172,500.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=50.0, expiry=29-Dec-16, strike=9,400, price=230.00, premium=-575,000.00, product=European Put ], Leg [side=Sell, qty=50.0, expiry=29-Dec-16, strike=9,400, price=639.00, premium=-1,597,500.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=16.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:16,288 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:16,289 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:16,290 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:16,291 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 00:13:19 HKT 2016,Liz Young <liz@team.wrike.com>,See how Hootsuite Increased Productivity Using Wrike
2016-10-24 15:45:16,291 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 09:17:42 HKT 2016,Harvest <support@harvestapp.com>,Welcome to Harvest, Lloyd
2016-10-24 15:45:16,291 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:21:27 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-24 15:45:17,204 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=1,175.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=12.0, sellQty=400.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=30-Mar-17, strike=9,800, price=625.00, premium=-6,250,000.00, product=European Put ], Leg [side=Sell, qty=200.0, expiry=30-Mar-17, strike=9,800, price=550.00, premium=-5,500,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=12.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:17,205 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:17,206 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:17,206 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:17,207 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:21:34 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-24 15:45:18,116 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=UBS AG London Branch - Adrien Bordat, seller=null, price=1,175.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=300.0, sellQty=9.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,125,000, notationalCny=HKD, rate=null, premium=8,812,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=150.0, expiry=30-Mar-17, strike=9,800, price=625.00, premium=+4,687,500.00, product=European Put ], Leg [side=Buy, qty=150.0, expiry=30-Mar-17, strike=9,800, price=550.00, premium=+4,125,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=9.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=5,119, brokerageCny=HKD]
2016-10-24 15:45:18,116 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:18,117 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:18,117 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:18,119 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:22:17 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-24 15:45:18,952 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=1,170.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=100.0, sellQty=3.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,375,000, notationalCny=HKD, rate=null, premium=2,925,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=50.0, expiry=30-Mar-17, strike=9,800, price=620.00, premium=+1,550,000.00, product=European Put ], Leg [side=Buy, qty=50.0, expiry=30-Mar-17, strike=9,800, price=550.00, premium=+1,375,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=3.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=800, brokerageCny=HKD]
2016-10-24 15:45:18,952 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:18,953 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:18,953 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:18,954 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 09:39:43 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 240 P REF 256.50 (DEC16)
2016-10-24 15:45:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:19,779 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), buyer=UBS AG London Branch - Suhail Patel, seller=null, price=1.375, curncy=KRW, tradeDate=13-Oct-16, refPrice=256.50, id=CELERAEQ-2016-13161, delta=-15.00 %, buyQty=230.0, sellQty=null, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,650,000,000, notationalCny=KRW, rate=1,126.00, premium=137,500,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=100.0, expiry=08-Dec-16, strike=240, price=1.37, premium=+68,500,000, product=European Put ], Leg [side=Buy, qty=100.0, expiry=08-Dec-16, strike=240, price=1.38, premium=+69,000,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=30.0, price=256.5, future=KS200 DEC16]], brokerageFee=1,708, brokerageCny=USD]
2016-10-24 15:45:19,780 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:19,781 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:19,781 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:19,782 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 09:39:50 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 240 P REF 256.50 (DEC16)
2016-10-24 15:45:20,593 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), buyer=null, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.375, curncy=KRW, tradeDate=13-Oct-16, refPrice=256.50, id=CELERAEQ-2016-13161, delta=-15.00 %, buyQty=null, sellQty=230.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,650,000,000, notationalCny=KRW, rate=1,126.00, premium=137,500,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=100.0, expiry=08-Dec-16, strike=240, price=1.37, premium=-68,500,000, product=European Put ], Leg [side=Sell, qty=100.0, expiry=08-Dec-16, strike=240, price=1.38, premium=-69,000,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=256.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:45:20,593 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:20,594 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:20,594 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:20,594 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 14:20:28 HKT 2016,Guillaume Cunnington <Guillaume.Cunnington@celera-markets.com>,Re: Project status update
2016-10-24 15:45:20,594 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 00:07:08 HKT 2016,Liz Young <liz@team.wrike.com>,Reserve your spot today
2016-10-24 15:45:20,595 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 09:39:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 270 C REF 256 (DEC16)
2016-10-24 15:45:21,426 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 270 European Call REF 256 (DEC16), buyer=UBS AG London Branch - Suhail Patel, seller=null, price=10.225, curncy=KRW, tradeDate=14-Oct-16, refPrice=256, id=CELERAEQ-2016-13162, delta=+40.00 %, buyQty=300.0, sellQty=120.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,400,000,000, notationalCny=KRW, rate=1,128.00, premium=1,533,750,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=150.0, expiry=14-Dec-17, strike=270, price=10.20, premium=+765,000,000, product=European Call ], Leg [side=Buy, qty=150.0, expiry=14-Dec-17, strike=270, price=10.25, premium=+768,750,000, product=European Call ]], hedges=[Hedge [side=Sell, qty=120.0, price=256.0, future=KS200 DEC16]], brokerageFee=2,553, brokerageCny=USD]
2016-10-24 15:45:21,427 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:21,427 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:21,428 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:21,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 09:39:08 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 270 C REF 256 (DEC16)
2016-10-24 15:45:22,265 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 270 European Call REF 256 (DEC16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=10.225, curncy=KRW, tradeDate=14-Oct-16, refPrice=256, id=CELERAEQ-2016-13162, delta=+40.00 %, buyQty=120.0, sellQty=300.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,400,000,000, notationalCny=KRW, rate=1,128.00, premium=1,533,750,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=150.0, expiry=14-Dec-17, strike=270, price=10.20, premium=-765,000,000, product=European Call ], Leg [side=Sell, qty=150.0, expiry=14-Dec-17, strike=270, price=10.25, premium=-768,750,000, product=European Call ]], hedges=[Hedge [side=Buy, qty=120.0, price=256.0, future=KS200 DEC16]], brokerageFee=1,021, brokerageCny=USD]
2016-10-24 15:45:22,265 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:22,266 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:22,266 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:22,268 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:11:54 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:23,245 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=null, seller=Mirae Asset Securities Co. Ltd - Sungwon Hwang, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=300.0, sellQty=153.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,875,000, notationalCny=HKD, rate=null, premium=2,422,500.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=150.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=-3,922,500.00, product=European Call ], Leg [side=Buy, qty=300.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=+1,500,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=3.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=6,795, brokerageCny=HKD]
2016-10-24 15:45:23,245 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:23,246 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:23,246 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:23,247 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:02 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:24,154 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=51.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,625,000, notationalCny=HKD, rate=null, premium=807,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=50.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=+1,307,500.00, product=European Call ], Leg [side=Sell, qty=100.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=-500,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=1.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=700, brokerageCny=HKD]
2016-10-24 15:45:24,154 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:24,155 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:24,155 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:24,156 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:10 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-24 15:45:25,054 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=102.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=49,250,000, notationalCny=HKD, rate=null, premium=1,615,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=10,800, price=523.00, premium=+2,615,000.00, product=European Call ], Leg [side=Sell, qty=200.0, expiry=29-Dec-16, strike=10,800, price=100.00, premium=-1,000,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=2.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=1,478, brokerageCny=HKD]
2016-10-24 15:45:25,055 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:25,055 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:25,056 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:25,057 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:18 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-24 15:45:25,913 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=375.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29.0, sellQty=45.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=543,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=29.0, expiry=28-Sep-17, strike=21,000, price=942.00, premium=-1,365,900.00, product=European Put ], Leg [side=Buy, qty=29.0, expiry=28-Sep-17, strike=26,200, price=567.00, premium=+822,150.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:25,913 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:25,915 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:25,915 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:25,916 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:26 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-24 15:45:26,985 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=370.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=45.0, sellQty=29.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=536,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=29.0, expiry=28-Sep-17, strike=21,000, price=937.00, premium=+1,358,650.00, product=European Put ], Leg [side=Sell, qty=29.0, expiry=28-Sep-17, strike=26,200, price=567.00, premium=-822,150.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=464, brokerageCny=HKD]
2016-10-24 15:45:26,985 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:26,986 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:26,986 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:26,987 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:32 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-24 15:45:27,887 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=null, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=344.0, sellQty=160.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=160.0, expiry=08-Dec-16, strike=270, price=1.30, premium=-104,000,000, product=European Call ], Leg [side=Buy, qty=320.0, expiry=08-Dec-16, strike=290, price=0.15, premium=+24,000,000, product=European Call ]], hedges=[Hedge [side=Buy, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:45:27,887 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:27,888 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:27,888 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:27,889 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:41 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-24 15:45:28,800 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC - Andre Pinto, seller=null, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160.0, sellQty=344.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=160.0, expiry=08-Dec-16, strike=270, price=1.30, premium=+104,000,000, product=European Call ], Leg [side=Sell, qty=320.0, expiry=08-Dec-16, strike=290, price=0.15, premium=-24,000,000, product=European Call ]], hedges=[Hedge [side=Sell, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=740, brokerageCny=USD]
2016-10-24 15:45:28,801 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:28,802 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:28,802 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:28,803 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:46 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:29,680 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1500.0, sellQty=780.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=1500.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=+2,250,000.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=-3,637,500.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-24 15:45:29,681 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:29,681 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:29,682 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:29,683 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:52 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:30,607 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=36.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=156.0, sellQty=300.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=72,937,500, notationalCny=HKD, rate=null, premium=270,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=300.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-450,000.00, product=European Put ], Leg [side=Buy, qty=150.0, expiry=30-Mar-17, strike=7,600, price=96.00, premium=+720,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=6.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,100, brokerageCny=HKD]
2016-10-24 15:45:30,608 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:30,608 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:30,609 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:30,610 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:01 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:31,522 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=104.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=185,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-300,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=+485,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=4.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,648, brokerageCny=HKD]
2016-10-24 15:45:31,523 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:31,524 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:31,524 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:31,525 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:06 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:32,373 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1500.0, sellQty=780.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=1500.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=+2,250,000.00, product=European Put ], Leg [side=Sell, qty=750.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=-3,637,500.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-24 15:45:32,373 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:32,374 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:32,374 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:32,375 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:11 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-24 15:45:33,690 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=J.P. Morgan Securities PLC - Franck Cornille, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=520.0, sellQty=1000.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=243,125,000, notationalCny=HKD, rate=null, premium=925,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=1000.0, expiry=30-Mar-17, strike=6,000, price=30.00, premium=-1,500,000.00, product=European Put ], Leg [side=Buy, qty=500.0, expiry=30-Mar-17, strike=7,600, price=97.00, premium=+2,425,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=20.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=18,240, brokerageCny=HKD]
2016-10-24 15:45:33,691 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:33,691 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:33,692 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:33,692 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:16 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:34,628 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=570.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=127.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,850,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=8,000, price=430.00, premium=-2,150,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+5,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=1,600, brokerageCny=HKD]
2016-10-24 15:45:34,628 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:34,629 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:34,630 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:34,631 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:21 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:35,542 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=573.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=100.0, sellQty=127.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,865,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,000, price=427.00, premium=+2,135,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-5,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,724, brokerageCny=HKD]
2016-10-24 15:45:35,542 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:35,543 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:35,543 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:35,544 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:25 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:36,380 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=469.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=63.0, sellQty=53.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=25,705,000, notationalCny=HKD, rate=null, premium=1,242,850.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=53.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-1,404,500.00, product=European Put ], Leg [side=Buy, qty=53.0, expiry=28-Dec-17, strike=9,600, price=999.00, premium=+2,647,350.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=10.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=848, brokerageCny=HKD]
2016-10-24 15:45:36,380 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:36,381 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:36,381 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:36,382 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:33 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:37,588 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=153.0, sellQty=182.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,205,000, notationalCny=HKD, rate=null, premium=3,595,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=153.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+4,054,500.00, product=European Put ], Leg [side=Sell, qty=153.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-7,650,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=29.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:37,589 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:37,590 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:37,590 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:37,591 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:37 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:38,492 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=238.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,000,000, notationalCny=HKD, rate=null, premium=4,700,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-5,300,000.00, product=European Put ], Leg [side=Buy, qty=200.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+10,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=38.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=5,256, brokerageCny=HKD]
2016-10-24 15:45:38,492 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:38,492 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:38,493 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:38,494 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:41 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:39,420 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=100.0, sellQty=119.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,350,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+2,650,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-5,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=19.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,190, brokerageCny=HKD]
2016-10-24 15:45:39,420 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:39,421 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:39,421 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:39,422 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:46 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:40,512 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=500.0, sellQty=595.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=500.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=+13,250,000.00, product=European Put ], Leg [side=Sell, qty=500.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=-25,000,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=13,140, brokerageCny=HKD]
2016-10-24 15:45:40,513 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:40,514 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:40,514 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:40,515 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:51 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-24 15:45:41,379 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=595.0, sellQty=500.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=500.0, expiry=28-Dec-17, strike=8,400, price=530.00, premium=-13,250,000.00, product=European Put ], Leg [side=Buy, qty=500.0, expiry=28-Dec-17, strike=9,600, price=1,000.00, premium=+25,000,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=8,000, brokerageCny=HKD]
2016-10-24 15:45:41,379 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:41,380 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:41,380 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:41,381 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:56 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-24 15:45:42,261 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=null, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=150.0, sellQty=200.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=200.0, expiry=14-Dec-17, strike=200, price=3, premium=-300,000,000, product=European Put ], Leg [side=Buy, qty=100.0, expiry=14-Dec-17, strike=240, price=9.45, premium=+472,500,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:45:42,261 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:42,262 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:42,262 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:42,263 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:00 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-24 15:45:43,101 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=null, seller=Morgan Stanley & Co. International PLC - Andre Pinto, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200.0, sellQty=150.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=200.0, expiry=14-Dec-17, strike=200, price=3, premium=+300,000,000, product=European Put ], Leg [side=Sell, qty=100.0, expiry=14-Dec-17, strike=240, price=9.45, premium=-472,500,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-24 15:45:43,102 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:43,102 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:43,103 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:43,103 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:06 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: *** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-24 15:45:43,949 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=null, sellQty=50.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,575.00, premium=-1,968,750.00, product=European Put ], Leg [side=Sell, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,400.00, premium=-1,750,000.00, product=European Call ]], hedges=[], brokerageFee=500, brokerageCny=HKD]
2016-10-24 15:45:43,949 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:43,950 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:43,951 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:43,952 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:11 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: *** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-24 15:45:44,783 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=50.0, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,575.00, premium=+1,968,750.00, product=European Put ], Leg [side=Buy, qty=25.0, expiry=29-Jun-17, strike=23,400, price=1,400.00, premium=+1,750,000.00, product=European Call ]], hedges=[], brokerageFee=600, brokerageCny=HKD]
2016-10-24 15:45:44,783 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:44,784 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:45:44,785 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:44,786 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Sat Oct 15 18:31:16 HKT 2016,Amazon Web Services <aws-marketing-email-replies@amazon.com>,Activate 12 Months of AWS Free Tier
2016-10-24 15:45:44,786 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Sat Oct 15 21:31:51 HKT 2016,Harvest <support@harvestapp.com>,Harvest account check-in
2016-10-24 15:45:44,787 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 06:06:26 HKT 2016,Asana <no-reply@asana.com>,Asana Dashboard for celera-markets.com
2016-10-24 15:45:44,787 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:06 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-24 15:45:45,617 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=524.0, sellQty=800.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=191,000,000, notationalCny=HKD, rate=null, premium=6,700,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=800.0, expiry=29-Dec-16, strike=8,400, price=84.00, premium=-3,360,000.00, product=European Put ], Leg [side=Buy, qty=400.0, expiry=29-Dec-16, strike=9,800, price=503.00, premium=+10,060,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=124.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=5,730, brokerageCny=HKD]
2016-10-24 15:45:45,617 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:45,618 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:45,618 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:45,620 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-24 15:45:46,591 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=600.0, sellQty=393.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=143,250,000, notationalCny=HKD, rate=null, premium=5,025,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=600.0, expiry=29-Dec-16, strike=8,400, price=84.00, premium=+2,520,000.00, product=European Put ], Leg [side=Sell, qty=300.0, expiry=29-Dec-16, strike=9,800, price=503.00, premium=-7,545,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=93.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:46,592 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:46,592 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:46,593 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:46,594 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:20 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-24 15:45:47,442 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=null, seller=Vivienne Court Trading Pty Ltd - Jeroen Plooster, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=200.0, sellQty=131.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=47,750,000, notationalCny=HKD, rate=null, premium=1,675,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=200.0, expiry=29-Dec-16, strike=8,400, price=84.00, premium=+840,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=29-Dec-16, strike=9,800, price=503.00, premium=-2,515,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=31.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=3,110, brokerageCny=HKD]
2016-10-24 15:45:47,442 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:47,443 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:47,443 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:47,445 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 14:01:52 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 6600/8400 -1.5/1 PR REF 9,600 (OCT16)
2016-10-24 15:45:48,289 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=231.00, curncy=HKD, tradeDate=18-Oct-16, refPrice=9,600, id=CELERAEQ-2016-13164, delta=-12.00 %, buyQty=112.0, sellQty=150.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,000,000, notationalCny=HKD, rate=null, premium=1,155,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=150.0, expiry=28-Dec-17, strike=6,600, price=194.00, premium=-1,455,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,400, price=522.00, premium=+2,610,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=12.0, price=9600.0, future=HSCEI OCT16]], brokerageFee=1,440, brokerageCny=HKD]
2016-10-24 15:45:48,290 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:48,290 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:48,290 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:48,291 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 14:02:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 6600/8400 -1.5/1 PR REF 9,600 (OCT16)
2016-10-24 15:45:49,110 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), buyer=null, seller=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, price=231.00, curncy=HKD, tradeDate=18-Oct-16, refPrice=9,600, id=CELERAEQ-2016-13164, delta=-12.00 %, buyQty=375.0, sellQty=280.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=120,000,000, notationalCny=HKD, rate=null, premium=2,887,500.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=375.0, expiry=28-Dec-17, strike=6,600, price=194.00, premium=+3,637,500.00, product=European Put ], Leg [side=Sell, qty=250.0, expiry=28-Dec-17, strike=8,400, price=522.00, premium=-6,525,000.00, product=European Put ]], hedges=[Hedge [side=Sell, qty=30.0, price=9600.0, future=HSCEI OCT16]], brokerageFee=4,375, brokerageCny=HKD]
2016-10-24 15:45:49,110 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:49,111 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:49,111 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:49,112 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 14:02:09 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 6600/8400 -1.5/1 PR REF 9,600 (OCT16)
2016-10-24 15:45:49,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:45:49,920 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), buyer=Eclipse Futures (HK) Limited - Traders, seller=null, price=231.00, curncy=HKD, tradeDate=18-Oct-16, refPrice=9,600, id=CELERAEQ-2016-13164, delta=-12.00 %, buyQty=112.0, sellQty=150.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,000,000, notationalCny=HKD, rate=null, premium=1,155,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=150.0, expiry=28-Dec-17, strike=6,600, price=194.00, premium=-1,455,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=28-Dec-17, strike=8,400, price=522.00, premium=+2,610,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=12.0, price=9600.0, future=HSCEI OCT16]], brokerageFee=2,620, brokerageCny=HKD]
2016-10-24 15:45:49,920 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:49,921 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:49,921 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:49,922 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 14:02:16 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 6600/8400 -1.5/1 PR REF 9,600 (OCT16)
2016-10-24 15:45:50,737 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), buyer=Liquid Capital Australia Pty Ltd. - Julian Hoefflin, seller=null, price=231.00, curncy=HKD, tradeDate=18-Oct-16, refPrice=9,600, id=CELERAEQ-2016-13164, delta=-12.00 %, buyQty=56.0, sellQty=75.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,000,000, notationalCny=HKD, rate=null, premium=577,500.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=75.0, expiry=28-Dec-17, strike=6,600, price=194.00, premium=-727,500.00, product=European Put ], Leg [side=Buy, qty=50.0, expiry=28-Dec-17, strike=8,400, price=522.00, premium=+1,305,000.00, product=European Put ]], hedges=[Hedge [side=Buy, qty=6.0, price=9600.0, future=HSCEI OCT16]], brokerageFee=1,834, brokerageCny=HKD]
2016-10-24 15:45:50,738 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:50,738 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:50,738 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:50,739 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 14:19:23 HKT 2016,WINNIE.FUNG@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:45:50,740 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 15:57:04 HKT 2016,Dora To <DoraTo@hkex.com.hk>,[CEL] Installation of HKATS Testing Line (Site 02) 
2016-10-24 15:45:50,740 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 18 16:52:28 HKT 2016,Dora To <DoraTo@hkex.com.hk>,[CEL] Installation of HKATS Testing Line (Site 02) 
2016-10-24 15:45:50,740 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 08:47:44 HKT 2016,Guillaume Cunnington <Guillaume.Cunnington@celera-markets.com>,FW: Hi Eric , how are you ?
2016-10-24 15:45:50,740 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 10:40:45 HKT 2016,Gregoire from Unito <gregoire.bois@unito.mail.intercom.io>,Having trouble with your syncs?
2016-10-24 15:45:50,740 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:43:34 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:51,592 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=Yuanta Securities Korea Co., Ltd - Seungwoo Hwangbo, seller=null, price=349.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=600.0, sellQty=636.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=291,750,000, notationalCny=HKD, rate=null, premium=10,470,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=600.0, expiry=29-Jun-17, strike=10,400, price=351.00, premium=-10,530,000.00, product=European Call ], Leg [side=Buy, qty=600.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=+21,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=36.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=24,720, brokerageCny=HKD]
2016-10-24 15:45:51,592 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:51,592 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:51,592 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:51,593 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:43:43 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:52,435 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=349.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=212.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,250,000, notationalCny=HKD, rate=null, premium=3,490,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=200.0, expiry=29-Jun-17, strike=10,400, price=351.00, premium=+3,510,000.00, product=European Call ], Leg [side=Sell, qty=200.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=-7,000,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=12.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-24 15:45:52,436 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:52,436 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:52,436 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:52,437 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:43:50 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:53,276 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=null, seller=Deutsche Bank AG London Branch - Payton Ong, price=349.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=106.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=1,745,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=29-Jun-17, strike=10,400, price=351.00, premium=+1,755,000.00, product=European Call ], Leg [side=Sell, qty=100.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=-3,500,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=6.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,090, brokerageCny=HKD]
2016-10-24 15:45:53,276 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:53,277 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:53,277 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:53,278 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:43:57 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:54,140 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=349.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=742.0, sellQty=700.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=340,375,000, notationalCny=HKD, rate=null, premium=12,215,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=700.0, expiry=29-Jun-17, strike=10,400, price=351.00, premium=+12,285,000.00, product=European Call ], Leg [side=Sell, qty=700.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=-24,500,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=42.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=10,211, brokerageCny=HKD]
2016-10-24 15:45:54,140 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:54,140 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:54,141 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:54,142 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:45:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:54,982 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=348.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=200.0, sellQty=212.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,250,000, notationalCny=HKD, rate=null, premium=3,480,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=29-Jun-17, strike=10,400, price=352.00, premium=-3,520,000.00, product=European Call ], Leg [side=Buy, qty=200.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=+7,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=12.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,200, brokerageCny=HKD]
2016-10-24 15:45:54,982 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:54,982 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:54,983 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:54,983 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:50:25 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17/JUN18 10400 CTS REF 9,725 (OCT16)
2016-10-24 15:45:55,793 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), buyer=UBS AG London Branch - David Best, seller=null, price=349.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13165, delta=+6.00 %, buyQty=200.0, sellQty=212.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,250,000, notationalCny=HKD, rate=null, premium=3,490,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=29-Jun-17, strike=10,400, price=351.00, premium=-3,510,000.00, product=European Call ], Leg [side=Buy, qty=200.0, expiry=28-Jun-18, strike=10,400, price=700.00, premium=+7,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=12.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,636, brokerageCny=HKD]
2016-10-24 15:45:55,793 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:55,793 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:55,793 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:55,794 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:51:58 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC18 9600 SD REF 9,725 (OCT16)
2016-10-24 15:45:56,614 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=2,600.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13166, delta=+9.00 %, buyQty=200.0, sellQty=9.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=13,000,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=28-Dec-18, strike=9,600, price=1,400.00, premium=+7,000,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=28-Dec-18, strike=9,600, price=1,200.00, premium=+6,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=9.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,918, brokerageCny=HKD]
2016-10-24 15:45:56,615 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:56,615 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:56,615 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:56,617 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 11:52:34 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC18 9600 SD REF 9,725 (OCT16)
2016-10-24 15:45:57,484 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), buyer=null, seller=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, price=2,605.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13166, delta=+9.00 %, buyQty=9.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=13,025,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=28-Dec-18, strike=9,600, price=1,400.00, premium=-7,000,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Dec-18, strike=9,600, price=1,205.00, premium=-6,025,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=9.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,600, brokerageCny=HKD]
2016-10-24 15:45:57,484 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:57,485 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:57,485 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:57,486 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 15:00:32 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/JUN17 10000 -2/1 CTR REF 9,675 (OCT16)
2016-10-24 15:45:58,362 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=33.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13167, delta=-33.00 %, buyQty=133.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,375,000, notationalCny=HKD, rate=null, premium=165,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=200.0, expiry=29-Dec-16, strike=10,000, price=230.00, premium=-2,300,000.00, product=European Call ], Leg [side=Buy, qty=100.0, expiry=29-Jun-17, strike=10,000, price=493.00, premium=+2,465,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=33.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=3,996, brokerageCny=HKD]
2016-10-24 15:45:58,362 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:58,363 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:58,363 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:58,364 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 15:00:39 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/JUN17 10000 -2/1 CTR REF 9,675 (OCT16)
2016-10-24 15:45:59,193 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), buyer=null, seller=Mirae Asset Securities Co. Ltd - Sungwon Hwang, price=33.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13167, delta=-33.00 %, buyQty=200.0, sellQty=133.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,375,000, notationalCny=HKD, rate=null, premium=165,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=200.0, expiry=29-Dec-16, strike=10,000, price=230.00, premium=+2,300,000.00, product=European Call ], Leg [side=Sell, qty=100.0, expiry=29-Jun-17, strike=10,000, price=493.00, premium=-2,465,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=33.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=4,995, brokerageCny=HKD]
2016-10-24 15:45:59,193 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:45:59,193 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:45:59,194 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:45:59,195 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 15:21:48 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17 8000/11000 1/-1 RR REF 9,675 (OCT16)
2016-10-24 15:45:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:46:00,019 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=21.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13168, delta=-41.00 %, buyQty=100.0, sellQty=141.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,375,000, notationalCny=HKD, rate=null, premium=105,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=29-Jun-17, strike=8,000, price=230.00, premium=-1,150,000.00, product=European Put ], Leg [side=Buy, qty=100.0, expiry=29-Jun-17, strike=11,000, price=209.00, premium=+1,045,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=41.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=2,547, brokerageCny=HKD]
2016-10-24 15:46:00,020 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:00,020 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:00,020 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:00,022 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 15:23:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN17 8000/11000 1/-1 RR REF 9,675 (OCT16)
2016-10-24 15:46:00,852 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), buyer=Eclipse Futures (HK) Limited - Traders, seller=null, price=20.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13168, delta=-41.00 %, buyQty=141.0, sellQty=100.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,375,000, notationalCny=HKD, rate=null, premium=100,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=100.0, expiry=29-Jun-17, strike=8,000, price=230.00, premium=+1,150,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=29-Jun-17, strike=11,000, price=210.00, premium=-1,050,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=41.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=2,410, brokerageCny=HKD]
2016-10-24 15:46:00,852 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:00,853 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:00,853 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:00,853 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 16:06:44 HKT 2016,WINNIE.FUNG@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-24 15:46:00,854 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 16:12:27 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN18 9200 SD REF 9,675 (OCT16)
2016-10-24 15:46:01,706 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), buyer=Citigroup Global Markets Hong Kong Limited - Mohamed Lemsitef, seller=null, price=2,255.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13169, delta=+17.00 %, buyQty=306.0, sellQty=26.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,013,750, notationalCny=HKD, rate=null, premium=17,250,750.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=153.0, expiry=28-Jun-18, strike=9,200, price=1,055.00, premium=+8,070,750.00, product=European Put ], Leg [side=Buy, qty=153.0, expiry=28-Jun-18, strike=9,200, price=1,200.00, premium=+9,180,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=26.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=3,984, brokerageCny=HKD]
2016-10-24 15:46:01,707 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:01,707 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:01,707 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:01,708 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 16:12:35 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN18 9200 SD REF 9,675 (OCT16)
2016-10-24 15:46:02,735 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=2,255.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13169, delta=+17.00 %, buyQty=17.0, sellQty=200.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,375,000, notationalCny=HKD, rate=null, premium=11,275,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=100.0, expiry=28-Jun-18, strike=9,200, price=1,055.00, premium=-5,275,000.00, product=European Put ], Leg [side=Sell, qty=100.0, expiry=28-Jun-18, strike=9,200, price=1,200.00, premium=-6,000,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=17.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=3,255, brokerageCny=HKD]
2016-10-24 15:46:02,736 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:02,736 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:02,737 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:02,738 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 16:12:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI JUN18 9200 SD REF 9,675 (OCT16)
2016-10-24 15:46:03,583 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=2,255.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13169, delta=+17.00 %, buyQty=9.0, sellQty=106.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=25,638,750, notationalCny=HKD, rate=null, premium=5,975,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=53.0, expiry=28-Jun-18, strike=9,200, price=1,055.00, premium=-2,795,750.00, product=European Put ], Leg [side=Sell, qty=53.0, expiry=28-Jun-18, strike=9,200, price=1,200.00, premium=-3,180,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=9.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=1,538, brokerageCny=HKD]
2016-10-24 15:46:03,583 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:03,584 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:03,584 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:03,585 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 19 16:17:12 HKT 2016,eqd@celera-markets.com,Amendment Trade Confirmation HSCEI JUN18 9200 SD REF 9,675 (OCT16)
2016-10-24 15:46:04,415 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), buyer=Citigroup Global Markets Hong Kong Limited - Mohamed Lemsitef, seller=null, price=2,255.00, curncy=HKD, tradeDate=19-Oct-16, refPrice=9,675, id=CELERAEQ-2016-13169, delta=+17.00 %, buyQty=306.0, sellQty=26.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,013,750, notationalCny=HKD, rate=null, premium=17,250,750.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=153.0, expiry=28-Jun-18, strike=9,200, price=1,055.00, premium=+8,070,750.00, product=European Put ], Leg [side=Buy, qty=153.0, expiry=28-Jun-18, strike=9,200, price=1,200.00, premium=+9,180,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=26.0, price=9675.0, future=HSCEI OCT16]], brokerageFee=4,980, brokerageCny=HKD]
2016-10-24 15:46:04,416 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:04,416 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-24 15:46:04,416 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:04,417 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 11:08:31 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,725 (OCT16)
2016-10-24 15:46:05,247 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), buyer=null, seller=Liquid Capital Australia Pty Ltd. - Julian Hoefflin, price=1,115.00, curncy=HKD, tradeDate=20-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13170, delta=+4.00 %, buyQty=1.0, sellQty=50.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=12,156,250, notationalCny=HKD, rate=null, premium=1,393,750.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=25.0, expiry=30-Mar-17, strike=9,800, price=575.00, premium=-718,750.00, product=European Put ], Leg [side=Sell, qty=25.0, expiry=30-Mar-17, strike=9,800, price=540.00, premium=-675,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=1.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=714, brokerageCny=HKD]
2016-10-24 15:46:05,247 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:05,248 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:05,248 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:05,249 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 11:09:12 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,725 (OCT16)
2016-10-24 15:46:06,113 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), buyer=Optiver Australia Pty Ltd - William Funnell, seller=null, price=1,111.00, curncy=HKD, tradeDate=20-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13170, delta=+4.00 %, buyQty=50.0, sellQty=1.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=12,156,250, notationalCny=HKD, rate=null, premium=1,388,750.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=25.0, expiry=30-Mar-17, strike=9,800, price=575.00, premium=+718,750.00, product=European Put ], Leg [side=Buy, qty=25.0, expiry=30-Mar-17, strike=9,800, price=536.00, premium=+670,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=1.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=765, brokerageCny=HKD]
2016-10-24 15:46:06,114 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:06,114 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:06,114 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:06,115 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 15:28:01 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC18 9600 SD REF 9,725 (OCT16)
2016-10-24 15:46:06,953 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=2,585.00, curncy=HKD, tradeDate=20-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13171, delta=+8.00 %, buyQty=600.0, sellQty=24.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=145,875,000, notationalCny=HKD, rate=null, premium=38,775,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=300.0, expiry=28-Dec-18, strike=9,600, price=1,385.00, premium=+20,775,000.00, product=European Put ], Leg [side=Buy, qty=300.0, expiry=28-Dec-18, strike=9,600, price=1,200.00, premium=+18,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=24.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=8,753, brokerageCny=HKD]
2016-10-24 15:46:06,953 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:06,954 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:06,954 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:06,954 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 15:29:24 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC18 9600 SD REF 9,725 (OCT16)
2016-10-24 15:46:07,766 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=2,585.00, curncy=HKD, tradeDate=20-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13172, delta=+8.00 %, buyQty=400.0, sellQty=16.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,250,000, notationalCny=HKD, rate=null, premium=25,850,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=200.0, expiry=28-Dec-18, strike=9,600, price=1,385.00, premium=+13,850,000.00, product=European Put ], Leg [side=Buy, qty=200.0, expiry=28-Dec-18, strike=9,600, price=1,200.00, premium=+12,000,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=16.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=5,835, brokerageCny=HKD]
2016-10-24 15:46:07,766 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:07,767 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:07,767 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:07,768 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 15:32:05 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC18 9600 SD REF 9,725 (OCT16)
2016-10-24 15:46:08,595 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), buyer=null, seller=NH Investment & Securities Co Ltd - Daehyuk Yoo, price=2,585.00, curncy=HKD, tradeDate=20-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13171, delta=+8.00 %, buyQty=40.0, sellQty=1000.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=243,125,000, notationalCny=HKD, rate=null, premium=64,625,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=500.0, expiry=28-Dec-18, strike=9,600, price=1,385.00, premium=-34,625,000.00, product=European Put ], Leg [side=Sell, qty=500.0, expiry=28-Dec-18, strike=9,600, price=1,200.00, premium=-30,000,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=40.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=15,600, brokerageCny=HKD]
2016-10-24 15:46:08,595 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:08,596 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:08,596 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:08,597 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 20 16:05:55 HKT 2016,Jerry Kwok <Jerry.Kwok@celera-markets.com>,Server Room
2016-10-24 15:46:08,597 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 09:11:31 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 255/220 1/-1 PDIAG REF 257.50 (DEC16)
2016-10-24 15:46:09,428 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=null, price=2.25, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13173, delta=-31.00 %, buyQty=393.0, sellQty=300.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,625,000,000, notationalCny=KRW, rate=1,131.00, premium=337,500,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=300.0, expiry=08-Dec-16, strike=255, price=3.50, premium=+525,000,000, product=European Put ], Leg [side=Sell, qty=300.0, expiry=09-Mar-17, strike=220, price=1.25, premium=-187,500,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=93.0, price=257.5, future=KS200 DEC16]], brokerageFee=1,708, brokerageCny=USD]
2016-10-24 15:46:09,428 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:09,429 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:09,429 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:09,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 09:11:38 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 255/220 1/-1 PDIAG REF 257.50 (DEC16)
2016-10-24 15:46:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:46:10,244 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), buyer=null, seller=UBS AG London Branch - Suhail Patel, price=2.25, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13173, delta=-31.00 %, buyQty=300.0, sellQty=393.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,625,000,000, notationalCny=KRW, rate=1,131.00, premium=337,500,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=300.0, expiry=08-Dec-16, strike=255, price=3.50, premium=-525,000,000, product=European Put ], Leg [side=Buy, qty=300.0, expiry=09-Mar-17, strike=220, price=1.25, premium=+187,500,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=93.0, price=257.5, future=KS200 DEC16]], brokerageFee=2,561, brokerageCny=USD]
2016-10-24 15:46:10,244 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:10,245 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:10,245 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:10,246 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 09:15:30 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 255/220 1/-1 PDIAG REF 257.50 (DEC16)
2016-10-24 15:46:11,088 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=2.25, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13174, delta=-31.00 %, buyQty=262.0, sellQty=200.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,750,000,000, notationalCny=KRW, rate=1,131.00, premium=225,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=200.0, expiry=08-Dec-16, strike=255, price=3.50, premium=+350,000,000, product=European Put ], Leg [side=Sell, qty=200.0, expiry=09-Mar-17, strike=220, price=1.25, premium=-125,000,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=62.0, price=257.5, future=KS200 DEC16]], brokerageFee=683, brokerageCny=USD]
2016-10-24 15:46:11,088 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:11,089 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:11,089 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:11,090 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 09:15:37 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 255/220 1/-1 PDIAG REF 257.50 (DEC16)
2016-10-24 15:46:11,905 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), buyer=null, seller=UBS AG London Branch - Suhail Patel, price=2.25, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13174, delta=-31.00 %, buyQty=200.0, sellQty=262.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,750,000,000, notationalCny=KRW, rate=1,131.00, premium=225,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=200.0, expiry=08-Dec-16, strike=255, price=3.50, premium=-350,000,000, product=European Put ], Leg [side=Buy, qty=200.0, expiry=09-Mar-17, strike=220, price=1.25, premium=+125,000,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=62.0, price=257.5, future=KS200 DEC16]], brokerageFee=1,708, brokerageCny=USD]
2016-10-24 15:46:11,905 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:11,905 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:11,905 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:11,907 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 11:39:01 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/DEC17 240 PTS REF 257.50 (DEC16)
2016-10-24 15:46:12,722 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=null, price=8.80, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13175, delta=-20.00 %, buyQty=240.0, sellQty=200.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,750,000,000, notationalCny=KRW, rate=1,135.00, premium=880,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=200.0, expiry=08-Dec-16, strike=240, price=0.78, premium=-78,000,000, product=European Put ], Leg [side=Buy, qty=200.0, expiry=14-Dec-17, strike=240, price=9.58, premium=+958,000,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=40.0, price=257.5, future=KS200 DEC16]], brokerageFee=1,134, brokerageCny=USD]
2016-10-24 15:46:12,722 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:12,723 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:12,723 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:12,724 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 11:39:08 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/DEC17 240 PTS REF 257.50 (DEC16)
2016-10-24 15:46:13,545 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), buyer=null, seller=Morgan Stanley & Co. International PLC - Sirus Pishvaie, price=8.80, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13175, delta=-20.00 %, buyQty=200.0, sellQty=240.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,750,000,000, notationalCny=KRW, rate=1,135.00, premium=880,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=200.0, expiry=08-Dec-16, strike=240, price=0.78, premium=+78,000,000, product=European Put ], Leg [side=Sell, qty=200.0, expiry=14-Dec-17, strike=240, price=9.58, premium=-958,000,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=40.0, price=257.5, future=KS200 DEC16]], brokerageFee=907, brokerageCny=USD]
2016-10-24 15:46:13,545 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:13,545 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:13,546 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:13,546 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 13:25:43 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/DEC17 240 PTS REF 257.50 (DEC16)
2016-10-24 15:46:14,386 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=null, price=8.80, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13176, delta=-20.00 %, buyQty=120.0, sellQty=100.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,875,000,000, notationalCny=KRW, rate=1,135.00, premium=440,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=100.0, expiry=08-Dec-16, strike=240, price=0.78, premium=-39,000,000, product=European Put ], Leg [side=Buy, qty=100.0, expiry=14-Dec-17, strike=240, price=9.58, premium=+479,000,000, product=European Put ]], hedges=[Hedge [side=Buy, qty=20.0, price=257.5, future=KS200 DEC16]], brokerageFee=567, brokerageCny=USD]
2016-10-24 15:46:14,387 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:14,387 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:14,388 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:14,389 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 21 13:25:51 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/DEC17 240 PTS REF 257.50 (DEC16)
2016-10-24 15:46:15,236 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), buyer=null, seller=Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, price=8.80, curncy=KRW, tradeDate=21-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13176, delta=-20.00 %, buyQty=100.0, sellQty=120.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,875,000,000, notationalCny=KRW, rate=1,135.00, premium=440,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=100.0, expiry=08-Dec-16, strike=240, price=0.78, premium=+39,000,000, product=European Put ], Leg [side=Sell, qty=100.0, expiry=14-Dec-17, strike=240, price=9.58, premium=-479,000,000, product=European Put ]], hedges=[Hedge [side=Sell, qty=20.0, price=257.5, future=KS200 DEC16]], brokerageFee=1,134, brokerageCny=USD]
2016-10-24 15:46:15,236 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:15,236 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:15,236 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:15,237 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Sun Oct 23 18:24:23 HKT 2016,Amazon Web Services <aws-marketing-email-replies@amazon.com>,Activate 12 Months of AWS Free Tier
2016-10-24 15:46:15,237 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 03:30:18 HKT 2016,Asana <no-reply@asana.com>,Asana Dashboard for celera-markets.com
2016-10-24 15:46:15,237 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 14:00:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17/DEC17 10400 CTS REF 9,800 (OCT16)
2016-10-24 15:46:16,055 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=296.00, curncy=HKD, tradeDate=24-Oct-16, refPrice=9,800, id=CELERAEQ-2016-13177, delta=+5.00 %, buyQty=940.0, sellQty=987.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=460,600,000, notationalCny=HKD, rate=null, premium=13,912,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=940.0, expiry=30-Mar-17, strike=10,400, price=310.00, premium=-14,570,000.00, product=European Call ], Leg [side=Buy, qty=940.0, expiry=28-Dec-17, strike=10,400, price=606.00, premium=+28,482,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=47.0, price=9800.0, future=HSCEI OCT16]], brokerageFee=10,340, brokerageCny=HKD]
2016-10-24 15:46:16,056 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:16,056 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:16,057 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:16,058 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 14:00:20 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17/DEC17 10400 CTS REF 9,800 (OCT16)
2016-10-24 15:46:16,921 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=296.00, curncy=HKD, tradeDate=24-Oct-16, refPrice=9,800, id=CELERAEQ-2016-13177, delta=+5.00 %, buyQty=1050.0, sellQty=1000.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=490,000,000, notationalCny=HKD, rate=null, premium=14,800,000.00, premiumCny=HKD, legs=[Leg [side=Buy, qty=1000.0, expiry=30-Mar-17, strike=10,400, price=310.00, premium=+15,500,000.00, product=European Call ], Leg [side=Sell, qty=1000.0, expiry=28-Dec-17, strike=10,400, price=606.00, premium=-30,300,000.00, product=European Call ]], hedges=[Hedge [side=Buy, qty=50.0, price=9800.0, future=HSCEI OCT16]], brokerageFee=14,700, brokerageCny=HKD]
2016-10-24 15:46:16,921 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:16,921 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:16,921 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:16,922 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 14:00:25 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17/DEC17 10400 CTS REF 9,800 (OCT16)
2016-10-24 15:46:17,737 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), buyer=Eclipse Futures (HK) Limited - Traders, seller=null, price=296.00, curncy=HKD, tradeDate=24-Oct-16, refPrice=9,800, id=CELERAEQ-2016-13177, delta=+5.00 %, buyQty=60.0, sellQty=63.0, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,400,000, notationalCny=HKD, rate=null, premium=888,000.00, premiumCny=HKD, legs=[Leg [side=Sell, qty=60.0, expiry=30-Mar-17, strike=10,400, price=310.00, premium=-930,000.00, product=European Call ], Leg [side=Buy, qty=60.0, expiry=28-Dec-17, strike=10,400, price=606.00, premium=+1,818,000.00, product=European Call ]], hedges=[Hedge [side=Sell, qty=3.0, price=9800.0, future=HSCEI OCT16]], brokerageFee=1,230, brokerageCny=HKD]
2016-10-24 15:46:17,738 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:17,738 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:17,738 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:17,739 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 14:35:04 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 270 CTS REF 259 (DEC16)
2016-10-24 15:46:18,559 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=1.85, curncy=KRW, tradeDate=24-Oct-16, refPrice=259, id=CELERAEQ-2016-13178, delta=+10.00 %, buyQty=220.0, sellQty=200.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,900,000,000, notationalCny=KRW, rate=1,132.00, premium=185,000,000, premiumCny=KRW, legs=[Leg [side=Buy, qty=200.0, expiry=08-Dec-16, strike=270, price=0.60, premium=+60,000,000, product=European Call ], Leg [side=Sell, qty=200.0, expiry=09-Mar-17, strike=270, price=2.45, premium=-245,000,000, product=European Call ]], hedges=[Hedge [side=Buy, qty=20.0, price=259.0, future=KS200 DEC16]], brokerageFee=686, brokerageCny=USD]
2016-10-24 15:46:18,559 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:18,559 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:18,560 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:18,560 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 24 14:39:10 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16/MAR17 270 CTS REF 259 (DEC16)
2016-10-24 15:46:19,420 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), buyer=Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, seller=null, price=1.85, curncy=KRW, tradeDate=24-Oct-16, refPrice=259, id=CELERAEQ-2016-13178, delta=+10.00 %, buyQty=200.0, sellQty=220.0, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,900,000,000, notationalCny=KRW, rate=1,132.00, premium=185,000,000, premiumCny=KRW, legs=[Leg [side=Sell, qty=200.0, expiry=08-Dec-16, strike=270, price=0.60, premium=-60,000,000, product=European Call ], Leg [side=Buy, qty=200.0, expiry=09-Mar-17, strike=270, price=2.45, premium=+245,000,000, product=European Call ]], hedges=[Hedge [side=Sell, qty=20.0, price=259.0, future=KS200 DEC16]], brokerageFee=2,288, brokerageCny=USD]
2016-10-24 15:46:19,420 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-24 15:46:19,421 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs] in collection: tradeconfo
2016-10-24 15:46:19,421 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-24 15:46:21,446 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:46:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:46:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:46:49,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:46:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:47:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:47:22,096 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:47:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:47:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:47:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:47:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:48:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:48:21,389 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:48:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:48:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:48:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:49:02,122 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:49:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:49:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:49:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:49:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:49:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:50:02,296 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:50:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:50:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:50:31,340 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:50:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:50:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:51:01,673 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:51:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:51:19,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:51:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:51:41,672 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:51:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:51:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:52:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:52:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:52:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:52:40,746 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:52:49,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:52:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:53:11,208 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:53:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:53:29,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:53:42,372 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:53:49,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:53:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:54:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:54:20,850 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:54:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:54:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:54:51,680 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:54:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:55:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:55:22,770 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:55:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:55:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:55:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:55:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:56:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:56:21,398 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:56:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:56:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:56:50,759 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:56:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:57:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:57:21,402 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:57:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:57:39,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:57:51,573 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:57:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:58:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:58:22,364 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:58:29,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:58:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:58:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:58:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:59:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:59:21,433 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:59:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:59:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 15:59:52,094 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 15:59:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:00:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:00:20,828 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:00:29,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:00:39,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:00:50,786 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:00:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:01:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:01:23,572 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:01:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:01:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:01:49,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:01:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:02:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:02:20,754 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:02:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:02:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:02:51,356 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:02:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:03:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:03:20,641 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:03:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:03:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:03:50,814 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:03:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:04:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:04:21,528 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:04:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:04:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:04:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:04:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:05:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:05:20,780 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:05:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:05:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:05:50,674 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:05:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:06:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:06:21,170 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:06:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:06:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:06:50,756 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:06:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:07:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:07:21,506 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:07:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:07:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:07:52,006 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:07:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:08:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:08:21,406 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:08:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:08:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:08:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:08:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:09:09,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:09:20,963 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:09:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:09:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:09:51,069 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:09:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:10:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:10:21,630 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:10:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:10:39,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:10:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:10:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:11:11,902 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:11:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:11:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:11:39,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:11:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:11:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:12:11,515 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:12:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:12:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:12:40,669 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:12:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:12:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:13:11,524 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:13:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:13:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:13:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:13:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:13:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:14:12,409 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:14:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:14:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:14:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:14:51,350 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:14:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:15:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:15:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:15:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:15:42,885 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:15:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:15:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:16:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:16:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:16:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:16:43,275 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:16:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:16:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:17:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:17:22,333 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:17:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:17:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:17:49,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:18:01,436 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:18:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:18:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:18:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:18:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:18:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:19:01,863 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:19:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:19:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:19:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:19:39,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:19:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:20:02,338 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:20:09,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:20:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:20:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:20:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:20:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:21:01,618 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:21:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:21:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:21:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:21:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:21:52,232 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:21:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:22:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:22:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:22:29,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:22:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:22:51,625 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:22:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:23:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:23:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:23:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:23:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:23:51,380 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:23:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:24:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:24:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:24:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:24:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:24:53,116 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:24:59,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:25:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:25:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:25:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:25:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:25:51,276 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:25:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:26:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:26:19,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:26:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:26:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:26:51,690 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:26:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:27:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:27:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:27:29,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:27:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:27:51,246 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:27:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:28:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:28:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:28:32,172 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:28:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:28:49,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:28:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:29:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:29:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:29:31,401 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:29:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:29:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:29:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:30:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:30:21,959 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:30:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:30:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:30:49,711 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:30:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:31:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:31:21,465 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:31:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:31:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:31:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:31:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:32:09,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:32:21,430 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:32:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:32:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:32:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:32:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:33:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:33:22,065 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:33:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:33:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:33:49,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:34:01,761 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:34:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:34:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:34:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:34:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:34:49,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:35:01,674 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:35:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:35:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:35:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:35:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:35:51,306 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:35:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:36:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:36:20,956 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:36:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:36:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:36:51,336 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:36:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:37:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:37:21,679 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:37:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:37:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:37:51,577 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:37:59,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:38:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:38:19,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:38:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:38:39,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:38:51,418 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:38:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:39:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:39:21,026 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:39:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:39:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:39:51,743 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:39:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:40:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:40:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:40:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:40:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:40:51,508 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:40:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:41:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:41:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:41:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:41:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:41:51,489 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:41:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:42:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:42:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:42:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:42:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:42:53,982 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:42:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:43:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:43:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:43:29,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:43:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:43:51,393 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:43:59,707 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:44:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:44:19,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:44:29,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:44:41,701 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:44:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:44:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:45:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:45:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:45:31,904 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:45:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:45:49,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:45:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:46:10,819 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:46:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:46:29,708 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:46:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:46:50,890 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:46:59,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:47:09,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:47:20,836 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:47:29,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:47:39,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:47:51,580 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:47:59,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:48:09,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:48:19,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:48:32,835 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 206
2016-10-24 16:48:39,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:48:49,704 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:48:59,706 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:49:09,705 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-24 16:49:19,703 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
