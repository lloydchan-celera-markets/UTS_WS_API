2016-10-18 13:19:51,255 [main] INFO  com.uts.tradeconfo.main.Application.main(Application.java:20) - Read BasicConfigurator
2016-10-18 13:19:51,275 [main] DEBUG com.uts.tradeconfo.UtsEmailProcessor.<clinit>(UtsEmailProcessor.java:107) - Trade Confirmation,eqd@celera-markets.com,CELERAEQ-,.pdf,Sat Oct 01 00:00:00 HKT 2016,Fri Dec 31 00:00:00 HKT 9999
2016-10-18 13:19:51,276 [main] INFO  com.celera.core.configure.IOverrideConfig.overrideCxfSpiProvider(IOverrideConfig.java:17) - override javax.xml.ws.spi.Provider old[null] new[com.sun.xml.internal.ws.spi.ProviderImpl]
2016-10-18 13:19:51,400 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,403 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,403 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,408 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2016-10-18 13:19:51,423 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-10-18 13:19:51,448 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2016-10-18 13:19:51,454 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/datatypes.dtd=schemas/datatypes.dtd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://cxf.apache.org/schemas/configuration/http-jetty.xsd=schemas/configuration/http-jetty.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.w3.org/2001/XMLSchema.dtd=schemas/XMLSchema.dtd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2016-10-18 13:19:51,456 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2016-10-18 13:19:51,503 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2016-10-18 13:19:51,510 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2016-10-18 13:19:51,515 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2016-10-18 13:19:51,516 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2016-10-18 13:19:51,529 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2016-10-18 13:19:51,541 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://cxf.apache.org/transports/http-jetty/configuration=org.apache.cxf.transport.http_jetty.spring.NamespaceHandler, http://www.w3.org/2006/07/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxws=org.apache.cxf.jaxws.spring.NamespaceHandler, http://cxf.apache.org/policy=org.apache.cxf.ws.policy.spring.NamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/ws/addressing=org.apache.cxf.ws.addressing.spring.NamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://schemas.xmlsoap.org/ws/2004/09/policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.w3.org/ns/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler}
2016-10-18 13:19:51,567 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,567 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,568 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,572 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2016-10-18 13:19:51,585 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2016-10-18 13:19:51,593 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2016-10-18 13:19:51,608 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2016-10-18 13:19:51,610 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2016-10-18 13:19:51,624 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2016-10-18 13:19:51,626 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2016-10-18 13:19:51,631 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2016-10-18 13:19:51,645 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,645 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,646 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,650 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-18 13:19:51,650 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2016-10-18 13:19:51,652 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]]
2016-10-18 13:19:51,653 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2016-10-18 13:19:51,654 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2016-10-18 13:19:51,656 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2016-10-18 13:19:51,657 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2016-10-18 13:19:51,662 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,662 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,662 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,663 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-18 13:19:51,664 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2016-10-18 13:19:51,664 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2016-10-18 13:19:51,667 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-18 13:19:51,668 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,669 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,669 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,669 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-18 13:19:51,669 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2016-10-18 13:19:51,670 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2016-10-18 13:19:51,670 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-18 13:19:51,671 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,671 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,671 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,672 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-18 13:19:51,672 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2016-10-18 13:19:51,672 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2016-10-18 13:19:51,673 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-18 13:19:51,674 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-10-18 13:19:51,674 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-10-18 13:19:51,674 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-10-18 13:19:51,675 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-10-18 13:19:51,675 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2016-10-18 13:19:51,675 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2016-10-18 13:19:51,676 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-10-18 13:19:51,676 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 12 bean definitions from location pattern [spring-config.xml]
2016-10-18 13:19:51,676 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@5cbc508c: startup date [Tue Oct 18 13:19:51 HKT 2016]; root of context hierarchy
2016-10-18 13:19:51,677 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@5cbc508c: org.springframework.beans.factory.support.DefaultListableBeanFactory@21a947fe: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,hedgeRepo,personRepo,addressRepo,tradeConfoRepo]; root of factory hierarchy
2016-10-18 13:19:51,691 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-18 13:19:51,691 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-18 13:19:51,723 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2016-10-18 13:19:51,747 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-18 13:19:51,747 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-18 13:19:51,747 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-18 13:19:51,747 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2016-10-18 13:19:51,748 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-18 13:19:51,750 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-18 13:19:51,750 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-18 13:19:51,751 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2016-10-18 13:19:51,751 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-18 13:19:51,753 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2133814f]
2016-10-18 13:19:51,755 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@75f32542]
2016-10-18 13:19:51,757 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@21a947fe: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,hedgeRepo,personRepo,addressRepo,tradeConfoRepo]; root of factory hierarchy
2016-10-18 13:19:51,757 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2016-10-18 13:19:51,757 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2016-10-18 13:19:51,760 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2016-10-18 13:19:51,772 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2016-10-18 13:19:51,856 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2016-10-18 13:19:51,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-10-18 13:19:51,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-10-18 13:19:51,856 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2016-10-18 13:19:51,856 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2016-10-18 13:19:51,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2016-10-18 13:19:51,859 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2016-10-18 13:19:51,859 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2016-10-18 13:19:51,862 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2016-10-18 13:19:51,864 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2016-10-18 13:19:51,937 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2016-10-18 13:19:51,943 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2016-10-18 13:19:51,943 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2016-10-18 13:19:51,943 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-10-18 13:19:51,943 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2016-10-18 13:19:51,944 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2016-10-18 13:19:51,944 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2016-10-18 13:19:51,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2016-10-18 13:19:51,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2016-10-18 13:19:51,949 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2016-10-18 13:19:51,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2016-10-18 13:19:51,951 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2016-10-18 13:19:51,958 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7ea9e1e2'
2016-10-18 13:19:51,958 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#24fcf36f'
2016-10-18 13:19:51,962 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#24fcf36f'
2016-10-18 13:19:51,963 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#24fcf36f'
2016-10-18 13:19:51,965 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7ea9e1e2'
2016-10-18 13:19:51,965 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3c73951'
2016-10-18 13:19:51,968 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3c73951'
2016-10-18 13:19:51,968 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-18 13:19:51,968 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2016-10-18 13:19:51,990 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2016-10-18 13:19:52,009 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@3c77d488]
2016-10-18 13:19:52,012 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2016-10-18 13:19:52,013 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2016-10-18 13:19:52,013 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2016-10-18 13:19:52,013 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2016-10-18 13:19:52,013 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2ddc9a9f'
2016-10-18 13:19:52,014 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#298a5e20'
2016-10-18 13:19:52,014 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#298a5e20'
2016-10-18 13:19:52,014 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#298a5e20'
2016-10-18 13:19:52,015 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2ddc9a9f'
2016-10-18 13:19:52,015 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#46cdf8bd'
2016-10-18 13:19:52,015 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#46cdf8bd'
2016-10-18 13:19:52,015 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-18 13:19:52,016 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2016-10-18 13:19:52,029 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2016-10-18 13:19:52,034 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2016-10-18 13:19:52,048 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@16eb3ea3]
2016-10-18 13:19:52,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2016-10-18 13:19:52,051 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2016-10-18 13:19:52,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2016-10-18 13:19:52,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2016-10-18 13:19:52,055 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#33bc72d1'
2016-10-18 13:19:52,055 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1a75e76a'
2016-10-18 13:19:52,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#1a75e76a'
2016-10-18 13:19:52,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1a75e76a'
2016-10-18 13:19:52,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#33bc72d1'
2016-10-18 13:19:52,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#353352b6'
2016-10-18 13:19:52,058 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#353352b6'
2016-10-18 13:19:52,058 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-18 13:19:52,058 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2016-10-18 13:19:52,059 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@57a78e3]
2016-10-18 13:19:52,061 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2016-10-18 13:19:52,062 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:19:52,062 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2016-10-18 13:19:52,062 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2016-10-18 13:19:52,062 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6fa51cd4'
2016-10-18 13:19:52,062 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2767e23c'
2016-10-18 13:19:52,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#2767e23c'
2016-10-18 13:19:52,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2767e23c'
2016-10-18 13:19:52,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6fa51cd4'
2016-10-18 13:19:52,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#5386659f'
2016-10-18 13:19:52,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#5386659f'
2016-10-18 13:19:52,064 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-10-18 13:19:52,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2016-10-18 13:19:52,081 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2016-10-18 13:19:52,084 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@6e9a5ed8]
2016-10-18 13:19:52,087 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2016-10-18 13:19:52,088 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@183ec003]
2016-10-18 13:19:52,089 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2016-10-18 13:19:52,090 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-10-18 13:19:52,090 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-10-18 13:19:52,090 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-10-18 13:19:52,091 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:19:52,103 [main] DEBUG org.springframework.data.mongodb.repository.query.StringBasedMongoQuery.createQuery(StringBasedMongoQuery.java:135) - Created query { "tradeDate" : { "$gte" : "01-Oct-16" , "$lte" : "31-Dec-99"}}
2016-10-18 13:19:52,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1719) - find using query: { "tradeDate" : { "$gte" : "01-Oct-16" , "$lte" : "31-Dec-99"}} fields: null for class: class com.celera.mongo.entity.TradeConfo in collection: tradeconfo
2016-10-18 13:19:52,111 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:19:53,981 [main] INFO  com.uts.tradeconfo.UtsEmailProcessor.loadTradeConfo(UtsEmailProcessor.java:162) - load 38 tradeConfo
2016-10-18 13:19:53,981 [main] INFO  com.celera.adapter.EmailServiceImpl.start(EmailServiceImpl.java:94) - Start poll email every 10 seconds
2016-10-18 13:19:56,993 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:20:03,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:13,987 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:23,876 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 10:45:13 HKT 2016,Dora To <DoraTo@hkex.com.hk>,RE: CG SDNet testing line connectivity
2016-10-18 13:20:23,877 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 10:49:20 HKT 2016,CHRISTINE.WO@hgc.com.hk,RE: CG SDNet testing line connectivity
2016-10-18 13:20:23,877 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 11:09:04 HKT 2016,WINNIE.FUNG@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-18 13:20:23,877 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 12:48:56 HKT 2016,no-reply@notifications.symphony.com,Lloyd Chan, Welcome to Symphony
2016-10-18 13:20:23,877 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 12:58:03 HKT 2016,Symphony <no-reply@notifications.symphony.com>,Lloyd Chan Symphony Email Verification.
2016-10-18 13:20:23,878 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 15:51:53 HKT 2016,Godefroy Coadou <godefroy.coadou@vectalis.com>,FW: Feed to UTS
2016-10-18 13:20:23,878 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 16:03:48 HKT 2016,eqd@celera-markets.com,*** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-18 13:20:23,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:25,021 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=25, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg 1 Buy 25 29-Jun-17 23,400 European Put 1,575.00 +1,968,750.00, Leg 2 Buy 25 29-Jun-17 23,400 European Call 1,400.00 +1,750,000.00], hedges=[], brokerageFee=600, brokerageCny=HKD]
2016-10-18 13:20:25,034 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:25,038 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:25,039 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:25,044 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 16:03:54 HKT 2016,eqd@celera-markets.com,*** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-18 13:20:26,041 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=null, sellQty=25, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg 1 Sell 25 29-Jun-17 23,400 European Put 1,575.00 -1,968,750.00, Leg 2 Sell 25 29-Jun-17 23,400 European Call 1,400.00 -1,750,000.00], hedges=[], brokerageFee=500, brokerageCny=HKD]
2016-10-18 13:20:26,041 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:26,042 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:26,042 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:26,044 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 17:00:02 HKT 2016,Dora To <DoraTo@hkex.com.hk>,[[CEL] CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-18 13:20:26,044 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 20:58:56 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:26,044 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 03 22:32:06 HKT 2016,Asana <learn@connect.asana.com>,Tools you use, integrated with Asana
2016-10-18 13:20:26,044 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 09:55:19 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-18 13:20:27,091 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=Morgan Stanley & Co. International PLC, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200, sellQty=100, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg 1 Sell 200 14-Dec-17 200 European Put 3 -300,000,000, Leg 2 Buy 100 14-Dec-17 240 European Put 9.45 +472,500,000], hedges=[Hedge [side=Buy, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:20:27,092 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:27,093 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:27,093 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:27,094 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 09:55:24 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-18 13:20:28,274 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd, seller=Morgan Stanley & Co. International PLC - Andre Pinto, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200, sellQty=100, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg 1 Buy 200 14-Dec-17 200 European Put 3 +300,000,000, Leg 2 Sell 100 14-Dec-17 240 European Put 9.45 -472,500,000], hedges=[Hedge [side=Sell, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:20:28,275 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:28,276 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:28,276 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:28,277 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:23 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:29,568 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=500, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg 1 Sell 500 28-Dec-17 8,400 European Put 530.00 -13,250,000.00, Leg 2 Buy 500 28-Dec-17 9,600 European Put 1,000.00 +25,000,000.00], hedges=[Hedge [side=Buy, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=8,000, brokerageCny=HKD]
2016-10-18 13:20:29,569 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:29,569 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:29,570 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:29,571 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:29 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:30,657 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=500, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg 1 Buy 500 28-Dec-17 8,400 European Put 530.00 +13,250,000.00, Leg 2 Sell 500 28-Dec-17 9,600 European Put 1,000.00 -25,000,000.00], hedges=[Hedge [side=Sell, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=13,140, brokerageCny=HKD]
2016-10-18 13:20:30,658 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:30,659 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:30,659 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:30,660 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:35 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:31,850 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,350,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 8,400 European Put 530.00 +2,650,000.00, Leg 2 Sell 100 28-Dec-17 9,600 European Put 1,000.00 -5,000,000.00], hedges=[Hedge [side=Sell, qty=19.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,190, brokerageCny=HKD]
2016-10-18 13:20:31,851 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:31,852 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:31,852 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:31,853 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:32,832 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=200, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,000,000, notationalCny=HKD, rate=null, premium=4,700,000.00, premiumCny=HKD, legs=[Leg 1 Sell 200 28-Dec-17 8,400 European Put 530.00 -5,300,000.00, Leg 2 Buy 200 28-Dec-17 9,600 European Put 1,000.00 +10,000,000.00], hedges=[Hedge [side=Buy, qty=38.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=5,256, brokerageCny=HKD]
2016-10-18 13:20:32,832 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:32,833 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:32,833 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:32,834 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 10:59:48 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:33,950 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=153, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,205,000, notationalCny=HKD, rate=null, premium=3,595,500.00, premiumCny=HKD, legs=[Leg 1 Buy 153 28-Dec-17 8,400 European Put 530.00 +4,054,500.00, Leg 2 Sell 153 28-Dec-17 9,600 European Put 1,000.00 -7,650,000.00], hedges=[Hedge [side=Sell, qty=29.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:20:33,950 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:33,951 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:33,952 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:33,953 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:01:32 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:33,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:34,922 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=469.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=53, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=25,705,000, notationalCny=HKD, rate=null, premium=1,242,850.00, premiumCny=HKD, legs=[Leg 1 Sell 53 28-Dec-17 8,400 European Put 530.00 -1,404,500.00, Leg 2 Buy 53 28-Dec-17 9,600 European Put 999.00 +2,647,350.00], hedges=[Hedge [side=Buy, qty=10.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=848, brokerageCny=HKD]
2016-10-18 13:20:34,922 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:34,923 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:34,924 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:34,925 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:14:44 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:35,891 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=573.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=null, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,865,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 8,000 European Put 427.00 +2,135,000.00, Leg 2 Sell 100 28-Dec-17 9,600 European Put 1,000.00 -5,000,000.00], hedges=[Hedge [side=Sell, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,724, brokerageCny=HKD]
2016-10-18 13:20:35,891 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:35,892 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:35,892 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:35,893 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 11:33:15 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-18 13:20:36,892 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=570.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=100, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,850,000.00, premiumCny=HKD, legs=[Leg 1 Sell 100 28-Dec-17 8,000 European Put 430.00 -2,150,000.00, Leg 2 Buy 100 28-Dec-17 9,600 European Put 1,000.00 +5,000,000.00], hedges=[Hedge [side=Buy, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=1,600, brokerageCny=HKD]
2016-10-18 13:20:36,893 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:36,894 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:36,894 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:36,895 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 13:57:32 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:20:38,024 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=J.P. Morgan Securities PLC - Franck Cornille, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,000, sellQty=500, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=243,125,000, notationalCny=HKD, rate=null, premium=925,000.00, premiumCny=HKD, legs=[Leg 1 Sell 1,000 30-Mar-17 6,000 European Put 30.00 -1,500,000.00, Leg 2 Buy 500 30-Mar-17 7,600 European Put 97.00 +2,425,000.00], hedges=[Hedge [side=Buy, qty=20.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=18,240, brokerageCny=HKD]
2016-10-18 13:20:38,025 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:38,030 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:38,031 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:38,032 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:05:49 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:20:39,049 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,500, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg 1 Buy 1,500 30-Mar-17 6,000 European Put 30.00 +2,250,000.00, Leg 2 Sell 750 30-Mar-17 7,600 European Put 97.00 -3,637,500.00], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-18 13:20:39,050 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:39,051 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:39,051 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:39,052 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:05:55 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:20:40,200 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=200, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=185,000.00, premiumCny=HKD, legs=[Leg 1 Sell 200 30-Mar-17 6,000 European Put 30.00 -300,000.00, Leg 2 Buy 100 30-Mar-17 7,600 European Put 97.00 +485,000.00], hedges=[Hedge [side=Buy, qty=4.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,648, brokerageCny=HKD]
2016-10-18 13:20:40,200 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:40,201 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:40,203 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:40,204 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:07:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:20:41,174 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=36.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=300, sellQty=150, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=72,937,500, notationalCny=HKD, rate=null, premium=270,000.00, premiumCny=HKD, legs=[Leg 1 Sell 300 30-Mar-17 6,000 European Put 30.00 -450,000.00, Leg 2 Buy 150 30-Mar-17 7,600 European Put 96.00 +720,000.00], hedges=[Hedge [side=Buy, qty=6.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,100, brokerageCny=HKD]
2016-10-18 13:20:41,175 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:41,176 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:41,176 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:41,177 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 14:08:56 HKT 2016,Jerry Kwok <Jerry.Kwok@celera-markets.com>,Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:20:42,167 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,500, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg 1 Buy 1,500 30-Mar-17 6,000 European Put 30.00 +2,250,000.00, Leg 2 Sell 750 30-Mar-17 7,600 European Put 97.00 -3,637,500.00], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-18 13:20:42,167 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:42,168 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:42,168 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:42,169 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 15:56:10 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:42,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 16:06:39 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:42,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 17:06:19 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:42,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 04 22:57:15 HKT 2016,Vectalis Support <support@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:42,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 09:54:09 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-18 13:20:43,133 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC - Andre Pinto, seller=Optiver Australia Pty Ltd, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160, sellQty=320, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg 1 Buy 160 08-Dec-16 270 European Call 1.30 +104,000,000, Leg 2 Sell 320 08-Dec-16 290 European Call 0.15 -24,000,000], hedges=[Hedge [side=Sell, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=740, brokerageCny=USD]
2016-10-18 13:20:43,134 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:43,134 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:43,134 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:43,136 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 09:54:16 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-18 13:20:43,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:44,094 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160, sellQty=320, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg 1 Sell 160 08-Dec-16 270 European Call 1.30 -104,000,000, Leg 2 Buy 320 08-Dec-16 290 European Call 0.15 +24,000,000], hedges=[Hedge [side=Buy, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:20:44,094 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:44,095 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:44,095 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:44,096 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 10:59:57 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-18 13:20:45,070 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=370.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29, sellQty=29, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=536,500.00, premiumCny=HKD, legs=[Leg 1 Buy 29 28-Sep-17 21,000 European Put 937.00 +1,358,650.00, Leg 2 Sell 29 28-Sep-17 26,200 European Call 567.00 -822,150.00], hedges=[Hedge [side=Buy, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=464, brokerageCny=HKD]
2016-10-18 13:20:45,070 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:45,071 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:45,071 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:45,073 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 11:00:51 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-18 13:20:46,243 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=375.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29, sellQty=29, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=543,750.00, premiumCny=HKD, legs=[Leg 1 Sell 29 28-Sep-17 21,000 European Put 942.00 -1,365,900.00, Leg 2 Buy 29 28-Sep-17 26,200 European Call 567.00 +822,150.00], hedges=[Hedge [side=Sell, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:20:46,243 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:46,244 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:46,244 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:46,245 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 13:07:46 HKT 2016,CHRISTINE.WO@hgc.com.hk,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-18 13:20:46,246 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:35 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:20:47,208 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=100, sellQty=200, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=49,250,000, notationalCny=HKD, rate=null, premium=1,615,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 10,800 European Call 523.00 +2,615,000.00, Leg 2 Sell 200 29-Dec-16 10,800 European Call 100.00 -1,000,000.00], hedges=[Hedge [side=Buy, qty=2.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=1,478, brokerageCny=HKD]
2016-10-18 13:20:47,209 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:47,209 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:47,210 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:47,211 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:41 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:20:48,185 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=null, seller=Mirae Asset Securities Co. Ltd - Sungwon Hwang, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=150, sellQty=300, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,875,000, notationalCny=HKD, rate=null, premium=2,422,500.00, premiumCny=HKD, legs=[Leg 1 Sell 150 28-Dec-17 10,800 European Call 523.00 -3,922,500.00, Leg 2 Buy 300 29-Dec-16 10,800 European Call 100.00 +1,500,000.00], hedges=[Hedge [side=Sell, qty=3.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=6,795, brokerageCny=HKD]
2016-10-18 13:20:48,186 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:48,187 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:48,187 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:48,188 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 05 16:09:48 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:20:49,167 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=50, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,625,000, notationalCny=HKD, rate=null, premium=807,500.00, premiumCny=HKD, legs=[Leg 1 Buy 50 28-Dec-17 10,800 European Call 523.00 +1,307,500.00, Leg 2 Sell 100 29-Dec-16 10,800 European Call 100.00 -500,000.00], hedges=[Hedge [side=Buy, qty=1.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=700, brokerageCny=HKD]
2016-10-18 13:20:49,168 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:49,168 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:49,169 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:49,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 10:09:07 HKT 2016,Dora To <DoraTo@hkex.com.hk>,RE: CG SDNet testing line connectivity - Celera Markets Limited 
2016-10-18 13:20:49,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 10:11:22 HKT 2016,Godefroy Coadou <godefroy.coadou@vectalis.com>,RE: Feed to UTS
2016-10-18 13:20:49,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 06 11:36:11 HKT 2016,EQD <EQD@celera-markets.com>,confo OCT
2016-10-18 13:20:49,170 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:25:05 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-18 13:20:50,187 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=Barclays Bank PLC - Jean-Guy Renard, seller=null, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.00 %, buyQty=750, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=373,125,000, notationalCny=HKD, rate=null, premium=43,762,500.00, premiumCny=HKD, legs=[Leg 1 Sell 750 29-Dec-16 10,000 European Put 425.00 -15,937,500.00, Leg 2 Sell 750 29-Dec-16 10,000 European Call 390.00 -14,625,000.00, Leg 3 Buy 750 28-Dec-17 10,000 European Put 1,092.00 +40,950,000.00, Leg 4 Buy 750 28-Dec-17 10,000 European Call 890.00 +33,375,000.00], hedges=[Hedge [side=Sell, qty=8.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=45,120, brokerageCny=HKD]
2016-10-18 13:20:50,187 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:50,187 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:50,188 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:50,189 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:25:11 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-18 13:20:51,485 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=null, seller=Société Générale (HK) Limited - Sourabh Shaha, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.00 %, buyQty=750, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=373,125,000, notationalCny=HKD, rate=null, premium=43,762,500.00, premiumCny=HKD, legs=[Leg 1 Buy 750 29-Dec-16 10,000 European Put 425.00 +15,937,500.00, Leg 2 Buy 750 29-Dec-16 10,000 European Call 390.00 +14,625,000.00, Leg 3 Sell 750 28-Dec-17 10,000 European Put 1,092.00 -40,950,000.00, Leg 4 Sell 750 28-Dec-17 10,000 European Call 890.00 -33,375,000.00], hedges=[Hedge [side=Buy, qty=8.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=22,388, brokerageCny=HKD]
2016-10-18 13:20:51,486 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:51,486 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:51,486 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:51,489 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:38:36 HKT 2016,eqd@celera-markets.com,Amendment Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-18 13:20:52,456 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=Barclays Bank PLC - Jean-Guy Renard, seller=null, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+1.30 %, buyQty=1,000, sellQty=1,000, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=497,500,000, notationalCny=HKD, rate=null, premium=58,350,000.00, premiumCny=HKD, legs=[Leg 1 Sell 1,000 29-Dec-16 10,000 European Put 425.00 -21,250,000.00, Leg 2 Sell 1,000 29-Dec-16 10,000 European Call 390.00 -19,500,000.00, Leg 3 Buy 1,000 28-Dec-17 10,000 European Put 1,092.00 +54,600,000.00, Leg 4 Buy 1,000 28-Dec-17 10,000 European Call 890.00 +44,500,000.00], hedges=[Hedge [side=Sell, qty=13.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=60,195, brokerageCny=HKD]
2016-10-18 13:20:52,457 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:52,457 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:52,458 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:52,459 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 07 11:38:42 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16/DEC17 10000 -1/1 SDTS REF 9,950 (OCT16)
2016-10-18 13:20:53,445 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=1,167.00, curncy=HKD, tradeDate=07-Oct-16, refPrice=9,950, id=CELERAEQ-2016-13158, delta=+2.00 %, buyQty=250, sellQty=250, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=124,375,000, notationalCny=HKD, rate=null, premium=14,587,500.00, premiumCny=HKD, legs=[Leg 1 Buy 250 29-Dec-16 10,000 European Put 425.00 +5,312,500.00, Leg 2 Buy 250 29-Dec-16 10,000 European Call 390.00 +4,875,000.00, Leg 3 Sell 250 28-Dec-17 10,000 European Put 1,092.00 -13,650,000.00, Leg 4 Sell 250 28-Dec-17 10,000 European Call 890.00 -11,125,000.00], hedges=[Hedge [side=Buy, qty=5.0, price=9950.0, future=HSCEI OCT16]], brokerageFee=12,060, brokerageCny=HKD]
2016-10-18 13:20:53,446 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:53,446 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:53,447 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:53,448 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 02:36:53 HKT 2016,Asana <no-reply@asana.com>,Asana Dashboard for celera-markets.com
2016-10-18 13:20:53,448 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 11:44:50 HKT 2016,Gregoire from Unito <gregoire.bois@unito.mail.intercom.io>,Welcome to Unito! Ready to sync your teams?
2016-10-18 13:20:53,448 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 11:57:35 HKT 2016,Wrike <noreply@wrike.com>,Please complete your registration
2016-10-18 13:20:53,448 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 10 14:32:17 HKT 2016,Andrew Filev <andrew.filev@wrike.com>,Ready?
2016-10-18 13:20:53,448 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 00:11:58 HKT 2016,Liz Young <liz@team.wrike.com>,Run your next meeting with Wrike
2016-10-18 13:20:53,449 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 09:17:20 HKT 2016,=?utf-8?B?7J2064uk7Z2s?= <107918@truefriend.com>,Invoice from Celera Markets Limited
2016-10-18 13:20:53,449 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 09:30:57 HKT 2016,mLab <team@mlab.com>,Welcome to mLab!
2016-10-18 13:20:53,449 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 10:29:40 HKT 2016,Amazon Web Services <no-reply-aws@amazon.com>,Welcome to Amazon Web Services
2016-10-18 13:20:53,449 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-18 13:20:53,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:20:54,560 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=150, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,125,000, notationalCny=HKD, rate=null, premium=6,517,500.00, premiumCny=HKD, legs=[Leg 1 Buy 150 29-Dec-16 9,400 European Put 230.00 +1,725,000.00, Leg 2 Buy 150 29-Dec-16 9,400 European Call 639.00 +4,792,500.00], hedges=[Hedge [side=Sell, qty=48.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=2,400, brokerageCny=HKD]
2016-10-18 13:20:54,561 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:54,561 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:54,562 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:54,563 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:08 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-18 13:20:55,554 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=null, seller=Vivienne Court Trading Pty Ltd - Jeroen Plooster, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=null, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,750,000, notationalCny=HKD, rate=null, premium=4,345,000.00, premiumCny=HKD, legs=[Leg 1 Sell 100 29-Dec-16 9,400 European Put 230.00 -1,150,000.00, Leg 2 Sell 100 29-Dec-16 9,400 European Call 639.00 -3,195,000.00], hedges=[Hedge [side=Buy, qty=32.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=4,320, brokerageCny=HKD]
2016-10-18 13:20:55,554 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:55,555 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:55,556 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:55,557 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Tue Oct 11 16:03:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 9400 SD REF 9,750 (OCT16)
2016-10-18 13:20:56,526 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=869.00, curncy=HKD, tradeDate=11-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13159, delta=+32.00 %, buyQty=null, sellQty=50, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,375,000, notationalCny=HKD, rate=null, premium=2,172,500.00, premiumCny=HKD, legs=[Leg 1 Sell 50 29-Dec-16 9,400 European Put 230.00 -575,000.00, Leg 2 Sell 50 29-Dec-16 9,400 European Call 639.00 -1,597,500.00], hedges=[Hedge [side=Buy, qty=16.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:20:56,527 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:56,527 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:56,528 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:56,529 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 00:13:19 HKT 2016,Liz Young <liz@team.wrike.com>,See how Hootsuite Increased Productivity Using Wrike
2016-10-18 13:20:56,529 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 09:17:42 HKT 2016,Harvest <support@harvestapp.com>,Welcome to Harvest, Lloyd
2016-10-18 13:20:56,529 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:21:27 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-18 13:20:57,508 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=1,175.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=null, sellQty=200, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg 1 Sell 200 30-Mar-17 9,800 European Put 625.00 -6,250,000.00, Leg 2 Sell 200 30-Mar-17 9,800 European Call 550.00 -5,500,000.00], hedges=[Hedge [side=Buy, qty=12.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:20:57,508 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:57,508 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:57,509 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:57,509 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:21:34 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-18 13:20:58,470 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=UBS AG London Branch - Adrien Bordat, seller=null, price=1,175.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=150, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,125,000, notationalCny=HKD, rate=null, premium=8,812,500.00, premiumCny=HKD, legs=[Leg 1 Buy 150 30-Mar-17 9,800 European Put 625.00 +4,687,500.00, Leg 2 Buy 150 30-Mar-17 9,800 European Call 550.00 +4,125,000.00], hedges=[Hedge [side=Sell, qty=9.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=5,119, brokerageCny=HKD]
2016-10-18 13:20:58,470 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:58,471 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:58,471 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:58,472 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Wed Oct 12 10:22:17 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI MAR17 9800 SD REF 9,750 (OCT16)
2016-10-18 13:20:59,514 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=1,170.00, curncy=HKD, tradeDate=12-Oct-16, refPrice=9,750, id=CELERAEQ-2016-13160, delta=+6.00 %, buyQty=50, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,375,000, notationalCny=HKD, rate=null, premium=2,925,000.00, premiumCny=HKD, legs=[Leg 1 Buy 50 30-Mar-17 9,800 European Put 620.00 +1,550,000.00, Leg 2 Buy 50 30-Mar-17 9,800 European Call 550.00 +1,375,000.00], hedges=[Hedge [side=Sell, qty=3.0, price=9750.0, future=HSCEI OCT16]], brokerageFee=800, brokerageCny=HKD]
2016-10-18 13:20:59,515 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:20:59,515 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:20:59,515 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:20:59,516 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 09:39:43 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 240 P REF 256.50 (DEC16)
2016-10-18 13:21:00,516 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), buyer=UBS AG London Branch - Suhail Patel, seller=Optiver Australia Pty Ltd, price=1.375, curncy=KRW, tradeDate=13-Oct-16, refPrice=256.50, id=CELERAEQ-2016-13161, delta=-15.00 %, buyQty=200, sellQty=200, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,650,000,000, notationalCny=KRW, rate=1,126.00, premium=137,500,000, premiumCny=KRW, legs=[Leg 1 Buy 100 08-Dec-16 240 European Put 1.37 +68,500,000, Leg 2 Buy 100 08-Dec-16 240 European Put 1.38 +69,000,000], hedges=[Hedge [side=Buy, qty=30.0, price=256.5, future=KS200 DEC16]], brokerageFee=1,708, brokerageCny=USD]
2016-10-18 13:21:00,516 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:00,517 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:00,517 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:00,518 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 09:39:50 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC16 240 P REF 256.50 (DEC16)
2016-10-18 13:21:01,489 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), buyer=UBS AG London Branch, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.375, curncy=KRW, tradeDate=13-Oct-16, refPrice=256.50, id=CELERAEQ-2016-13161, delta=-15.00 %, buyQty=200, sellQty=200, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=25,650,000,000, notationalCny=KRW, rate=1,126.00, premium=137,500,000, premiumCny=KRW, legs=[Leg 1 Sell 100 08-Dec-16 240 European Put 1.37 -68,500,000, Leg 2 Sell 100 08-Dec-16 240 European Put 1.38 -69,000,000], hedges=[Hedge [side=Sell, qty=30.0, price=256.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:21:01,489 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:01,489 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:01,490 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:01,490 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Thu Oct 13 14:20:28 HKT 2016,Guillaume Cunnington <Guillaume.Cunnington@celera-markets.com>,Re: Project status update
2016-10-18 13:21:01,491 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 00:07:08 HKT 2016,Liz Young <liz@team.wrike.com>,Reserve your spot today
2016-10-18 13:21:01,491 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 09:39:02 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 270 C REF 256 (DEC16)
2016-10-18 13:21:02,483 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 270 European Call REF 256 (DEC16), buyer=UBS AG London Branch - Suhail Patel, seller=Société Générale (HK) Limited, price=10.225, curncy=KRW, tradeDate=14-Oct-16, refPrice=256, id=CELERAEQ-2016-13162, delta=+40.00 %, buyQty=300, sellQty=300, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,400,000,000, notationalCny=KRW, rate=1,128.00, premium=1,533,750,000, premiumCny=KRW, legs=[Leg 1 Buy 150 14-Dec-17 270 European Call 10.20 +765,000,000, Leg 2 Buy 150 14-Dec-17 270 European Call 10.25 +768,750,000], hedges=[Hedge [side=Sell, qty=120.0, price=256.0, future=KS200 DEC16]], brokerageFee=2,553, brokerageCny=USD]
2016-10-18 13:21:02,484 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:02,485 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:02,485 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:02,486 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 09:39:08 HKT 2016,eqd@celera-markets.com,Trade Confirmation KS200 DEC17 270 C REF 256 (DEC16)
2016-10-18 13:21:03,438 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 270 European Call REF 256 (DEC16), buyer=UBS AG London Branch, seller=Société Générale (HK) Limited - Sourabh Shaha, price=10.225, curncy=KRW, tradeDate=14-Oct-16, refPrice=256, id=CELERAEQ-2016-13162, delta=+40.00 %, buyQty=300, sellQty=300, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=38,400,000,000, notationalCny=KRW, rate=1,128.00, premium=1,533,750,000, premiumCny=KRW, legs=[Leg 1 Sell 150 14-Dec-17 270 European Call 10.20 -765,000,000, Leg 2 Sell 150 14-Dec-17 270 European Call 10.25 -768,750,000], hedges=[Hedge [side=Buy, qty=120.0, price=256.0, future=KS200 DEC16]], brokerageFee=1,021, brokerageCny=USD]
2016-10-18 13:21:03,438 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:03,439 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:03,439 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:03,440 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:11:54 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:21:03,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:21:04,432 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=null, seller=Mirae Asset Securities Co. Ltd - Sungwon Hwang, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=150, sellQty=300, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=73,875,000, notationalCny=HKD, rate=null, premium=2,422,500.00, premiumCny=HKD, legs=[Leg 1 Sell 150 28-Dec-17 10,800 European Call 523.00 -3,922,500.00, Leg 2 Buy 300 29-Dec-16 10,800 European Call 100.00 +1,500,000.00], hedges=[Hedge [side=Sell, qty=3.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=6,795, brokerageCny=HKD]
2016-10-18 13:21:04,432 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:04,433 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:04,433 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:04,434 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:02 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:21:05,403 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=50, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=24,625,000, notationalCny=HKD, rate=null, premium=807,500.00, premiumCny=HKD, legs=[Leg 1 Buy 50 28-Dec-17 10,800 European Call 523.00 +1,307,500.00, Leg 2 Sell 100 29-Dec-16 10,800 European Call 100.00 -500,000.00], hedges=[Hedge [side=Buy, qty=1.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=700, brokerageCny=HKD]
2016-10-18 13:21:05,403 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:05,403 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:05,404 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:05,405 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:10 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17/DEC16 10800 1/-2 CTR REF 9,850 (OCT16)
2016-10-18 13:21:06,383 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=323.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=9,850, id=CELERAEQ-2016-13157, delta=-2.00 %, buyQty=100, sellQty=200, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=49,250,000, notationalCny=HKD, rate=null, premium=1,615,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 10,800 European Call 523.00 +2,615,000.00, Leg 2 Sell 200 29-Dec-16 10,800 European Call 100.00 -1,000,000.00], hedges=[Hedge [side=Buy, qty=2.0, price=9850.0, future=HSCEI OCT16]], brokerageFee=1,478, brokerageCny=HKD]
2016-10-18 13:21:06,383 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:06,384 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:06,384 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:06,385 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:18 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-18 13:21:07,349 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=375.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29, sellQty=29, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=543,750.00, premiumCny=HKD, legs=[Leg 1 Sell 29 28-Sep-17 21,000 European Put 942.00 -1,365,900.00, Leg 2 Buy 29 28-Sep-17 26,200 European Call 567.00 +822,150.00], hedges=[Hedge [side=Sell, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:21:07,349 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:07,350 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:07,350 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:07,351 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:26 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSI SEP17 21000/26200 1/-1 RR REF 23,575 (OCT16)
2016-10-18 13:21:08,369 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=370.00, curncy=HKD, tradeDate=05-Oct-16, refPrice=23,575, id=CELERAEQ-2016-13156, delta=-55.00 %, buyQty=29, sellQty=29, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=34,183,750, notationalCny=HKD, rate=null, premium=536,500.00, premiumCny=HKD, legs=[Leg 1 Buy 29 28-Sep-17 21,000 European Put 937.00 +1,358,650.00, Leg 2 Sell 29 28-Sep-17 26,200 European Call 567.00 -822,150.00], hedges=[Hedge [side=Buy, qty=16.0, price=23575.0, future=HSI OCT16]], brokerageFee=464, brokerageCny=HKD]
2016-10-18 13:21:08,369 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:08,370 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:08,370 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:08,371 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:32 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-18 13:21:09,379 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC, seller=Optiver Australia Pty Ltd - Lucy Goulopoulos, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160, sellQty=320, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg 1 Sell 160 08-Dec-16 270 European Call 1.30 -104,000,000, Leg 2 Buy 320 08-Dec-16 290 European Call 0.15 +24,000,000], hedges=[Hedge [side=Buy, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:21:09,379 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:09,380 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:09,380 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:09,381 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:41 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC16 270/290 1/-2 CR REF 257.50 (DEC16)
2016-10-18 13:21:10,471 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), buyer=Morgan Stanley & Co. International PLC - Andre Pinto, seller=Optiver Australia Pty Ltd, price=1.00, curncy=KRW, tradeDate=05-Oct-16, refPrice=257.50, id=CELERAEQ-2016-13155, delta=+15.00 %, buyQty=160, sellQty=320, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=20,600,000,000, notationalCny=KRW, rate=1,113.00, premium=80,000,000, premiumCny=KRW, legs=[Leg 1 Buy 160 08-Dec-16 270 European Call 1.30 +104,000,000, Leg 2 Sell 320 08-Dec-16 290 European Call 0.15 -24,000,000], hedges=[Hedge [side=Sell, qty=24.0, price=257.5, future=KS200 DEC16]], brokerageFee=740, brokerageCny=USD]
2016-10-18 13:21:10,471 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:10,472 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:10,472 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:10,473 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:46 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:21:11,482 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,500, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg 1 Buy 1,500 30-Mar-17 6,000 European Put 30.00 +2,250,000.00, Leg 2 Sell 750 30-Mar-17 7,600 European Put 97.00 -3,637,500.00], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-18 13:21:11,482 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:11,483 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:11,483 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:11,484 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:12:52 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:21:12,482 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=36.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=300, sellQty=150, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=72,937,500, notationalCny=HKD, rate=null, premium=270,000.00, premiumCny=HKD, legs=[Leg 1 Sell 300 30-Mar-17 6,000 European Put 30.00 -450,000.00, Leg 2 Buy 150 30-Mar-17 7,600 European Put 96.00 +720,000.00], hedges=[Hedge [side=Buy, qty=6.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=2,100, brokerageCny=HKD]
2016-10-18 13:21:12,482 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:12,483 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:12,483 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:12,484 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:01 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:21:13,541 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=200, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,625,000, notationalCny=HKD, rate=null, premium=185,000.00, premiumCny=HKD, legs=[Leg 1 Sell 200 30-Mar-17 6,000 European Put 30.00 -300,000.00, Leg 2 Buy 100 30-Mar-17 7,600 European Put 97.00 +485,000.00], hedges=[Hedge [side=Buy, qty=4.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=3,648, brokerageCny=HKD]
2016-10-18 13:21:13,542 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:13,543 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:13,543 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:13,545 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:06 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:21:13,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:21:14,610 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=null, seller=Thierry, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,500, sellQty=750, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=364,687,500, notationalCny=HKD, rate=null, premium=1,387,500.00, premiumCny=HKD, legs=[Leg 1 Buy 1,500 30-Mar-17 6,000 European Put 30.00 +2,250,000.00, Leg 2 Sell 750 30-Mar-17 7,600 European Put 97.00 -3,637,500.00], hedges=[Hedge [side=Sell, qty=30.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=34,200, brokerageCny=HKD]
2016-10-18 13:21:14,610 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:14,611 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:14,611 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:14,612 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:11 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI MAR17 6000/7600 -2/1 PR REF 9,725 (OCT16)
2016-10-18 13:21:15,609 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), buyer=J.P. Morgan Securities PLC - Franck Cornille, seller=null, price=37.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,725, id=CELERAEQ-2016-13154, delta=-4.00 %, buyQty=1,000, sellQty=500, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=243,125,000, notationalCny=HKD, rate=null, premium=925,000.00, premiumCny=HKD, legs=[Leg 1 Sell 1,000 30-Mar-17 6,000 European Put 30.00 -1,500,000.00, Leg 2 Buy 500 30-Mar-17 7,600 European Put 97.00 +2,425,000.00], hedges=[Hedge [side=Buy, qty=20.0, price=9725.0, future=HSCEI OCT16]], brokerageFee=18,240, brokerageCny=HKD]
2016-10-18 13:21:15,609 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:15,610 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:15,610 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:15,611 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:16 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:16,580 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=570.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=100, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,850,000.00, premiumCny=HKD, legs=[Leg 1 Sell 100 28-Dec-17 8,000 European Put 430.00 -2,150,000.00, Leg 2 Buy 100 28-Dec-17 9,600 European Put 1,000.00 +5,000,000.00], hedges=[Hedge [side=Buy, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=1,600, brokerageCny=HKD]
2016-10-18 13:21:16,581 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:16,581 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:16,582 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:16,583 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:21 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8000/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:17,568 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=573.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13153, delta=-27.00 %, buyQty=null, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,865,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 8,000 European Put 427.00 +2,135,000.00, Leg 2 Sell 100 28-Dec-17 9,600 European Put 1,000.00 -5,000,000.00], hedges=[Hedge [side=Sell, qty=27.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,724, brokerageCny=HKD]
2016-10-18 13:21:17,568 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:17,569 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:17,569 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:17,570 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:25 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:18,546 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=469.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=53, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=25,705,000, notationalCny=HKD, rate=null, premium=1,242,850.00, premiumCny=HKD, legs=[Leg 1 Sell 53 28-Dec-17 8,400 European Put 530.00 -1,404,500.00, Leg 2 Buy 53 28-Dec-17 9,600 European Put 999.00 +2,647,350.00], hedges=[Hedge [side=Buy, qty=10.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=848, brokerageCny=HKD]
2016-10-18 13:21:18,547 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:18,547 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:18,547 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:18,548 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:33 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:19,547 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=153, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=74,205,000, notationalCny=HKD, rate=null, premium=3,595,500.00, premiumCny=HKD, legs=[Leg 1 Buy 153 28-Dec-17 8,400 European Put 530.00 +4,054,500.00, Leg 2 Sell 153 28-Dec-17 9,600 European Put 1,000.00 -7,650,000.00], hedges=[Hedge [side=Sell, qty=29.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:21:19,548 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:19,548 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:19,548 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:19,549 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:37 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:20,543 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=200, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=97,000,000, notationalCny=HKD, rate=null, premium=4,700,000.00, premiumCny=HKD, legs=[Leg 1 Sell 200 28-Dec-17 8,400 European Put 530.00 -5,300,000.00, Leg 2 Buy 200 28-Dec-17 9,600 European Put 1,000.00 +10,000,000.00], hedges=[Hedge [side=Buy, qty=38.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=5,256, brokerageCny=HKD]
2016-10-18 13:21:20,544 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:20,544 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:20,544 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:20,545 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:41 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:21,547 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=48,500,000, notationalCny=HKD, rate=null, premium=2,350,000.00, premiumCny=HKD, legs=[Leg 1 Buy 100 28-Dec-17 8,400 European Put 530.00 +2,650,000.00, Leg 2 Sell 100 28-Dec-17 9,600 European Put 1,000.00 -5,000,000.00], hedges=[Hedge [side=Sell, qty=19.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=2,190, brokerageCny=HKD]
2016-10-18 13:21:21,548 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:21,548 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:21,548 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:21,550 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:46 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:22,524 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=null, seller=J.P. Morgan Securities PLC - Franck Cornille, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=null, sellQty=500, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg 1 Buy 500 28-Dec-17 8,400 European Put 530.00 +13,250,000.00, Leg 2 Sell 500 28-Dec-17 9,600 European Put 1,000.00 -25,000,000.00], hedges=[Hedge [side=Sell, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=13,140, brokerageCny=HKD]
2016-10-18 13:21:22,524 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:22,525 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:22,525 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:22,527 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:51 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation HSCEI DEC17 8400/9600 PS REF 9,700 (OCT16)
2016-10-18 13:21:23,514 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), buyer=BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, seller=null, price=470.00, curncy=HKD, tradeDate=04-Oct-16, refPrice=9,700, id=CELERAEQ-2016-13152, delta=-19.00 %, buyQty=500, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=242,500,000, notationalCny=HKD, rate=null, premium=11,750,000.00, premiumCny=HKD, legs=[Leg 1 Sell 500 28-Dec-17 8,400 European Put 530.00 -13,250,000.00, Leg 2 Buy 500 28-Dec-17 9,600 European Put 1,000.00 +25,000,000.00], hedges=[Hedge [side=Buy, qty=95.0, price=9700.0, future=HSCEI OCT16]], brokerageFee=8,000, brokerageCny=HKD]
2016-10-18 13:21:23,514 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:23,515 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:23,515 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:23,516 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:13:56 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-18 13:21:23,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:21:24,478 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd - Lucy Goulopoulos, seller=Morgan Stanley & Co. International PLC, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200, sellQty=100, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg 1 Sell 200 14-Dec-17 200 European Put 3 -300,000,000, Leg 2 Buy 100 14-Dec-17 240 European Put 9.45 +472,500,000], hedges=[Hedge [side=Buy, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:21:24,478 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:24,479 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:24,479 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:24,480 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:00 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: Trade Confirmation KS200 DEC17 200/240 -2/1 PR REF 259.50 (DEC16)
2016-10-18 13:21:25,456 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), buyer=Optiver Australia Pty Ltd, seller=Morgan Stanley & Co. International PLC - Andre Pinto, price=3.45, curncy=KRW, tradeDate=04-Oct-16, refPrice=259.50, id=CELERAEQ-2016-13151, delta=-10.00 %, buyQty=200, sellQty=100, ptValue=500,000, ptCny=KRW, premiumPmt=As per exchange rules, notational=12,975,000,000, notationalCny=KRW, rate=1,103.00, premium=172,500,000, premiumCny=KRW, legs=[Leg 1 Buy 200 14-Dec-17 200 European Put 3 +300,000,000, Leg 2 Sell 100 14-Dec-17 240 European Put 9.45 -472,500,000], hedges=[Hedge [side=Sell, qty=50.0, price=null, future= KS200]], brokerageFee=0, brokerageCny=USD]
2016-10-18 13:21:25,456 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:25,457 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, rate, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:25,457 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:25,458 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:06 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: *** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-18 13:21:26,416 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=null, seller=Eclipse Futures (HK) Limited - Traders, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=null, sellQty=25, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg 1 Sell 25 29-Jun-17 23,400 European Put 1,575.00 -1,968,750.00, Leg 2 Sell 25 29-Jun-17 23,400 European Call 1,400.00 -1,750,000.00], hedges=[], brokerageFee=500, brokerageCny=HKD]
2016-10-18 13:21:26,416 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:26,417 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:26,417 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:26,418 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Fri Oct 14 15:14:11 HKT 2016,Lloyd Chan <Lloyd.Chan@celera-markets.com>,FW: *** FINAL CONFIRMATION***Trade Confirmation HSI JUN17 23400 SD REF 23,375 (OCT16)
2016-10-18 13:21:27,427 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), buyer=Nomura International Plc - Nadjib Ezziane, seller=null, price=2,975.00, curncy=HKD, tradeDate=03-Oct-16, refPrice=23,375, id=CELERAEQ-2016-13150, delta=0 %, buyQty=25, sellQty=null, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=29,218,750, notationalCny=HKD, rate=null, premium=3,718,750.00, premiumCny=HKD, legs=[Leg 1 Buy 25 29-Jun-17 23,400 European Put 1,575.00 +1,968,750.00, Leg 2 Buy 25 29-Jun-17 23,400 European Call 1,400.00 +1,750,000.00], hedges=[], brokerageFee=600, brokerageCny=HKD]
2016-10-18 13:21:27,428 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:27,428 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:27,428 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:27,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Sat Oct 15 18:31:16 HKT 2016,Amazon Web Services <aws-marketing-email-replies@amazon.com>,Activate 12 Months of AWS Free Tier
2016-10-18 13:21:27,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Sat Oct 15 21:31:51 HKT 2016,Harvest <support@harvestapp.com>,Harvest account check-in
2016-10-18 13:21:27,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 06:06:26 HKT 2016,Asana <no-reply@asana.com>,Asana Dashboard for celera-markets.com
2016-10-18 13:21:27,430 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:06 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-18 13:21:28,390 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=Société Générale (HK) Limited - Sourabh Shaha, seller=null, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=800, sellQty=400, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=191,000,000, notationalCny=HKD, rate=null, premium=6,700,000.00, premiumCny=HKD, legs=[Leg 1 Sell 800 29-Dec-16 8,400 European Put 84.00 -3,360,000.00, Leg 2 Buy 400 29-Dec-16 9,800 European Put 503.00 +10,060,000.00], hedges=[Hedge [side=Buy, qty=124.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=5,730, brokerageCny=HKD]
2016-10-18 13:21:28,390 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:28,391 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, buyer, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:28,391 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:28,393 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:14 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-18 13:21:29,376 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=null, seller=Optiver Australia Pty Ltd - William Funnell, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=600, sellQty=300, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=143,250,000, notationalCny=HKD, rate=null, premium=5,025,000.00, premiumCny=HKD, legs=[Leg 1 Buy 600 29-Dec-16 8,400 European Put 84.00 +2,520,000.00, Leg 2 Sell 300 29-Dec-16 9,800 European Put 503.00 -7,545,000.00], hedges=[Hedge [side=Sell, qty=93.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=0, brokerageCny=HKD]
2016-10-18 13:21:29,376 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:29,376 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:29,377 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:29,378 [pool-2-thread-1] DEBUG com.uts.tradeconfo.UtsEmailProcessor.onEmail(UtsEmailProcessor.java:135) - Mon Oct 17 16:30:20 HKT 2016,eqd@celera-markets.com,Trade Confirmation HSCEI DEC16 8400/9800 -2/1 PR REF 9,550 (OCT16)
2016-10-18 13:21:30,561 [pool-2-thread-1] INFO  com.uts.tradeconfo.UtsEmailProcessor.parsePdf(UtsEmailProcessor.java:212) - UtsTradeConfoDetail [summary=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), buyer=null, seller=Vivienne Court Trading Pty Ltd - Jeroen Plooster, price=335.00, curncy=HKD, tradeDate=17-Oct-16, refPrice=9,550, id=CELERAEQ-2016-13163, delta=-31.00 %, buyQty=200, sellQty=100, ptValue=50, ptCny=HKD, premiumPmt=As per exchange rules, notational=47,750,000, notationalCny=HKD, rate=null, premium=1,675,000.00, premiumCny=HKD, legs=[Leg 1 Buy 200 29-Dec-16 8,400 European Put 84.00 +840,000.00, Leg 2 Sell 100 29-Dec-16 9,800 European Put 503.00 -2,515,000.00], hedges=[Hedge [side=Sell, qty=31.0, price=9550.0, future=HSCEI OCT16]], brokerageFee=3,110, brokerageCny=HKD]
2016-10-18 13:21:30,562 [pool-2-thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeConfoRepo'
2016-10-18 13:21:30,562 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:1039) - Saving DBObject containing fields: [_class, _id, summary, seller, price, curncy, tradeDate, refPrice, tradeConfoId, delta, buyQty, sellQty, ptValue, ptCny, premiumPmt, notational, notationalCny, premium, premiumCny, brokerageFee, brokerageCny, lastModified, hedges, legs]
2016-10-18 13:21:30,563 [pool-2-thread-1] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-10-18 13:21:36,208 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:21:43,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:21:53,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:22:03,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:22:13,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:22:26,565 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:22:33,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:22:43,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:22:53,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:23:03,985 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:23:16,709 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:23:23,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:23:33,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:23:43,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:23:53,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:24:06,037 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:24:13,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:24:23,989 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:24:37,299 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:24:43,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:24:53,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:25:03,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:25:16,950 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:25:23,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:25:33,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:25:43,985 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:25:53,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:26:08,219 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:26:13,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:26:23,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:26:33,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:26:43,985 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:26:55,178 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:27:03,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:27:13,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:27:25,666 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:27:33,983 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:27:43,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:27:56,616 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:28:03,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:28:13,984 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:28:25,220 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:28:33,985 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:28:43,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
2016-10-18 13:28:56,036 [pool-2-thread-1] INFO  com.celera.library.javamail.MailService.getAllFromInbox(MailService.java:126) - Inbox emails 159
2016-10-18 13:29:03,982 [pool-1-thread-1] DEBUG com.celera.adapter.EmailServiceImpl$1.run(EmailServiceImpl.java:106) - Polling email in progress
