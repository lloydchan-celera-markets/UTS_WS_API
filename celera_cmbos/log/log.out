2016-11-09 10:55:23,302 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Eclipse Futures (HK) Limited - Traders <traders@eclipseoptions.com>
Cc: A <ops@hk.abnamroclearing.com>, accounts@eclipseoptions.com
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI MAY16 Futures
Eclipse Futures (HK) Limited - Traders
TRADE DATE 29-Apr-16
SIZE (PT VALUE) 1 (50 HKD/PT) TRADE ID CELERAEQ-2016-12855
NOTIONAL HKD
DETAILS
LEG B/S SIZE EXPIRY PRODUCT STRIKE
Leg 1 Buy 1 30-May-16 Future 8,900
Leg 2 Sell 1 30-May-16 Future 8,950
Settlement as per exchange rules
2016-11-09 10:55:23,775 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Eclipse Futures (HK) Limited - Traders <traders@eclipseoptions.com>
Cc: A <ops@hk.abnamroclearing.com>, accounts@eclipseoptions.com
***FINAL CONFIRMATION***
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16)
*** THIS TRADE WAS CROSSED ON 20-MAY-16***
PRICE HKD 138.00 TRADE DATE 19-May-16
REF 8,250 TRADE ID CELERAEQ-2016-12878
DELTA No delta
SIZE (PT VALUE) 50 (50 HKD/PT) PREMIUM PAYMENT As per exchange rules
NOTIONAL HKD 20,625,000
PREMIUM HKD 345,000.00
DETAILS
LEG B/S SIZE EXPIRY STRIKE PRODUCT PRICE (HKD) PREMIUM (HKD)
Leg 1 Sell 50 29-Sep-16 7,600 European Put 362.00 -905,000.00
Leg 2 Buy 50 29-Dec-16 7,600 European Put 500.00 +1,250,000.00
Settlement as per exchange rules
FEES
BROKERAGE FEE HKD 1,000
2016-11-09 10:55:23,781 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Nomura International Plc - Nadjib Ezziane <nadjib.ezziane@nomura.com>
Cc: A <exoticsindex-hk@hk.nomura.com>, B <exoticsstocks-hk@hk.nomura.com>, C <flowindex-
hk@hk.nomura.com>, D <eqdmo-hkg@nomura.com>, E <equity_bc_india_hk-in@nomura.com>
***FINAL CONFIRMATION***
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16)
*** THIS TRADE WAS CROSSED ON 20-MAY-16***
PRICE HKD 138.00 TRADE DATE 19-May-16
REF 8,250 TRADE ID CELERAEQ-2016-12878
DELTA No delta
SIZE (PT VALUE) 50 (50 HKD/PT) PREMIUM PAYMENT As per exchange rules
NOTIONAL HKD 20,625,000
PREMIUM HKD 345,000.00
DETAILS
LEG B/S SIZE EXPIRY STRIKE PRODUCT PRICE (HKD) PREMIUM (HKD)
Leg 1 Buy 50 29-Sep-16 7,600 European Put 362.00 +905,000.00
Leg 2 Sell 50 29-Dec-16 7,600 European Put 500.00 -1,250,000.00
Settlement as per exchange rules
FEES
BROKERAGE FEE HKD 1,200
2016-11-09 10:55:27,715 [main] DEBUG com.celera.adapter.DatabaseAdapter.<clinit>(DatabaseAdapter.java:90) - 01-Oct-16,31-Dec-99
2016-11-09 10:55:27,854 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:27,856 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:27,856 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:27,862 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2016-11-09 10:55:28,076 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 10:55:28,305 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2016-11-09 10:55:28,311 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/datatypes.dtd=schemas/datatypes.dtd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://cxf.apache.org/schemas/configuration/http-jetty.xsd=schemas/configuration/http-jetty.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.w3.org/2001/XMLSchema.dtd=schemas/XMLSchema.dtd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2016-11-09 10:55:28,314 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2016-11-09 10:55:28,358 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2016-11-09 10:55:28,366 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2016-11-09 10:55:28,371 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2016-11-09 10:55:28,377 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2016-11-09 10:55:28,392 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2016-11-09 10:55:28,410 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://cxf.apache.org/transports/http-jetty/configuration=org.apache.cxf.transport.http_jetty.spring.NamespaceHandler, http://www.w3.org/2006/07/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxws=org.apache.cxf.jaxws.spring.NamespaceHandler, http://cxf.apache.org/policy=org.apache.cxf.ws.policy.spring.NamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/ws/addressing=org.apache.cxf.ws.addressing.spring.NamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://schemas.xmlsoap.org/ws/2004/09/policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.w3.org/ns/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler}
2016-11-09 10:55:28,440 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,440 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,440 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,449 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2016-11-09 10:55:28,474 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2016-11-09 10:55:28,488 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2016-11-09 10:55:28,503 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2016-11-09 10:55:28,504 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2016-11-09 10:55:28,524 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2016-11-09 10:55:28,526 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2016-11-09 10:55:28,532 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2016-11-09 10:55:28,561 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,562 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,562 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,566 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,567 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2016-11-09 10:55:28,568 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]]
2016-11-09 10:55:28,569 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class]
2016-11-09 10:55:28,569 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2016-11-09 10:55:28,570 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2016-11-09 10:55:28,571 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2016-11-09 10:55:28,572 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2016-11-09 10:55:28,573 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class]
2016-11-09 10:55:28,573 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class]
2016-11-09 10:55:28,573 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]
2016-11-09 10:55:28,577 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,578 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,578 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,579 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,579 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2016-11-09 10:55:28,579 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2016-11-09 10:55:28,581 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,583 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,583 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,583 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,584 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,584 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2016-11-09 10:55:28,584 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2016-11-09 10:55:28,585 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,585 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,586 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,586 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,586 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,587 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2016-11-09 10:55:28,587 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2016-11-09 10:55:28,587 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,588 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,588 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,589 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,589 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,589 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailRepoImpl.class]
2016-11-09 10:55:28,590 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailRepoImpl.class] to resources []
2016-11-09 10:55:28,590 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailRepo - Interface: com.celera.mongo.repo.TradeDetailRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,591 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,591 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,591 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,592 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,592 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class]
2016-11-09 10:55:28,593 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class] to resources []
2016-11-09 10:55:28,593 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailsRepo - Interface: com.celera.mongo.repo.TradeDetailsRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,597 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,597 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,597 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,598 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,598 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2016-11-09 10:55:28,598 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2016-11-09 10:55:28,600 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,601 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,601 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,601 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,602 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,602 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRepoImpl.class]
2016-11-09 10:55:28,602 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRepoImpl.class] to resources []
2016-11-09 10:55:28,602 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRepo - Interface: com.celera.mongo.repo.InvoiceRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,603 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 10:55:28,603 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 10:55:28,603 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 10:55:28,604 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 10:55:28,604 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AccountRepoImpl.class]
2016-11-09 10:55:28,604 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AccountRepoImpl.class] to resources []
2016-11-09 10:55:28,605 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: accountRepo - Interface: com.celera.mongo.repo.AccountRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 10:55:28,605 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 16 bean definitions from location pattern [spring-config.xml]
2016-11-09 10:55:28,607 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@675d3402: startup date [Wed Nov 09 10:55:28 HKT 2016]; root of context hierarchy
2016-11-09 10:55:28,608 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@675d3402: org.springframework.beans.factory.support.DefaultListableBeanFactory@60d8c9b7: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeConfoRepo,personRepo,addressRepo,tradeDetailRepo,tradeDetailsRepo,hedgeRepo,invoiceRepo,accountRepo]; root of factory hierarchy
2016-11-09 10:55:28,624 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 10:55:28,625 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 10:55:28,634 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2016-11-09 10:55:28,684 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 10:55:28,685 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 10:55:28,685 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 10:55:28,685 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2016-11-09 10:55:28,686 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 10:55:28,687 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 10:55:28,687 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 10:55:28,688 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2016-11-09 10:55:28,688 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 10:55:28,690 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@10e31a9a]
2016-11-09 10:55:28,691 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6adbc9d]
2016-11-09 10:55:28,693 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@60d8c9b7: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeConfoRepo,personRepo,addressRepo,tradeDetailRepo,tradeDetailsRepo,hedgeRepo,invoiceRepo,accountRepo]; root of factory hierarchy
2016-11-09 10:55:28,694 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2016-11-09 10:55:28,694 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2016-11-09 10:55:28,700 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2016-11-09 10:55:28,721 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2016-11-09 10:55:28,823 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2016-11-09 10:55:28,824 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 10:55:28,824 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 10:55:28,824 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:28,824 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2016-11-09 10:55:28,839 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2016-11-09 10:55:28,840 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2016-11-09 10:55:28,840 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2016-11-09 10:55:28,845 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2016-11-09 10:55:28,846 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2016-11-09 10:55:28,911 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2016-11-09 10:55:28,917 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2016-11-09 10:55:28,918 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2016-11-09 10:55:28,918 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 10:55:28,918 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2016-11-09 10:55:28,918 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2016-11-09 10:55:28,918 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2016-11-09 10:55:28,923 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2016-11-09 10:55:28,923 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2016-11-09 10:55:28,923 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2016-11-09 10:55:28,923 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2016-11-09 10:55:28,925 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2016-11-09 10:55:28,931 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1caa0244'
2016-11-09 10:55:28,932 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7ce026d3'
2016-11-09 10:55:28,936 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7ce026d3'
2016-11-09 10:55:28,936 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7ce026d3'
2016-11-09 10:55:28,938 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1caa0244'
2016-11-09 10:55:28,938 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7c137fd5'
2016-11-09 10:55:28,943 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7c137fd5'
2016-11-09 10:55:28,943 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:28,944 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2016-11-09 10:55:28,981 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2016-11-09 10:55:28,989 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Leg for index information.
2016-11-09 10:55:28,990 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2016-11-09 10:55:29,020 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@81d9a72]
2016-11-09 10:55:29,023 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2016-11-09 10:55:29,024 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2016-11-09 10:55:29,024 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2016-11-09 10:55:29,024 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,024 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1787f2a0'
2016-11-09 10:55:29,024 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7de62196'
2016-11-09 10:55:29,025 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7de62196'
2016-11-09 10:55:29,025 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7de62196'
2016-11-09 10:55:29,025 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1787f2a0'
2016-11-09 10:55:29,025 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#51bf5add'
2016-11-09 10:55:29,026 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#51bf5add'
2016-11-09 10:55:29,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,026 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2016-11-09 10:55:29,034 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2016-11-09 10:55:29,035 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2016-11-09 10:55:29,036 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@19b843ba]
2016-11-09 10:55:29,038 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2016-11-09 10:55:29,039 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2016-11-09 10:55:29,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2016-11-09 10:55:29,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#77659b30'
2016-11-09 10:55:29,039 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#456d6c1e'
2016-11-09 10:55:29,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#456d6c1e'
2016-11-09 10:55:29,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#456d6c1e'
2016-11-09 10:55:29,040 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#77659b30'
2016-11-09 10:55:29,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6b0d80ed'
2016-11-09 10:55:29,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6b0d80ed'
2016-11-09 10:55:29,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,041 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2016-11-09 10:55:29,042 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@3cfdd820]
2016-11-09 10:55:29,044 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2016-11-09 10:55:29,044 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:29,045 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailRepo'
2016-11-09 10:55:29,045 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,045 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#e25951c'
2016-11-09 10:55:29,045 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#15f47664'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#15f47664'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#15f47664'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#e25951c'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#dc9876b'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#dc9876b'
2016-11-09 10:55:29,046 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,047 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailRepo'
2016-11-09 10:55:29,050 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetail for index information.
2016-11-09 10:55:29,051 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@4b2c5e02]
2016-11-09 10:55:29,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailRepo'
2016-11-09 10:55:29,053 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:29,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailsRepo'
2016-11-09 10:55:29,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailsRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#75c56eb9'
2016-11-09 10:55:29,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4bc222e'
2016-11-09 10:55:29,055 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#4bc222e'
2016-11-09 10:55:29,056 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4bc222e'
2016-11-09 10:55:29,056 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#75c56eb9'
2016-11-09 10:55:29,056 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6531a794'
2016-11-09 10:55:29,056 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6531a794'
2016-11-09 10:55:29,056 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,057 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailsRepo'
2016-11-09 10:55:29,061 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetails for index information.
2016-11-09 10:55:29,062 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@56dc1551]
2016-11-09 10:55:29,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailsRepo'
2016-11-09 10:55:29,064 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2016-11-09 10:55:29,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2016-11-09 10:55:29,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#74f6c5d8'
2016-11-09 10:55:29,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#27912e3'
2016-11-09 10:55:29,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#27912e3'
2016-11-09 10:55:29,066 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#27912e3'
2016-11-09 10:55:29,066 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#74f6c5d8'
2016-11-09 10:55:29,066 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#43015c69'
2016-11-09 10:55:29,066 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#43015c69'
2016-11-09 10:55:29,066 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,067 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2016-11-09 10:55:29,067 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@19b89d4]
2016-11-09 10:55:29,069 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2016-11-09 10:55:29,069 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:29,069 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRepo'
2016-11-09 10:55:29,070 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,070 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#30b6ffe0'
2016-11-09 10:55:29,070 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#791d1f8b'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#791d1f8b'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#791d1f8b'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#30b6ffe0'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#14f232c4'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#14f232c4'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,071 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRepo'
2016-11-09 10:55:29,077 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Invoice for index information.
2016-11-09 10:55:29,078 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@cd1e646]
2016-11-09 10:55:29,080 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRepo'
2016-11-09 10:55:29,080 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'accountRepo'
2016-11-09 10:55:29,080 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'accountRepo'
2016-11-09 10:55:29,080 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'accountRepo' to allow for resolving potential circular references
2016-11-09 10:55:29,081 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1890516e'
2016-11-09 10:55:29,081 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#15a04efb'
2016-11-09 10:55:29,081 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#15a04efb'
2016-11-09 10:55:29,081 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#15a04efb'
2016-11-09 10:55:29,082 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1890516e'
2016-11-09 10:55:29,082 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2bec854f'
2016-11-09 10:55:29,082 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2bec854f'
2016-11-09 10:55:29,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 10:55:29,082 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'accountRepo'
2016-11-09 10:55:29,086 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Account for index information.
2016-11-09 10:55:29,087 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@7c3fdb62]
2016-11-09 10:55:29,089 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'accountRepo'
2016-11-09 10:55:29,090 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7bf3a5d8]
2016-11-09 10:55:29,090 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2016-11-09 10:55:29,091 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-11-09 10:55:29,091 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-11-09 10:55:29,091 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-11-09 10:55:29,092 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:29,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:29,102 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:30,605 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12910, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=532, hedge=191, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$8,935, lastModified=Wed Nov 09 10:55:29 HKT 2016]
2016-11-09 10:55:30,606 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:30,606 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:30,606 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:30,607 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jun-16, tradeId=CELERAEQ-2016-12926, description=Listed HSCEI DEC16 8600 European Straddle REF 8,525 (JUN16), size=400, hedge=8, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$8,040, lastModified=Wed Nov 09 10:55:30 HKT 2016]
2016-11-09 10:55:30,607 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:30,609 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:30,609 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:30,610 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@27d5a580
2016-11-09 10:55:31,956 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:31,957 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:31,957 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:31,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229023327c183c9fed424a, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160059, invoice_date=09 July, 2016, account_number=CEL0007, due_date=09 August, 2016, amount_due=HK$16,975, description=October 2016 Brokerage Fee, amount=HK$16,975, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@27d5a580, lastModified=Wed Nov 09 10:55:31 HKT 2016]
2016-11-09 10:55:31,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:31,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:31,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:31,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=100, hedge=32, reference=Buyer - Celera Financial Limited - Martin, fee=HK$1,980, lastModified=Wed Nov 09 10:55:31 HKT 2016]
2016-11-09 10:55:31,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:31,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:31,961 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:31,961 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5949eba8
2016-11-09 10:55:32,056 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,057 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,057 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,058 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed424d, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160003, invoice_date=09 March, 2016, account_number=CEL0013, due_date=09 April, 2016, amount_due=HK$1,980, description=October 2016 Brokerage Fee, amount=HK$1,980, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5949eba8, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,058 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,058 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,058 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,059 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13114, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=42, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$567, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,059 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,059 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,060 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@c20be82
2016-11-09 10:55:32,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,134 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4250, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160141, invoice_date=09 October, 2016, account_number=CEL0009, due_date=09 November, 2016, amount_due=US$567, description=October 2016 Brokerage Fee, amount=US$567, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@c20be82, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12875, description=Listed HSCEI JUN17 6000 European Put REF 8,250 (MAY16), size=100, hedge=14, reference=Seller - Celera Financial Limited - Martin, fee=HK$1,710, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,137 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5dda14d0
2016-11-09 10:55:32,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,219 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4253, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160048, invoice_date=09 June, 2016, account_number=CEL0013, due_date=09 July, 2016, amount_due=HK$1,710, description=October 2016 Brokerage Fee, amount=HK$1,710, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5dda14d0, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,220 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,220 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,220 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,220 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=200, hedge=40, reference=Buyer - Thierry, fee=HK$3,600, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,220 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,221 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,221 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,221 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13093, description=Listed HSCEI SEP16 10000 European Call REF 10,075 (SEP16), size=200, hedge=116, reference=Seller - Thierry, fee=HK$4,740, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,221 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,222 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,222 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,223 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=200, hedge=36, reference=Seller - Thierry, fee=HK$3,540, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,223 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,223 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,223 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,224 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=500, hedge=85, reference=Seller - Thierry, fee=HK$8,775, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,224 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,224 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,224 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,225 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=300, hedge=78, reference=Seller - Thierry, fee=HK$5,670, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,225 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=300, hedge=84, reference=Seller - Thierry, fee=HK$5,760, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,226 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,226 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Buyer - Thierry, fee=HK$17,250, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,227 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,227 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13138, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Buyer - Thierry, fee=HK$17,250, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,228 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,228 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13139, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Buyer - Thierry, fee=HK$10,350, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,229 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,229 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=1200, hedge=3, reference=Seller - Thierry, fee=HK$18,045, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,229 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,230 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=1200, hedge=3, reference=Seller - Thierry, fee=HK$18,045, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,230 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,231 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,231 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,231 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@17f460bb
2016-11-09 10:55:32,260 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,260 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,260 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,261 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4260, company=Thierry, address=, attn=, sentTo=, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0030, due_date=09 November, 2016, amount_due=HK$113,025, description=October 2016 Brokerage Fee, amount=HK$113,025, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@17f460bb, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,261 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,261 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,261 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,262 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=1600, hedge=40, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$19,680, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,262 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,262 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,262 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,263 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=400, hedge=56, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$5,472, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,263 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,263 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,263 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,264 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=200, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,520, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,264 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,264 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,264 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,264 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=300, hedge=4, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,648, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,264 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,265 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,265 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,265 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=500, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,000, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,265 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,265 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,265 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,266 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,648, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,266 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,266 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,266 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,267 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@ceb4bd2
2016-11-09 10:55:32,343 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,343 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,343 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,344 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4268, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160031, invoice_date=09 June, 2016, account_number=CEL0006, due_date=09 July, 2016, amount_due=HK$40,968, description=October 2016 Brokerage Fee, amount=HK$40,968, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@ceb4bd2, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,344 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,344 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,345 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,345 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12804, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$421, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,345 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,345 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,345 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,346 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12814, description=Listed KS200 SEP16 215/270 1/-1 European Risk Reversal REF 248 (JUN16), size=400, hedge=48, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$859, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,346 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,346 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,346 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,347 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12815, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=600, hedge=50, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$868, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,347 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,347 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,347 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,347 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12816, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=25, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$434, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,347 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,347 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,348 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,348 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12847, description=Listed KS200 SEP16 220/270 1/-1 European Risk Reversal REF 248.50 (JUN16), size=200, hedge=28, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$432, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,348 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,348 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,348 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,349 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4e6d7365
2016-11-09 10:55:32,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,427 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,427 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,428 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed426f, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160026, invoice_date=09 May, 2016, account_number=CEL0015, due_date=09 June, 2016, amount_due=US$3,014, description=October 2016 Brokerage Fee, amount=US$3,014, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4e6d7365, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,429 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,429 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,429 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13151, description=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), size=300, hedge=50, reference=Seller - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$0, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,430 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,430 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,430 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,431 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13155, description=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), size=480, hedge=24, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$740, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,431 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,431 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,431 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,432 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13175, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=400, hedge=40, reference=Seller - Morgan Stanley & Co. International PLC - Sirus Pishvaie, fee=US$907, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,432 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,433 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,433 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,433 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13193, description=Listed KS200 DEC17 200 European Put REF 257 (DEC16), size=100, hedge=50, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$449, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,434 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,434 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,434 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,435 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3887cf88
2016-11-09 10:55:32,500 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,500 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,500 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,501 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4275, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160157, invoice_date=09 November, 2016, account_number=CEL0015, due_date=09 December, 2016, amount_due=US$2,096, description=October 2016 Brokerage Fee, amount=US$2,096, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3887cf88, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,501 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,501 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,501 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,502 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=800, hedge=20, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$9,840, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,502 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,502 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,502 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,503 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=600, hedge=33, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$7,596, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,503 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,503 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,503 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,504 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=400, hedge=18, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$5,016, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,504 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,505 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,505 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,506 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=400, hedge=0, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$4,800, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,506 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,506 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,506 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,506 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12878, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$1,200, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,507 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,507 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,507 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,507 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@78c7f9b3
2016-11-09 10:55:32,609 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,609 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,609 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,610 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed427c, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160037, invoice_date=09 June, 2016, account_number=CEL0001, due_date=09 July, 2016, amount_due=HK$28,452, description=October 2016 Brokerage Fee, amount=HK$28,452, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@78c7f9b3, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,610 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,610 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,610 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,611 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13171, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=1000, hedge=40, reference=Seller - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$15,600, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,611 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,611 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=1000, hedge=410, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$21,150, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13181, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=300, hedge=123, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$6,345, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,613 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@516ebdf8
2016-11-09 10:55:32,696 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,696 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,696 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,697 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4281, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=CEL-160158, invoice_date=09 November, 2016, account_number=CEL0024, due_date=09 December, 2016, amount_due=HK$43,095, description=October 2016 Brokerage Fee, amount=HK$43,095, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@516ebdf8, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,697 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,697 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,697 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,698 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13019, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=465, hedge=85, reference=Buyer - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$1,814, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,698 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,698 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,698 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,703 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@60921b21
2016-11-09 10:55:32,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4284, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160087, invoice_date=09 September, 2016, account_number=CEL0011, due_date=09 October, 2016, amount_due=US$1,814, description=October 2016 Brokerage Fee, amount=US$1,814, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@60921b21, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12912, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$510, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,783 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,783 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,783 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,505, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,783 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,784 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,784 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,784 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12920, description=Listed HSCEI SEP16 8400 European Straddle REF 8,300 (JUN16), size=66, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$335, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,784 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,784 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,784 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,785 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=200, hedge=31, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,310, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,785 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,785 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,785 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,785 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12930, description=Listed HSI JUN16 21400/21600 European Call Spread REF 20,775 (JUN16), size=200, hedge=11, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,035, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,785 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,786 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,786 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,786 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12931, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=200, hedge=10, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,050, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,786 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,787 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,787 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,787 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=14, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,140, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,787 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,787 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,787 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,788 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12943, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=25, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$280, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,788 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,788 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,788 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,789 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5226e402
2016-11-09 10:55:32,876 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,877 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,877 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,878 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed428e, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160056, invoice_date=09 July, 2016, account_number=CEL0008, due_date=09 August, 2016, amount_due=HK$8,165, description=October 2016 Brokerage Fee, amount=HK$8,165, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5226e402, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,878 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,878 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,878 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,878 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=200, hedge=11, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,110, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,878 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,879 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,879 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,879 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=100, hedge=12, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,120, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,879 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,879 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,879 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,880 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=100, hedge=20, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,400, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,880 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,880 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,880 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,880 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13100, description=Listed HSCEI MAR17 7000/8000 2/-1 European Put Ratio REF 9,700 (SEP16), size=75, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$700, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,881 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,881 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,881 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,881 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=53, hedge=9, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,150, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,881 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,881 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,882 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,882 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=99, hedge=1, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$874, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,882 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,882 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,882 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,890 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=50, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,000, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,890 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,891 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,891 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,892 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@52fc5eb1
2016-11-09 10:55:32,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed4297, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0004, due_date=09 November, 2016, amount_due=HK$11,354, description=October 2016 Brokerage Fee, amount=HK$11,354, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@52fc5eb1, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,925 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12955, description=Listed KS200 DEC17 260/290 1/-2 European Call Ratio REF 245 (SEP16), size=300, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$426, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@47f08b81
2016-11-09 10:55:32,992 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:32,992 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:32,992 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,993 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229024327c183c9fed429a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160068, invoice_date=09 August, 2016, account_number=CEL0006, due_date=09 September, 2016, amount_due=US$426, description=October 2016 Brokerage Fee, amount=US$426, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@47f08b81, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,993 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,993 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,993 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,994 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,275, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,994 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:32,994 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:32,994 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,995 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=400, hedge=116, reference=Seller - Société Générale (HK) Limited - David Bruchet, fee=HK$2,498, lastModified=Wed Nov 09 10:55:32 HKT 2016]
2016-11-09 10:55:32,995 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:32,995 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:32,995 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:32,996 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@773dab28
2016-11-09 10:55:33,058 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,059 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,059 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,059 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed429e, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160046, invoice_date=09 June, 2016, account_number=CEL0018, due_date=09 July, 2016, amount_due=HK$3,773, description=October 2016 Brokerage Fee, amount=HK$3,773, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@773dab28, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,060 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,060 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,060 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12891, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=US$610, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,060 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,060 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,060 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,061 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@675ffd1d
2016-11-09 10:55:33,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,105 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,105 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,106 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42a1, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160045, invoice_date=09 June, 2016, account_number=CEL0018, due_date=09 July, 2016, amount_due=US$610, description=October 2016 Brokerage Fee, amount=US$610, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@675ffd1d, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,106 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,106 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,107 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=1000, hedge=50, reference=Seller - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$21,000, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,107 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,107 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,108 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=1000, hedge=40, reference=Seller - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$20,800, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,108 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,108 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,108 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$2,000, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,109 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=1000, hedge=0, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$20,000, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,109 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,110 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=3200, hedge=32, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$64,640, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,110 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,110 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,110 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,111 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1704f67f
2016-11-09 10:55:33,163 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,164 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,164 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,165 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42a8, company=Daishin Securities Co., Ltd., address=, attn=, sentTo=leejw81@daishin.com;songjy@daishin.com, invoice_number=CEL-160108, invoice_date=09 September, 2016, account_number=CEL0022, due_date=09 October, 2016, amount_due=HK$128,440, description=October 2016 Brokerage Fee, amount=HK$128,440, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1704f67f, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,165 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,165 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,165 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,165 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=50, hedge=8, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$870, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,166 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,166 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,166 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,166 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5a8ba37c
2016-11-09 10:55:33,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,213 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,213 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42ab, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160001, invoice_date=09 March, 2016, account_number=CEL0005, due_date=09 April, 2016, amount_due=HK$870, description=October 2016 Brokerage Fee, amount=HK$870, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5a8ba37c, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,214 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12799, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=600, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$472, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12801, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 243.50 (JUN16), size=600, hedge=56, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$474, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,215 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,215 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12808, description=Listed KS200 JUL16 245 European Call REF 243 (JUN16), size=100, hedge=46, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=US$239, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,215 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,216 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,216 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,216 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12813, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248 (JUN16), size=300, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$350, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,216 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,216 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,216 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12816, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=25, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$244, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,217 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,217 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12824, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$359, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,218 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Apr-16, tradeId=CELERAEQ-2016-12849, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$352, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@9d1a267
2016-11-09 10:55:33,270 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,271 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,271 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,271 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42b4, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160023, invoice_date=09 May, 2016, account_number=CEL0014, due_date=09 June, 2016, amount_due=US$2,490, description=October 2016 Brokerage Fee, amount=US$2,490, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@9d1a267, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,271 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,271 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,272 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,272 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=125, hedge=7, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,980, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,272 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,272 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,272 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,273 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=200, hedge=10, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,150, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,273 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,273 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,273 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,273 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12869, description=Listed HSCEI DEC17 6400/8400 -2/1 European Put Ratio REF 8,400 (MAY16), size=171, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,625, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,273 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,273 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,274 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,274 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12872, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=200, hedge=14, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,210, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,274 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,274 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,274 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,274 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=150, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,280, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,275 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12881, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,275 (MAY16), size=75, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,155, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,275 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,276 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=150, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,128, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,276 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,276 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,276 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,277 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@49cf9028
2016-11-09 10:55:33,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42bd, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160032, invoice_date=09 June, 2016, account_number=CEL0005, due_date=09 July, 2016, amount_due=HK$16,528, description=October 2016 Brokerage Fee, amount=HK$16,528, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@49cf9028, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=100, hedge=24, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,860, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=300, hedge=13, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$4,695, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=300, hedge=72, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$5,580, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=300, hedge=15, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$4,725, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13025, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=16, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,240, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13029, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=16, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,240, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=17, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,255, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=200, hedge=38, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,570, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1d61c6dc
2016-11-09 10:55:33,348 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,348 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,348 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,349 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42c7, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0011, due_date=09 October, 2016, amount_due=HK$30,165, description=October 2016 Brokerage Fee, amount=HK$30,165, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1d61c6dc, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,349 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,349 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,349 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,350 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12838, description=Listed HSCEI DEC16/JUN17 6000 European Put Time Spread REF 9,275 (APR16), size=200, hedge=8, reference=Buyer - Celera Financial Limited - Martin, fee=HK$3,060, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,350 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,350 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,350 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,350 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Apr-16, tradeId=CELERAEQ-2016-12850, description=Listed HSCEI MAY16 Futures, size=4, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$60, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,350 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,351 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,351 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,351 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12856, description=Listed HSCEI MAY16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$150, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,351 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,351 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,351 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,351 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12856, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=8, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$150, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,352 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,352 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,352 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,352 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@73ad7e90
2016-11-09 10:55:33,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42cd, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0013, due_date=09 June, 2016, amount_due=HK$3,420, description=October 2016 Brokerage Fee, amount=HK$3,420, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@73ad7e90, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=300, hedge=9, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$5,119, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Buyer - UBS AG London Branch - David Best, fee=HK$3,636, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,371 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=400, hedge=164, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$9,825, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,371 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=200, hedge=12, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,500, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,372 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13195, description=Listed HSCEI DEC17 9600 European Straddle REF 9,575 (NOV16), size=66, hedge=1, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$995, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,373 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,373 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2881ad47
2016-11-09 10:55:33,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,424 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,424 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,424 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42d4, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160165, invoice_date=09 November, 2016, account_number=CEL0007, due_date=09 December, 2016, amount_due=HK$31,075, description=October 2016 Brokerage Fee, amount=HK$31,075, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2881ad47, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,425 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,425 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,425 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,425 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Jun-16, tradeId=CELERAEQ-2016-12937, description=Listed KS200 DEC16 220 European Put REF 240 (SEP16), size=100, hedge=22, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$769, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,425 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,425 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,426 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,426 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6c1832aa
2016-11-09 10:55:33,505 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,506 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,506 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,506 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42d7, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160058, invoice_date=09 July, 2016, account_number=CEL0007, due_date=09 August, 2016, amount_due=US$769, description=October 2016 Brokerage Fee, amount=US$769, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6c1832aa, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,507 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12886, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$1,535, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,507 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,508 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7063686f
2016-11-09 10:55:33,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,547 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,548 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42da, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160038, invoice_date=09 June, 2016, account_number=CEL0007, due_date=09 July, 2016, amount_due=US$1,535, description=October 2016 Brokerage Fee, amount=US$1,535, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7063686f, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,548 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Jun-16, tradeId=CELERAEQ-2016-12892, description=Listed KS200 DEC17 190/220 -2/1 European Put Ratio REF 242.50 (JUN16), size=300, hedge=0, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$0, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,549 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,549 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,549 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5a00eb1e
2016-11-09 10:55:33,565 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,565 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,565 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,566 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42dd, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0015, due_date=09 August, 2016, amount_due=US$0, description=October 2016 Brokerage Fee, amount=US$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5a00eb1e, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,566 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,566 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,566 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12886, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$819, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,566 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,567 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,567 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12887, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$819, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,567 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,567 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,567 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,568 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12890, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$407, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,568 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,568 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,568 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,568 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@f096f37
2016-11-09 10:55:33,585 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,586 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,587 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,587 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42e2, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0015, due_date=09 July, 2016, amount_due=US$2,045, description=October 2016 Brokerage Fee, amount=US$2,045, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@f096f37, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,587 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,588 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,588 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,588 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12798, description=Listed HSCEI SEP16 8800 European Straddle REF 8,625 (APR16), size=100, hedge=8, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$1,370, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,588 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,588 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,588 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,588 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12807, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=200, hedge=78, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$4,390, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,589 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12812, description=Listed HSCEI SEP16 7000/8400 -2/1 European Put Ratio REF 9,200 (APR16), size=300, hedge=10, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$6,050, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,589 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,589 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,280, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,590 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$8,280, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,590 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,591 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3bdb2c78
2016-11-09 10:55:33,608 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,608 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,608 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,609 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42e9, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0007, due_date=09 June, 2016, amount_due=HK$31,370, description=October 2016 Brokerage Fee, amount=HK$31,370, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3bdb2c78, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,609 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,609 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,609 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,610 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13089, description=Listed KS200 MAR17 210 European Put REF 263 (DEC16), size=200, hedge=20, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,203, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,610 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,610 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,610 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,610 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13091, description=Listed KS200 DEC16 260 European Straddle REF 262.50 (DEC16), size=800, hedge=48, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$2,402, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,610 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,611 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13106, description=Listed KS200 NOV16/MAR17 260 -1/1 European Straddle Time Spread REF 253.50 (DEC16), size=400, hedge=65, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,611 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13117, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$567, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13120, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=400, hedge=84, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13122, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=200, hedge=42, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$573, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13124, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=300, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,723, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,613 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,613 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,613 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13128, description=Listed KS200 NOV16 235/255 -2/1 European Put Ratio REF 260 (DEC16), size=600, hedge=48, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,613 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,614 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,614 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,614 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6d469831
2016-11-09 10:55:33,728 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,728 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,728 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,729 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42f3, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160127, invoice_date=09 October, 2016, account_number=CEL0003, due_date=09 November, 2016, amount_due=US$6,468, description=October 2016 Brokerage Fee, amount=US$6,468, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6d469831, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,729 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,729 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,729 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,729 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13190, description=Listed HSCEI DEC16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$150, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,730 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13194, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=100, hedge=24, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$1,860, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,730 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,731 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@205bed61
2016-11-09 10:55:33,831 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,831 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,831 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,832 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42f7, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160148, invoice_date=09 November, 2016, account_number=CEL0013, due_date=09 December, 2016, amount_due=HK$2,010, description=October 2016 Brokerage Fee, amount=HK$2,010, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@205bed61, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,832 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,832 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,832 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,832 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Feb-16, tradeId=CELERAEQ-2016-12787, description=Listed SPX JUN16 2150 European Call REF 2,115 (MAR16), size=200, hedge=80, reference=Seller - Thierry, fee=US$2, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,833 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,833 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,833 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,833 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3baf6936
2016-11-09 10:55:33,848 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,848 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,848 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,849 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed42fa, company=Thierry, address=, attn=, sentTo=, invoice_number=, invoice_date=09 March, 2016, account_number=CEL0030, due_date=09 April, 2016, amount_due=US$2, description=October 2016 Brokerage Fee, amount=US$2, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3baf6936, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,849 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,849 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,849 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,849 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=100, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$408, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,850 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=500, hedge=15, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,725, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,850 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,851 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=232, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,585, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,851 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,851 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,851 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,851 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12950, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=134, hedge=4, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,070, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,852 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12959, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,775 (JUL16), size=625, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$9,450, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,852 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,853 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=875, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$13,125, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,853 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12974, description=Listed HSCEI DEC17 7200/10800 1/-1 European Risk Reversal REF 9,025 (JUL16), size=50, hedge=12, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$930, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,853 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,854 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=77, hedge=17, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,410, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=100, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,575, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,859 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=200, hedge=18, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,270, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=100, hedge=26, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,890, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=50, hedge=2, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$780, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,861 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,861 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,862 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@cbc8d0f
2016-11-09 10:55:33,918 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,919 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,919 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,919 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed4308, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160072, invoice_date=09 August, 2016, account_number=CEL0003, due_date=09 September, 2016, amount_due=HK$46,218, description=October 2016 Brokerage Fee, amount=HK$46,218, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@cbc8d0f, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,920 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=100, hedge=39, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,085, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,920 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,921 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=49, hedge=19, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,020, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,921 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=150, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,250, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,921 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,922 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=150, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,250, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,922 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,922 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,922 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,922 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12837, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Seller - Liquid Capital Australia Pty Ltd. - Rami Sadi, fee=HK$3,840, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,922 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,923 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,923 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,923 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12838, description=Listed HSCEI DEC16/JUN17 6000 European Put Time Spread REF 9,275 (APR16), size=200, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,060, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,923 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,923 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,924 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12840, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,340, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12841, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,340, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,925 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12844, description=Listed HSCEI SEP16 8800/9600 1/-1 European Risk Reversal REF 9,075 (APR16), size=104, hedge=41, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,175, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,925 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12851, description=Listed HSCEI DEC17 12000/13800 European Call Spread REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$780, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$780, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,927 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,927 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,927 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12853, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$0, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,927 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,927 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,928 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,930 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6a9b9909
2016-11-09 10:55:33,948 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:33,951 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:33,951 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,952 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229025327c183c9fed4316, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0005, due_date=09 June, 2016, amount_due=HK$22,920, description=October 2016 Brokerage Fee, amount=HK$22,920, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6a9b9909, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,953 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,953 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,953 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,953 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=200, hedge=28, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,420, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,953 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,954 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,954 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,954 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=500, hedge=28, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,112, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,954 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,954 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,954 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,955 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=90, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$1,425, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,955 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,955 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,955 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,955 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=400, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$6,300, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,955 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,956 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12873, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=400, hedge=28, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,712, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,956 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12874, description=Listed HSCEI JUN17 6000 European Put REF 8,250 (MAY16), size=100, hedge=14, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,420, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,956 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,957 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,000, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,957 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=450, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$6,840, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,957 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,958 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12882, description=Listed HSCEI SEP16 8200 European Straddle REF 8,275 (MAY16), size=50, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$780, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,958 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,958 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,958 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=750, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$11,400, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,958 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=200, hedge=88, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,320, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:33,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:33,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12889, description=Listed HSCEI JUN16/DEC16 8000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=8, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,120, lastModified=Wed Nov 09 10:55:33 HKT 2016]
2016-11-09 10:55:33,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:33,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:33,960 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:33,961 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@12d1f1d4
2016-11-09 10:55:34,031 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,032 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,032 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,033 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4324, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160034, invoice_date=09 June, 2016, account_number=CEL0003, due_date=09 July, 2016, amount_due=HK$47,849, description=October 2016 Brokerage Fee, amount=HK$47,849, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@12d1f1d4, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,034 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,034 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,034 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,035 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12961, description=Listed KS200 MAR17 210/280 1/-1 European Risk Reversal REF 250 (SEP16), size=500, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,365, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,035 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,035 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,035 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,036 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6b69761b
2016-11-09 10:55:34,092 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,092 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,092 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,093 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4327, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160071, invoice_date=09 August, 2016, account_number=CEL0003, due_date=09 September, 2016, amount_due=US$1,365, description=October 2016 Brokerage Fee, amount=US$1,365, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6b69761b, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,093 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,094 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,094 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,095 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=800, hedge=32, reference=Buyer - Thierry, fee=HK$12,480, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,095 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,095 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,096 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=460, hedge=23, reference=Buyer - Thierry, fee=HK$7,245, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,096 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,096 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,097 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=800, hedge=20, reference=Buyer - Thierry, fee=HK$12,300, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,097 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,097 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,097 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,098 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13035, description=Listed HSCEI JUN17 9600 European Straddle REF 9,725 (AUG16), size=200, hedge=8, reference=Buyer - Thierry, fee=HK$3,120, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,098 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,098 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,098 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,098 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=800, hedge=0, reference=Buyer - Thierry, fee=HK$12,000, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,098 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,099 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,099 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,099 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=400, hedge=4, reference=Seller - Thierry, fee=HK$6,060, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,099 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,100 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,100 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3f725306
2016-11-09 10:55:34,142 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,142 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,142 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,143 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed432f, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160104, invoice_date=09 September, 2016, account_number=CEL0030, due_date=09 October, 2016, amount_due=HK$53,205, description=October 2016 Brokerage Fee, amount=HK$53,205, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3f725306, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,143 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,143 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,143 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,143 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=96, hedge=11, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,144 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,144 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,144 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,144 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=51, hedge=19, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,144 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,145 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,145 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,145 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=150, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,146 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,146 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,146 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,146 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=94, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,147 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,147 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,147 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=200, hedge=71, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,148 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,148 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,150 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=200, hedge=68, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,150 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=96, hedge=12, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12935, description=Listed HSCEI DEC16 9000/10400 European Call Spread REF 8,325 (JUN16), size=120, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=31, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@336206d8
2016-11-09 10:55:34,175 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed433a, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0012, due_date=09 August, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@336206d8, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,178 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=125, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,834, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,178 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,178 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,179 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13170, description=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,179 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,179 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,179 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,180 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13195, description=Listed HSCEI DEC17 9600 European Straddle REF 9,575 (NOV16), size=66, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$938, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,180 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,180 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,180 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,181 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13197, description=Listed HSCEI DEC16 8800/9600 -1.5/1 European Put Ratio REF 9,575 (NOV16), size=250, hedge=20, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,780, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,181 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,182 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,182 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,182 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@72f8ae0c
2016-11-09 10:55:34,233 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4340, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160155, invoice_date=09 November, 2016, account_number=CEL0005, due_date=09 December, 2016, amount_due=HK$7,266, description=October 2016 Brokerage Fee, amount=HK$7,266, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@72f8ae0c, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12805, description=Listed HSCEI DEC17 9600/11600 1/-2 European Call Ratio REF 8,600 (APR16), size=165, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,052, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=459, hedge=179, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,656, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Apr-16, tradeId=CELERAEQ-2016-12817, description=Listed HSCEI JUN16 8600/10000 1/1 European Strangle REF 9,100 (APR16), size=52, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$696, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=340, hedge=17, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$4,284, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,072, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,238 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=600, hedge=168, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$5,789, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,238 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,238 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,238 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,238 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,144, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,238 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,239 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,239 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,239 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@31ee2fdb
2016-11-09 10:55:34,283 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,284 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,284 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,284 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed434a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160018, invoice_date=09 May, 2016, account_number=CEL0006, due_date=09 June, 2016, amount_due=HK$35,693, description=October 2016 Brokerage Fee, amount=HK$35,693, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@31ee2fdb, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,284 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,285 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,285 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,286 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12794, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$238, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,286 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,286 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,287 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,287 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@32e54a9d
2016-11-09 10:55:34,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,322 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,322 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed434d, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160007, invoice_date=09 April, 2016, account_number=CEL0014, due_date=09 May, 2016, amount_due=US$238, description=October 2016 Brokerage Fee, amount=US$238, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@32e54a9d, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13033, description=Listed HSCEI MAR17 7800 European Put REF 9,725 (AUG16), size=100, hedge=13, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$2,260, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13070, description=Listed HSCEI DEC17 5000 European Put REF 9,550 (SEP16), size=200, hedge=10, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$4,200, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@748d2277
2016-11-09 10:55:34,365 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,366 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,366 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4351, company=HMC Investment, address=, attn=, sentTo=0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com, invoice_number=CEL-160109, invoice_date=09 September, 2016, account_number=CEL0023, due_date=09 October, 2016, amount_due=HK$6,460, description=October 2016 Brokerage Fee, amount=HK$6,460, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@748d2277, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=450, hedge=3, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$6,795, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13167, description=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), size=300, hedge=33, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$4,995, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13182, description=Listed HSCEI JUN17 9600/10400 European Call Spread REF 9,850 (OCT16), size=400, hedge=36, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$6,540, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,371 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1c26273d
2016-11-09 10:55:34,406 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,407 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,407 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,407 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4356, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160156, invoice_date=09 November, 2016, account_number=CEL0019, due_date=09 December, 2016, amount_due=HK$18,330, description=October 2016 Brokerage Fee, amount=HK$18,330, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1c26273d, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,407 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,408 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,408 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,408 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12833, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$825, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,408 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,408 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,408 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,409 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12847, description=Listed KS200 SEP16 220/270 1/-1 European Risk Reversal REF 248.50 (JUN16), size=200, hedge=28, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$810, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,409 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,409 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,409 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,409 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7412ed6b
2016-11-09 10:55:34,443 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,444 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,444 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,444 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed435a, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160019, invoice_date=09 May, 2016, account_number=CEL0007, due_date=09 June, 2016, amount_due=US$1,635, description=October 2016 Brokerage Fee, amount=US$1,635, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7412ed6b, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,445 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Oct-16, tradeId=CELERAEQ-2016-13162, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=300, hedge=120, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$2,553, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,445 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,446 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Oct-16, tradeId=CELERAEQ-2016-13161, description=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), size=200, hedge=30, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$1,708, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,446 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,446 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,446 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,446 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13173, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=600, hedge=93, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$2,561, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,447 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13174, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=400, hedge=62, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$1,708, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,447 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,448 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13179, description=Listed KS200 DEC17 240/260 European Put Spread REF 258.50 (DEC16), size=224, hedge=20, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$957, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,448 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,448 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,448 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13187, description=Listed KS200 JUN17 240/270 1/-1 European Risk Reversal REF 255 (DEC16), size=600, hedge=174, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$2,534, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,449 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,449 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,449 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@53c6f96d
2016-11-09 10:55:34,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,487 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,487 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4362, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160164, invoice_date=09 November, 2016, account_number=CEL0007, due_date=09 December, 2016, amount_due=US$12,021, description=October 2016 Brokerage Fee, amount=US$12,021, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@53c6f96d, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,488 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,488 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=1000, hedge=95, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$13,140, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,489 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,489 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,489 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13153, description=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=27, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,724, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,489 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,489 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,489 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=1500, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$18,240, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=1000, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$12,060, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=60, hedge=3, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$756, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,491 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=500, hedge=30, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$6,360, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,492 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@f5b6e78
2016-11-09 10:55:34,537 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,537 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,537 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,538 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed436a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160154, invoice_date=09 November, 2016, account_number=CEL0006, due_date=09 December, 2016, amount_due=HK$53,280, description=October 2016 Brokerage Fee, amount=HK$53,280, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@f5b6e78, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,538 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,538 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,538 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,538 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=200, hedge=2, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,030, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,538 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,539 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,539 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,539 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,575, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,539 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,539 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,539 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,540 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=100, hedge=18, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,770, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,540 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,540 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,540 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,540 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13006, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,250 (AUG16), size=108, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,725, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,541 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=100, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,055, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,541 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,542 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=300, hedge=72, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,580, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,542 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,542 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,542 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,543 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=200, hedge=38, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,570, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,543 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,543 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,544 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,544 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=304, hedge=38, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,130, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,544 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,545 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,545 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,545 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=780, hedge=13, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$11,895, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,545 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,545 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,546 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=400, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,300, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=158, hedge=30, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,820, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,547 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,150, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,548 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13025, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,240, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,548 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=320, hedge=8, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,312, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13029, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,240, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,549 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,550 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=100, hedge=8, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,620, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,550 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,550 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,550 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,550 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=306, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,980, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,550 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,551 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,551 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,551 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=100, hedge=19, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,785, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,551 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,552 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,552 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,552 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13033, description=Listed HSCEI MAR17 7800 European Put REF 9,725 (AUG16), size=100, hedge=13, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,695, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,553 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=400, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,240, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,553 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,554 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=100, hedge=39, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,085, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,554 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,554 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,554 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,555 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,555 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=1000, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$15,150, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,555 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13069, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,115, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,556 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,556 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13070, description=Listed HSCEI DEC17 5000 European Put REF 9,550 (SEP16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,150, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,557 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,557 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,557 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@285c6918
2016-11-09 10:55:34,576 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,576 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,577 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,577 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4385, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0003, due_date=09 October, 2016, amount_due=HK$96,712, description=October 2016 Brokerage Fee, amount=HK$96,712, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@285c6918, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,577 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,577 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,577 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,578 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=300, hedge=36, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$5,040, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,578 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,578 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,578 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,579 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13140, description=Listed HSCEI SEP16 9600/9800 European Put Spread REF 9,625 (SEP16), size=200, hedge=34, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$3,510, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,579 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,579 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,579 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,579 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Sep-16, tradeId=CELERAEQ-2016-13141, description=Listed HSCEI SEP16 9600/9800 European Call Spread REF 9,600 (SEP16), size=200, hedge=37, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$3,555, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,579 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,580 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,580 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,580 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4afbb6c2
2016-11-09 10:55:34,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,594 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed438a, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0019, due_date=09 November, 2016, amount_due=HK$12,105, description=October 2016 Brokerage Fee, amount=HK$12,105, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4afbb6c2, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=200, hedge=6, reference=Seller - Deutsche Bank AG London Branch - Payton Ong, fee=HK$3,090, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@370c1968
2016-11-09 10:55:34,629 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,630 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,630 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,630 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed438d, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160150, invoice_date=09 November, 2016, account_number=CEL0002, due_date=09 December, 2016, amount_due=HK$3,090, description=October 2016 Brokerage Fee, amount=HK$3,090, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@370c1968, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,630 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,631 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,631 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,631 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13076, description=Listed HSI JUN17 25000 European Call REF 23,175 (SEP16), size=100, hedge=31, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$1,965, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,631 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,631 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,631 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=300, hedge=0, reference=Buyer - Deutsche Bank AG London Branch - James Quinn, fee=HK$4,500, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,632 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,632 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Seller - Deutsche Bank AG London Branch - James Quinn, fee=HK$17,250, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,633 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,633 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,633 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1a8df0b3
2016-11-09 10:55:34,669 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,669 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,669 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,670 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed4392, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160145, invoice_date=09 October, 2016, account_number=CEL0002, due_date=09 November, 2016, amount_due=HK$23,715, description=October 2016 Brokerage Fee, amount=HK$23,715, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1a8df0b3, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,670 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13003, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=112, hedge=5, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,670 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,671 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=33, hedge=6, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,671 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=100, hedge=5, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,671 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,672 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=50, hedge=11, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,672 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,672 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,673 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=26, hedge=10, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,673 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,673 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,673 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,673 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3a790e40
2016-11-09 10:55:34,689 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,690 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,692 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,693 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed439a, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0012, due_date=09 October, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3a790e40, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,693 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,694 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,694 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,694 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13026, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=10, reference=Seller - Samsung Securities Co., Ltd - Jiman Park, fee=HK$4,400, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,694 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,695 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,695 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,696 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@56b859a6
2016-11-09 10:55:34,716 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,717 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,717 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,718 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed439d, company=Samsung Securities Co., Ltd, address=, attn=82220208426, sentTo=youngja.yoon@samsung.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0026, due_date=09 October, 2016, amount_due=HK$4,400, description=October 2016 Brokerage Fee, amount=HK$4,400, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@56b859a6, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,718 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,718 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,718 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,719 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12893, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=1000, hedge=100, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,533, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,719 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,719 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,719 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,720 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12894, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=400, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$613, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,720 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,720 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,720 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,721 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12895, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=600, hedge=60, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$920, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,721 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,721 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,721 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,721 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7c3e4b1a
2016-11-09 10:55:34,759 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,760 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,760 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,760 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed43a2, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160064, invoice_date=09 July, 2016, account_number=CEL0018, due_date=09 August, 2016, amount_due=US$3,066, description=October 2016 Brokerage Fee, amount=US$3,066, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7c3e4b1a, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,760 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,760 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,760 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,761 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=51, hedge=19, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,761 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13100, description=Listed HSCEI MAR17 7000/8000 2/-1 European Put Ratio REF 9,700 (SEP16), size=75, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,050, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,761 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,762 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13102, description=Listed HSCEI SEP16/DEC16 Future Spread REF 9,713 (SEP16), size=28, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$112, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,762 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=100, hedge=17, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,638, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,762 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=28, hedge=7, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$490, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,762 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,763 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=100, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,610, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,763 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,764 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3bec5821
2016-11-09 10:55:34,814 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,815 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,815 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,815 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed43aa, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160126, invoice_date=09 October, 2016, account_number=CEL0012, due_date=09 November, 2016, amount_due=HK$4,900, description=October 2016 Brokerage Fee, amount=HK$4,900, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3bec5821, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,816 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=104, hedge=12, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,368, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,816 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,817 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=81, hedge=30, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,920, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,817 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=160, hedge=2, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,300, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,817 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,818 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12935, description=Listed HSCEI DEC16 9000/10400 European Call Spread REF 8,325 (JUN16), size=120, hedge=15, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,590, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,818 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=28, hedge=4, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$600, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,818 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,819 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12943, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=25, hedge=3, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$530, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,819 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,819 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,819 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,819 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@411a5965
2016-11-09 10:55:34,882 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,882 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,882 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,883 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed43b2, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160055, invoice_date=09 July, 2016, account_number=CEL0004, due_date=09 August, 2016, amount_due=HK$7,308, description=October 2016 Brokerage Fee, amount=HK$7,308, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@411a5965, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,883 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,883 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,883 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,883 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13007, description=Listed KS200 JUN17 210/280 -1/1 European Risk Reversal REF 254 (SEP16), size=400, hedge=70, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$913, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,883 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,884 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,884 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,884 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13058, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256 (SEP16), size=1000, hedge=215, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$2,298, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,884 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,884 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,884 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,885 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6a9cd0f8
2016-11-09 10:55:34,922 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,922 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,922 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,923 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed43b6, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160089, invoice_date=09 September, 2016, account_number=CEL0006, due_date=09 October, 2016, amount_due=US$3,211, description=October 2016 Brokerage Fee, amount=US$3,211, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6a9cd0f8, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,923 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,923 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,923 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=400, hedge=40, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$5,280, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,924 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jun-16, tradeId=CELERAEQ-2016-12926, description=Listed HSCEI DEC16 8600 European Straddle REF 8,525 (JUN16), size=400, hedge=8, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$4,896, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,924 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=200, hedge=68, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$3,216, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=71, hedge=35, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$1,272, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12941, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=100, hedge=18, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$1,416, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,927 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,927 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3330f3ad
2016-11-09 10:55:34,967 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:34,968 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:34,968 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,968 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229026327c183c9fed43bd, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160057, invoice_date=09 July, 2016, account_number=CEL0001, due_date=09 August, 2016, amount_due=HK$16,080, description=October 2016 Brokerage Fee, amount=HK$16,080, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3330f3ad, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,968 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,968 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,969 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,969 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13076, description=Listed HSI JUN17 25000 European Call REF 23,175 (SEP16), size=100, hedge=31, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,965, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,969 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,969 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,969 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,969 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=400, hedge=22, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,330, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,969 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,970 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,970 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,970 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=200, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,000, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,970 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,970 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,970 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,971 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13080, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=500, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,890, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,971 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13081, description=Listed HSI DEC17 14400 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$795, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,971 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,972 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$795, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,972 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13083, description=Listed HSCEI DEC18 10000/12000 1/-2 European Call Ratio REF 9,850 (SEP16), size=150, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,972 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,972 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13084, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,973 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13085, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,973 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13093, description=Listed HSCEI SEP16 10000 European Call REF 10,075 (SEP16), size=200, hedge=116, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,695, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,973 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,974 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,974 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=100, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,055, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,974 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,975 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=300, hedge=42, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,130, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,975 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13103, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,750 (SEP16), size=200, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,075, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,975 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,976 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=400, hedge=20, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,300, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,976 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=200, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,045, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13109, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,550 (SEP16), size=200, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,075, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=100, hedge=19, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,785, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=100, hedge=17, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,755, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13112, description=Listed HSI SEP16 22600/23200 -2/1 European Put Ratio REF 23,200 (SEP16), size=450, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,750, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,980 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,981 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=300, hedge=6, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,590, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,981 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13125, description=Listed HSCEI DEC18 10800/12600 -1/2 European Call Ratio REF 10,000 (SEP16), size=450, hedge=18, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,020, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,981 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,982 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,982 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13134, description=Listed HSI DEC17 24000 European Straddle REF 23,750 (SEP16), size=200, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,045, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,982 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,982 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,982 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,982 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13135, description=Listed HSCEI DEC18 9600 European Straddle REF 9,750 (SEP16), size=200, hedge=11, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,165, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,982 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,983 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Sep-16, tradeId=CELERAEQ-2016-13141, description=Listed HSCEI SEP16 9600/9800 European Call Spread REF 9,600 (SEP16), size=200, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,983 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=800, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,983 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,984 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,984 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,984 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=100, hedge=1, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,515, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,984 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,984 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,984 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,985 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$750, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,985 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,985 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,985 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,986 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,986 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:34,986 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:34,986 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,986 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13149, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=50, hedge=25, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,125, lastModified=Wed Nov 09 10:55:34 HKT 2016]
2016-11-09 10:55:34,992 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:34,992 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:34,993 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:34,993 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6690b9fa
2016-11-09 10:55:35,055 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,055 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,055 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,056 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed43dd, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160128, invoice_date=09 October, 2016, account_number=CEL0003, due_date=09 November, 2016, amount_due=HK$79,650, description=October 2016 Brokerage Fee, amount=HK$79,650, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6690b9fa, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,056 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,056 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,056 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,057 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12945, description=Listed HSCEI DEC17 6600 European Put REF 8,700 (JUL16), size=230, hedge=37, reference=Buyer - Celera Financial Limited - Martin, fee=HK$4,560, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,057 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,057 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,057 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@53ce2392
2016-11-09 10:55:35,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,095 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,095 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,096 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed43e0, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160084, invoice_date=09 August, 2016, account_number=CEL0013, due_date=09 September, 2016, amount_due=HK$4,560, description=October 2016 Brokerage Fee, amount=HK$4,560, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@53ce2392, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,096 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,096 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,096 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=4000, hedge=13, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$60,195, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,096 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,097 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,097 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=400, hedge=24, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$6,360, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,097 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,097 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,097 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,097 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13194, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=100, hedge=7, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$1,605, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,098 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,098 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,098 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,098 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2703d91
2016-11-09 10:55:35,133 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed43e5, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160146, invoice_date=09 November, 2016, account_number=CEL0021, due_date=09 December, 2016, amount_due=HK$68,160, description=October 2016 Brokerage Fee, amount=HK$68,160, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2703d91, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=100, hedge=24, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$2,104, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,134 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=1, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$1,606, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=200, hedge=36, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$4,513, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=400, hedge=96, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$9,275, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=440, hedge=11, reference=Buyer - UBS AG London Branch - David Best, fee=HK$1,858, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@71a3e05c
2016-11-09 10:55:35,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,150 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,150 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed43ec, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0007, due_date=09 October, 2016, amount_due=HK$19,356, description=October 2016 Brokerage Fee, amount=HK$19,356, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@71a3e05c, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=306, hedge=29, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13156, description=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), size=58, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=100, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=400, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=900, hedge=93, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13168, description=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), size=200, hedge=41, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,547, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,155 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=200, hedge=17, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,255, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,155 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13170, description=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), size=50, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$765, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,156 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=600, hedge=246, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$12,690, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,156 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,156 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,156 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,156 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13182, description=Listed HSCEI JUN17 9600/10400 European Call Spread REF 9,850 (OCT16), size=400, hedge=36, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,540, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,156 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,157 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=60, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$945, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,157 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13188, description=Listed HSI NOV16 23200 European Straddle REF 23,300 (OCT16), size=200, hedge=8, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,120, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13189, description=Listed HSI NOV16 23200 European Straddle REF 23,050 (NOV16), size=50, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$765, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13196, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=200, hedge=14, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,210, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,159 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,159 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,159 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@57a6a933
2016-11-09 10:55:35,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,205 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed43fd, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160160, invoice_date=09 November, 2016, account_number=CEL0003, due_date=09 December, 2016, amount_due=HK$33,837, description=October 2016 Brokerage Fee, amount=HK$33,837, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@57a6a933, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=100, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,112, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$480, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12811, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$480, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=1000, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,048, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,048, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,210 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12827, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,050 (APR16), size=300, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,528, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,210 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,210 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,211 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,211 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12831, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,712, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,211 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,212 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=1000, hedge=280, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,240, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,212 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=334, hedge=23, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,856, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,212 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,213 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=HK$4,096, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,213 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12837, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=HK$2,048, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,213 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12851, description=Listed HSCEI DEC17 12000/13800 European Call Spread REF 8,950 (MAY16), size=50, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$416, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,214 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=100, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$832, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,215 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4f169009
2016-11-09 10:55:35,230 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,230 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,230 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,231 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed440f, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0014, due_date=09 June, 2016, amount_due=HK$64,096, description=October 2016 Brokerage Fee, amount=HK$64,096, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4f169009, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,231 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,231 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,231 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,231 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=150, hedge=6, reference=Seller - IBK Securities Co. Ltd - Park Jeong-Hyeon, fee=HK$2,340, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,231 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,232 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,232 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,232 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@22d9ca63
2016-11-09 10:55:35,285 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,285 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,285 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,286 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4412, company=IBK Securities Co. Ltd, address=, attn=82269155823, sentTo=twklem@ibks.com , invoice_number=CEL-160115, invoice_date=09 September, 2016, account_number=CEL0027, due_date=09 October, 2016, amount_due=HK$2,340, description=October 2016 Brokerage Fee, amount=HK$2,340, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@22d9ca63, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,286 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,286 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,286 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,286 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Jun-16, tradeId=CELERAEQ-2016-12896, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,550 (JUN16), size=150, hedge=3, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,836, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,286 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,286 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,287 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,287 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12903, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=3000, hedge=80, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$36,960, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,287 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,287 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,287 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,287 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12904, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=750, hedge=20, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,240, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,288 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,288 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,288 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,288 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12939, description=Listed HSCEI DEC16 9200 European Call REF 8,500 (JUL16), size=52, hedge=16, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,288 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,288 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,289 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,289 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=700, hedge=119, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,828, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,289 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,289 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,289 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,290 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7edb6fca
2016-11-09 10:55:35,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4419, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160051, invoice_date=09 July, 2016, account_number=CEL0006, due_date=09 August, 2016, amount_due=HK$58,680, description=October 2016 Brokerage Fee, amount=HK$58,680, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7edb6fca, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=200, hedge=72, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$2,505, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12912, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=250, hedge=5, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,570, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=200, hedge=71, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$1,264, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12928, description=Listed HSCEI DEC17 10000/10800 European Call Spread REF 8,625 (JUN16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,588, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=100, hedge=5, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$1,511, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=13, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$3,116, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4d7a64ca
2016-11-09 10:55:35,342 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,343 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,343 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,343 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4421, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 July, 2016, account_number=CEL0018, due_date=09 August, 2016, amount_due=HK$12,554, description=October 2016 Brokerage Fee, amount=HK$12,554, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4d7a64ca, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,343 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,343 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,343 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,344 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=17, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$3,255, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,344 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=50, hedge=1, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$765, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,344 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,345 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@10244722
2016-11-09 10:55:35,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,375 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4425, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160107, invoice_date=09 September, 2016, account_number=CEL0021, due_date=09 October, 2016, amount_due=HK$4,020, description=October 2016 Brokerage Fee, amount=HK$4,020, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@10244722, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,376 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,376 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Jun-16, tradeId=CELERAEQ-2016-12896, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,550 (JUN16), size=150, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,377 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=100, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,540, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,378 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jun-16, tradeId=CELERAEQ-2016-12908, description=Listed HSCEI DEC17 7000/8400 2/-1 European Put Ratio REF 8,400 (JUN16), size=180, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,562, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,378 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,204, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,378 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,379 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=106, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,624, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,379 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=120, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,722, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,379 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,380 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=110, hedge=39, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,086, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,380 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=240, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,402, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,380 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=104, hedge=13, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,638, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=49, hedge=24, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,022, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=28, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$448, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@69de5bed
2016-11-09 10:55:35,432 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,432 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,432 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,433 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4433, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160052, invoice_date=09 July, 2016, account_number=CEL0005, due_date=09 August, 2016, amount_due=HK$18,130, description=October 2016 Brokerage Fee, amount=HK$18,130, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@69de5bed, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,433 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=50, hedge=22, reference=Seller - Deutsche Bank AG London Branch - Payton Ong, fee=HK$1,080, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,433 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,434 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1f992a3a
2016-11-09 10:55:35,464 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,465 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,465 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,465 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4436, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160044, invoice_date=09 June, 2016, account_number=CEL0002, due_date=09 July, 2016, amount_due=HK$1,080, description=October 2016 Brokerage Fee, amount=HK$1,080, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1f992a3a, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,465 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,465 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13107, description=Listed N225 DEC16 14500/18500 1/-1 European Risk Reversal REF 16,600 (DEC16), size=600, hedge=81, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=JPY498,000, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,466 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,466 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@f2276c9
2016-11-09 10:55:35,479 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,479 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,479 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,480 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4439, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0025, due_date=09 November, 2016, amount_due=JPY498,000, description=October 2016 Brokerage Fee, amount=JPY498,000, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@f2276c9, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,480 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,480 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,480 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,481 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12795, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$423, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,481 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,481 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,481 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,481 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@202898d7
2016-11-09 10:55:35,513 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,513 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,513 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,514 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed443c, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160008, invoice_date=09 April, 2016, account_number=CEL0015, due_date=09 May, 2016, amount_due=US$423, description=October 2016 Brokerage Fee, amount=US$423, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@202898d7, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,514 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13122, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=200, hedge=42, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$1,147, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,514 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,515 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13123, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=200, hedge=36, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$2,298, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,515 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,515 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,515 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,515 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@611b35d6
2016-11-09 10:55:35,553 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,554 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4440, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160118, invoice_date=09 October, 2016, account_number=CEL0011, due_date=09 November, 2016, amount_due=US$3,445, description=October 2016 Brokerage Fee, amount=US$3,445, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@611b35d6, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,554 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,554 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,554 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,555 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - Woori Bank - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,555 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,555 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,555 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@23cd5d42
2016-11-09 10:55:35,556 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Woori Bank
2016-11-09 10:55:35,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,556 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,556 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=800, hedge=124, reference=Buyer - Thierry, fee=HK$13,860, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,557 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jun-16, tradeId=CELERAEQ-2016-12925, description=Listed HSCEI SEP16 6500 European Put REF 8,525 (JUN16), size=750, hedge=45, reference=Seller - Thierry, fee=HK$11,925, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,557 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=400, hedge=136, reference=Buyer - Thierry, fee=HK$8,040, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,558 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,558 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,558 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2b44d6d0
2016-11-09 10:55:35,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4447, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160066, invoice_date=09 July, 2016, account_number=CEL0030, due_date=09 August, 2016, amount_due=HK$33,825, description=October 2016 Brokerage Fee, amount=HK$33,825, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2b44d6d0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12799, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=600, hedge=50, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12800, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=300, hedge=25, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12801, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 243.50 (JUN16), size=600, hedge=56, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@577bf0aa
2016-11-09 10:55:35,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,611 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed444c, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 May, 2016, account_number=CEL0018, due_date=09 June, 2016, amount_due=US$0, description=October 2016 Brokerage Fee, amount=US$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@577bf0aa, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12812, description=Listed HSCEI SEP16 7000/8400 -2/1 European Put Ratio REF 9,200 (APR16), size=300, hedge=10, reference=Seller - Vivienne Court Trading Pty Ltd - Ernst Stillebroer, fee=HK$4,650, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=60, hedge=3, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen, fee=HK$1,230, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,613 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,613 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,613 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=150, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,400, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,613 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,614 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,614 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,614 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@188a5fc2
2016-11-09 10:55:35,669 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,669 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,669 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,670 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4451, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160014, invoice_date=09 May, 2016, account_number=CEL0004, due_date=09 June, 2016, amount_due=HK$7,280, description=October 2016 Brokerage Fee, amount=HK$7,280, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@188a5fc2, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,670 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,670 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,670 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,671 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12978, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=200, hedge=36, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,540, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,671 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,671 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,671 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,671 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12984, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,585, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,672 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,672 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,672 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,672 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@ce12fbb
2016-11-09 10:55:35,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,707 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,707 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,708 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4455, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160067, invoice_date=09 August, 2016, account_number=CEL0011, due_date=09 September, 2016, amount_due=HK$7,125, description=October 2016 Brokerage Fee, amount=HK$7,125, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@ce12fbb, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,708 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,708 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,708 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,708 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13061, description=Listed KS200 MAR17 210 European Put REF 255.50 (SEP16), size=120, hedge=48, reference=Seller - Samsung Securities Co., Ltd - Byunghoon Kim, fee=US$1,365, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,708 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,708 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,709 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,709 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6ee5f485
2016-11-09 10:55:35,754 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,755 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,755 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,755 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4458, company=Samsung Securities Co., Ltd, address=, attn=82220208426, sentTo=youngja.yoon@samsung.com, invoice_number=CEL-160113, invoice_date=09 September, 2016, account_number=CEL0026, due_date=09 October, 2016, amount_due=US$1,365, description=October 2016 Brokerage Fee, amount=US$1,365, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6ee5f485, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,755 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,755 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,755 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,756 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12793, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=150, hedge=38, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Julien Petit-Pasquier, fee=US$1,190, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,756 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,756 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,756 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,756 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12794, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Julien Petit-Pasquier, fee=US$793, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,757 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,757 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,757 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,758 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2f3928ac
2016-11-09 10:55:35,815 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,815 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,815 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,816 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed445c, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160004, invoice_date=09 April, 2016, account_number=CEL0009, due_date=09 May, 2016, amount_due=US$1,983, description=October 2016 Brokerage Fee, amount=US$1,983, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2f3928ac, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,816 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,816 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,816 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,816 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=274, hedge=107, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$4,572, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,816 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,817 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,817 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,817 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@67688110
2016-11-09 10:55:35,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,857 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,857 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,857 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed445f, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160011, invoice_date=09 May, 2016, account_number=CEL0001, due_date=09 June, 2016, amount_due=HK$4,572, description=October 2016 Brokerage Fee, amount=HK$4,572, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@67688110, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,857 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,858 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12861, description=Listed MEA JUN16 Forward REF 396 (JUN16), size=500, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,858 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12862, description=MEA JUN16 Forward REF 396 (JUN16), size=5000, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@790d8fdd
2016-11-09 10:55:35,859 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 10:55:35,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,859 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13017, description=Listed KS200 JUN18 210 European Put REF 257.50 (SEP16), size=200, hedge=36, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,170, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Aug-16, tradeId=CELERAEQ-2016-13038, description=Listed KS200 JUN17/JUN18 250 -1/1 European Straddle Time Spread REF 256.50 (SEP16), size=1000, hedge=25, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,448, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13040, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=600, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,155, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,861 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13041, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=65, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,861 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,861 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,861 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6403a4a5
2016-11-09 10:55:35,895 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,897 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,897 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,898 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed4468, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160092, invoice_date=09 September, 2016, account_number=CEL0003, due_date=09 October, 2016, amount_due=US$3,773, description=October 2016 Brokerage Fee, amount=US$3,773, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6403a4a5, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,898 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=400, hedge=112, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$7,680, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,898 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,899 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@77524ca7
2016-11-09 10:55:35,939 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,940 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,940 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,940 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed446b, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160029, invoice_date=09 June, 2016, account_number=CEL0011, due_date=09 July, 2016, amount_due=HK$7,680, description=October 2016 Brokerage Fee, amount=HK$7,680, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@77524ca7, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,940 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,941 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,941 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,941 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=2000, hedge=100, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$31,500, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,941 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,941 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,941 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,942 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@34045582
2016-11-09 10:55:35,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:35,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:35,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229027327c183c9fed446e, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=CEL-160121, invoice_date=09 October, 2016, account_number=CEL0024, due_date=09 November, 2016, amount_due=HK$31,500, description=October 2016 Brokerage Fee, amount=HK$31,500, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@34045582, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,980 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:35,980 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:35,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,981 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=50, hedge=8, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$870, lastModified=Wed Nov 09 10:55:35 HKT 2016]
2016-11-09 10:55:35,981 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:35,981 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:35,981 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:35,981 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@353e6389
2016-11-09 10:55:36,019 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,020 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,020 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,020 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4471, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160002, invoice_date=09 March, 2016, account_number=CEL0012, due_date=09 April, 2016, amount_due=HK$870, description=October 2016 Brokerage Fee, amount=HK$870, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@353e6389, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,020 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,021 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=31, hedge=12, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$430, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,021 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=51, hedge=20, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$710, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=150, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,500, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12854, description=Listed HSCEI MAY16 Futures, size=2, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,024 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,024 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,024 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,024 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12854, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=2, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, lastModified] in collection: tradedetail
2016-11-09 10:55:36,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12855, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=2, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=null, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,028 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7c588adc
2016-11-09 10:55:36,070 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,071 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,071 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,071 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed447a, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160021, invoice_date=09 May, 2016, account_number=CEL0008, due_date=09 June, 2016, amount_due=HK$3,160, description=October 2016 Brokerage Fee, amount=HK$3,160, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7c588adc, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,071 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,071 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,071 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,072 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12906, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=700, hedge=80, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,248, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,072 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12911, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=200, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,632, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,072 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12913, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,408, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12914, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,408, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12915, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=750, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,016, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,074 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12918, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,350 (JUN16), size=400, hedge=12, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,296, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,074 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12919, description=Listed HSCEI AUG16/JUN17 7000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,696, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,074 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,075 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12920, description=Listed HSCEI SEP16 8400 European Straddle REF 8,300 (JUN16), size=66, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$536, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,075 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=520, hedge=13, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,264, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,075 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,076 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=600, hedge=93, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,544, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,076 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=306, hedge=29, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,680, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,076 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jun-16, tradeId=CELERAEQ-2016-12925, description=Listed HSCEI SEP16 6500 European Put REF 8,525 (JUN16), size=750, hedge=45, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,360, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12928, description=Listed HSCEI DEC17 10000/10800 European Call Spread REF 8,625 (JUN16), size=400, hedge=20, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,360, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=800, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,530, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12930, description=Listed HSI JUN16 21400/21600 European Call Spread REF 20,775 (JUN16), size=200, hedge=7, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,691, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,078 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12931, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=200, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,730, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,078 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=100, hedge=5, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,365, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=400, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,600, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12936, description=Listed HSI JUL16 21000 European Call REF 20,200 (JUN16), size=200, hedge=48, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,224, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=200, hedge=98, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,384, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,080 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=1000, hedge=160, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,280, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,080 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12941, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=100, hedge=18, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$944, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,081 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=14, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,482, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,081 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,081 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,081 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,082 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@49a38b1
2016-11-09 10:55:36,125 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,126 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,126 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4493, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160061, invoice_date=09 July, 2016, account_number=CEL0014, due_date=09 August, 2016, amount_due=HK$84,678, description=October 2016 Brokerage Fee, amount=HK$84,678, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@49a38b1, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,126 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,126 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,127 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=336, hedge=15, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$5,265, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,127 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=300, hedge=1, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$4,515, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,127 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,128 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@64279ab
2016-11-09 10:55:36,156 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,157 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4497, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160142, invoice_date=09 October, 2016, account_number=CEL0021, due_date=09 November, 2016, amount_due=HK$9,780, description=October 2016 Brokerage Fee, amount=HK$9,780, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@64279ab, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12803, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Buyer - Nomura International Plc - Mathieu Bonhomme, fee=US$790, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12823, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=200, hedge=26, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$830, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,159 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7364f68
2016-11-09 10:55:36,188 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,188 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,188 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,188 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed449b, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160010, invoice_date=09 May, 2016, account_number=CEL0001, due_date=09 June, 2016, amount_due=US$1,620, description=October 2016 Brokerage Fee, amount=US$1,620, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7364f68, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,189 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12897, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=400, hedge=35, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$476, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,189 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12898, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=800, hedge=70, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$955, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,190 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,190 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,190 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12899, description=Listed KS200 DEC16 200 European Put REF 247 (JUN16), size=200, hedge=60, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$478, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,190 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,190 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,190 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,190 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7dbae40
2016-11-09 10:55:36,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44a0, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0014, due_date=09 August, 2016, amount_due=US$1,909, description=October 2016 Brokerage Fee, amount=US$1,909, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7dbae40, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13078, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=2, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,530, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=72, hedge=18, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,350, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,205 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@16f7f59f
2016-11-09 10:55:36,233 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,233 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44a4, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160119, invoice_date=09 October, 2016, account_number=CEL0011, due_date=09 November, 2016, amount_due=HK$2,880, description=October 2016 Brokerage Fee, amount=HK$2,880, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@16f7f59f, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12845, description=***THIS IS A PRE-CONFIRMATION ONLY***Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=HK$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5bec3e0
2016-11-09 10:55:36,234 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12798, description=Listed HSCEI SEP16 8800 European Straddle REF 8,625 (APR16), size=100, hedge=8, reference=Seller - Thierry, fee=HK$1,620, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=1600, hedge=80, reference=Seller - Thierry, fee=HK$25,200, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=300, hedge=0, reference=Buyer - Thierry, fee=HK$4,500, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,236 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3b57dba4
2016-11-09 10:55:36,265 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,265 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,265 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,265 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44ab, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160028, invoice_date=09 May, 2016, account_number=CEL0030, due_date=09 June, 2016, amount_due=HK$31,320, description=October 2016 Brokerage Fee, amount=HK$31,320, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3b57dba4, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,266 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$3,250, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,266 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,266 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12969, description=Listed HSCEI DEC17 10000 European Call REF 9,050 (JUL16), size=200, hedge=78, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$3,590, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,267 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=200, hedge=44, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,420, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,267 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12979, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=167, hedge=30, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$2,822, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,267 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,268 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=400, hedge=78, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,434, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,268 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=200, hedge=16, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,280, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,268 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,269 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,269 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@414b2df5
2016-11-09 10:55:36,304 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,304 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,304 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,305 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44b3, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160077, invoice_date=09 August, 2016, account_number=CEL0007, due_date=09 September, 2016, amount_due=HK$19,796, description=October 2016 Brokerage Fee, amount=HK$19,796, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@414b2df5, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,305 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13089, description=Listed KS200 MAR17 210 European Put REF 263 (DEC16), size=200, hedge=20, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$1,805, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,305 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,306 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13090, description=Listed KS200 JAN17/MAR17 220 European Put Time Spread REF 262.50 (DEC16), size=200, hedge=6, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$901, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,306 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13114, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=42, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$851, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,306 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,307 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13129, description=Listed KS200 NOV16 235/250 -2/1 European Put Ratio REF 259 (DEC16), size=900, hedge=36, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$2,642, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,307 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13136, description=Listed KS200 DEC16 260/275 1/-2 European Call Ratio REF 258.50 (DEC16), size=600, hedge=48, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$1,750, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,307 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,307 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@46612bfc
2016-11-09 10:55:36,339 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,339 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,339 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,339 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44ba, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160132, invoice_date=09 October, 2016, account_number=CEL0007, due_date=09 November, 2016, amount_due=US$7,949, description=October 2016 Brokerage Fee, amount=US$7,949, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@46612bfc, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13086, description=Listed KS200 NOV16 270 European Call REF 260.50 (SEP16), size=200, hedge=44, reference=Seller - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$945, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13106, description=Listed KS200 NOV16/MAR17 260 -1/1 European Straddle Time Spread REF 253.50 (DEC16), size=400, hedge=65, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$910, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,341 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13121, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=1000, hedge=210, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$2,293, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,341 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13123, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=200, hedge=36, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$919, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,341 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,342 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,342 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13124, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=300, hedge=60, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$1,379, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,342 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,342 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,342 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,342 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13136, description=Listed KS200 DEC16 260/275 1/-2 European Call Ratio REF 258.50 (DEC16), size=600, hedge=48, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$933, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,343 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,343 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,343 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,343 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7d66a126
2016-11-09 10:55:36,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,375 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44c2, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160136, invoice_date=09 October, 2016, account_number=CEL0015, due_date=09 November, 2016, amount_due=US$7,379, description=October 2016 Brokerage Fee, amount=US$7,379, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7d66a126, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,376 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,376 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Sep-16, tradeId=CELERAEQ-2016-13073, description=Listed HSCEI DEC17 11600/14400 1/-2 European Call Ratio REF 9,525 (SEP16), size=300, hedge=10, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,429, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,376 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,377 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=600, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$10,440, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,377 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,377 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13081, description=Listed HSI DEC17 14400 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,770, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,378 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=150, hedge=9, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,310, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,378 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,379 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=150, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,394, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,379 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13095, description=Listed HSCEI DEC17 10000 European Straddle REF 10,075 (SEP16), size=200, hedge=8, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,023, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,379 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,380 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13098, description=Listed HSCEI DEC17 6600 European Put REF 10,075 (SEP16), size=100, hedge=7, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,511, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,380 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=600, hedge=30, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,388, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,380 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=266, hedge=4, reference=Seller - Société Générale (HK) Limited - Jacinto Ferreira, fee=HK$9,386, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=100, hedge=26, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,470, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=200, hedge=38, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,489, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=500, hedge=140, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,388, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13133, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=100, hedge=28, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,478, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=300, hedge=3, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,474, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=200, hedge=2, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,005, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=200, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,013, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13147, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=100, hedge=50, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,499, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=200, hedge=1, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,983, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13149, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=50, hedge=25, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,749, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@33de7f3d
2016-11-09 10:55:36,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,427 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,427 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,427 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44d7, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160138, invoice_date=09 October, 2016, account_number=CEL0018, due_date=09 November, 2016, amount_due=HK$82,199, description=October 2016 Brokerage Fee, amount=HK$82,199, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@33de7f3d, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,427 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,427 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,428 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,428 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12802, description=Listed KS200 JUN16 245 European Straddle REF 243.50 (JUN16), size=200, hedge=50, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$527, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,428 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,428 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,428 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12815, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=600, hedge=50, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$1,085, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,429 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,429 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,429 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2c99c8d
2016-11-09 10:55:36,459 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,459 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,459 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,460 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44db, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160022, invoice_date=09 May, 2016, account_number=CEL0009, due_date=09 June, 2016, amount_due=US$1,612, description=October 2016 Brokerage Fee, amount=US$1,612, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2c99c8d, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,460 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=625, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,441, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,460 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,461 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=200, hedge=48, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,525, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,461 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=100, hedge=37, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,360, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,461 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,461 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=1080, hedge=18, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,022, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,462 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,858, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,462 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=58, hedge=11, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$990, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,463 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=5, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,895, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,463 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,835, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,463 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,464 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13037, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=60, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$875, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,464 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=300, hedge=12, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$4,320, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,464 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,465 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13047, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,775 (AUG16), size=104, hedge=11, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,776, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,465 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=1100, hedge=11, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,858, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,465 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=200, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,850, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13065, description=Listed HSI JUN17 22000 European Put REF 22,750 (SEP16), size=100, hedge=43, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,413, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=250, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,553, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13067, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,439, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=2500, hedge=110, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$14,325, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13071, description=Listed HSCEI DEC17 7400/10800 -1/1 European Risk Reversal REF 9,550 (SEP16), size=600, hedge=150, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,298, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=100, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,716, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@615e83ac
2016-11-09 10:55:36,511 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,511 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,511 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,511 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44f0, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160103, invoice_date=09 September, 2016, account_number=CEL0018, due_date=09 October, 2016, amount_due=HK$79,349, description=October 2016 Brokerage Fee, amount=HK$79,349, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@615e83ac, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,511 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,512 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,512 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,512 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12954, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Seller - Hyundai Securities - Juhyun Jeong, fee=HK$6,250, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,512 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,512 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,512 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,512 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@44ccd75c
2016-11-09 10:55:36,565 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,565 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,565 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,565 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed44f3, company=Hyundai Securities, address=, attn=82261141866, sentTo=syshin09@stockmarket.co.kr, invoice_number=CEL-160086, invoice_date=09 August, 2016, account_number=CEL0020, due_date=09 September, 2016, amount_due=HK$6,250, description=October 2016 Brokerage Fee, amount=HK$6,250, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@44ccd75c, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,565 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,566 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,566 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12790, description=Listed N225 SEP16 14000/15000/16000 1/-2/1 European Put Butterfly REF 16,025 (MAR16), size=400, hedge=4, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=JPY33, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,566 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,566 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,566 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@505d2bac
2016-11-09 10:55:36,566 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,567 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=166, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$855, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,567 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12949, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=100, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$515, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,567 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,568 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=46, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$510, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,568 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12973, description=Listed HSCEI SEP16 8200 European Put REF 9,075 (JUL16), size=100, hedge=16, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$580, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,568 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,569 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=27, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$330, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,569 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=100, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,050, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,569 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,570 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12980, description=Listed HSI DEC16 18000/25200 1/-1 European Risk Reversal REF 21,800 (JUL16), size=50, hedge=10, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$560, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,570 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=28, hedge=7, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$175, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,570 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,571 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=43, hedge=13, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$460, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,571 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=50, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$530, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,571 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,572 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=200, hedge=38, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,380, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,572 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12988, description=Listed HSI DEC16 22400/25200 1/-2 European Call Ratio REF 22,200 (JUL16), size=81, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$870, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,572 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,574 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12990, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=50, hedge=2, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,574 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=50, hedge=2, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,574 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,575 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4cecc15a
2016-11-09 10:55:36,590 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,591 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,591 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,592 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4505, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0008, due_date=09 September, 2016, amount_due=HK$9,855, description=October 2016 Brokerage Fee, amount=HK$9,855, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4cecc15a, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,592 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,592 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,592 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,592 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13015, description=Listed HSCEI DEC16 Future (DEC16), size=10, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$40, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,593 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,593 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,593 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,593 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13020, description=Listed HSCEI DEC16 Future (DEC16), size=10, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$40, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,593 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,594 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2fee69a1
2016-11-09 10:55:36,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4509, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160105, invoice_date=09 September, 2016, account_number=CEL0013, due_date=09 October, 2016, amount_due=HK$80, description=October 2016 Brokerage Fee, amount=HK$80, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2fee69a1, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13086, description=Listed KS200 NOV16 270 European Call REF 260.50 (SEP16), size=200, hedge=44, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$472, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13090, description=Listed KS200 JAN17/MAR17 220 European Put Time Spread REF 262.50 (DEC16), size=200, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$240, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13115, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=600, hedge=126, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$681, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13120, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=400, hedge=84, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$458, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13121, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=1000, hedge=210, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$1,147, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,637 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,638 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,638 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,638 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13128, description=Listed KS200 NOV16 235/255 -2/1 European Put Ratio REF 260 (DEC16), size=600, hedge=48, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$471, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,638 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,638 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,638 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,638 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@561d88ee
2016-11-09 10:55:36,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4511, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160134, invoice_date=09 October, 2016, account_number=CEL0014, due_date=09 November, 2016, amount_due=US$3,469, description=October 2016 Brokerage Fee, amount=US$3,469, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@561d88ee, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13151, description=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), size=300, hedge=50, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,680 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,680 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,680 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13155, description=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), size=480, hedge=24, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,680 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,681 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,681 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,681 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Oct-16, tradeId=CELERAEQ-2016-13161, description=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), size=200, hedge=30, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,681 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,681 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,681 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,681 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13173, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=600, hedge=93, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,708, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,682 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13175, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=400, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,134, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,682 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13176, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=200, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$567, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,682 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,683 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13179, description=Listed KS200 DEC17 240/260 European Put Spread REF 258.50 (DEC16), size=224, hedge=20, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$638, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,683 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13185, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=200, hedge=78, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,131, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,683 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,684 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13193, description=Listed KS200 DEC17 200 European Put REF 257 (DEC16), size=100, hedge=50, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$561, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,684 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,684 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,684 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,684 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@e4ca109
2016-11-09 10:55:36,721 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,721 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,721 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,722 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed451c, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160161, invoice_date=09 November, 2016, account_number=CEL0003, due_date=09 December, 2016, amount_due=US$5,739, description=October 2016 Brokerage Fee, amount=US$5,739, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@e4ca109, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,722 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13007, description=Listed KS200 JUN17 210/280 -1/1 European Risk Reversal REF 254 (SEP16), size=400, hedge=70, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$1,712, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,722 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,723 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@33a47707
2016-11-09 10:55:36,753 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,754 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,754 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,755 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed451f, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160097, invoice_date=09 September, 2016, account_number=CEL0007, due_date=09 October, 2016, amount_due=US$1,712, description=October 2016 Brokerage Fee, amount=US$1,712, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@33a47707, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,755 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,755 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,755 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,755 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13061, description=Listed KS200 MAR17 210 European Put REF 255.50 (SEP16), size=120, hedge=48, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$546, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,755 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,756 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,756 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,756 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4597e6e3
2016-11-09 10:55:36,791 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,791 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,791 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,791 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4522, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160101, invoice_date=09 September, 2016, account_number=CEL0015, due_date=09 October, 2016, amount_due=US$546, description=October 2016 Brokerage Fee, amount=US$546, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4597e6e3, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,792 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=125, hedge=7, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,370, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,792 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=310, hedge=17, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$3,890, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,793 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12868, description=Listed HSCEI JUN16 8600 European Call REF 8,450 (MAY16), size=100, hedge=32, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,320, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,793 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12889, description=Listed HSCEI JUN16/DEC16 8000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=8, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,480, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,793 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,794 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,794 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@395a573c
2016-11-09 10:55:36,829 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,829 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,829 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,830 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4528, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160035, invoice_date=09 June, 2016, account_number=CEL0004, due_date=09 July, 2016, amount_due=HK$10,060, description=October 2016 Brokerage Fee, amount=HK$10,060, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@395a573c, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,830 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,830 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,830 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,831 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=500, hedge=125, reference=Seller - Mirae Asset Securities Co. Ltd - Wonjun Hwang, fee=HK$9,375, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,831 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,831 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,831 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,832 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12956, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=200, hedge=42, reference=Seller - Mirae Asset Securities Co. Ltd - Wonjun Hwang, fee=HK$3,630, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,832 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,832 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,832 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,832 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@595814a1
2016-11-09 10:55:36,867 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,867 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,867 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,867 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed452c, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160085, invoice_date=09 August, 2016, account_number=CEL0019, due_date=09 September, 2016, amount_due=HK$13,005, description=October 2016 Brokerage Fee, amount=HK$13,005, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@595814a1, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,867 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,867 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,868 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12800, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=300, hedge=25, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$524, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,868 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12802, description=Listed KS200 JUN16 245 European Straddle REF 243.50 (JUN16), size=200, hedge=50, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$527, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,868 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,869 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12803, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,869 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12804, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,869 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12808, description=Listed KS200 JUL16 245 European Call REF 243 (JUN16), size=100, hedge=46, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$531, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,869 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,870 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12813, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248 (JUN16), size=300, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$538, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,870 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12814, description=Listed KS200 SEP16 215/270 1/-1 European Risk Reversal REF 248 (JUN16), size=400, hedge=48, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,870 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12821, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=800, hedge=104, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$2,212, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,870 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,871 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12823, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=200, hedge=26, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$553, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,871 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12825, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$552, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,871 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12829, description=Listed KS200 SEP16 270 European Call REF 249.50 (JUN16), size=200, hedge=32, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$1,097, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,871 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12832, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$550, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12839, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$546, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12842, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$540, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,873 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,873 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,873 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@e07b4db
2016-11-09 10:55:36,920 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,921 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,921 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,921 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed453c, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160012, invoice_date=09 May, 2016, account_number=CEL0003, due_date=09 June, 2016, amount_due=US$8,170, description=October 2016 Brokerage Fee, amount=US$8,170, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@e07b4db, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,921 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,921 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,922 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,922 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=150, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,232, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,922 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,922 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,922 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,923 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=600, hedge=30, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$7,560, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,923 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,923 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,923 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13035, description=Listed HSCEI JUN17 9600 European Straddle REF 9,725 (AUG16), size=200, hedge=8, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,496, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,924 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Seller - Nomura International Plc - Mathieu Bonhomme, fee=HK$2,400, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,924 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=200, hedge=3, reference=Seller - Nomura International Plc - Mathieu Bonhomme, fee=HK$2,436, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,925 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@60ed0b9d
2016-11-09 10:55:36,957 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,958 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,958 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed4543, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160096, invoice_date=09 September, 2016, account_number=CEL0001, due_date=09 October, 2016, amount_due=HK$17,124, description=October 2016 Brokerage Fee, amount=HK$17,124, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@60ed0b9d, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,958 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,958 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12893, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=1000, hedge=100, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$2,045, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12895, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=600, hedge=60, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$1,227, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12901, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=400, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$863, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Jun-16, tradeId=CELERAEQ-2016-12902, description=Listed KS200 JUL16/SEP16 247.50 -1/1 European Straddle Time Spread REF 252 (SEP16), size=400, hedge=50, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$873, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Jun-16, tradeId=CELERAEQ-2016-12937, description=Listed KS200 DEC16 220 European Put REF 240 (SEP16), size=100, hedge=22, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$410, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,960 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1282f784
2016-11-09 10:55:36,998 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:36,998 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:36,998 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,999 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229028327c183c9fed454a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160050, invoice_date=09 July, 2016, account_number=CEL0006, due_date=09 August, 2016, amount_due=US$5,418, description=October 2016 Brokerage Fee, amount=US$5,418, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1282f784, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:36,999 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=2250, hedge=30, reference=Seller - Thierry, fee=HK$34,200, lastModified=Wed Nov 09 10:55:36 HKT 2016]
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:36,999 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,000 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4bbf20d1
2016-11-09 10:55:37,038 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,038 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,038 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,038 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed454d, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160169, invoice_date=09 November, 2016, account_number=CEL0030, due_date=09 December, 2016, amount_due=HK$34,200, description=October 2016 Brokerage Fee, amount=HK$34,200, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4bbf20d1, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,039 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13087, description=Listed HSCEI DEC16 Future Spread, size=20, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,039 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,040 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13096, description=Listed HSCEI DEC17 7400 European Put REF 10,150 (DEC16), size=100, hedge=14, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$1,710, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,040 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13098, description=Listed HSCEI DEC17 6600 European Put REF 10,075 (SEP16), size=100, hedge=7, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$1,605, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,040 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=100, hedge=14, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$1,710, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,040 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,041 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13102, description=Listed HSCEI SEP16/DEC16 Future Spread REF 9,713 (SEP16), size=28, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$420, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,041 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13105, description=Listed HSCEI SEP16Future, size=7, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$105, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,041 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,042 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13127, description=Listed HSCEI DEC16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$150, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,042 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,043 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,043 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@ba562e0
2016-11-09 10:55:37,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,078 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4556, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160140, invoice_date=09 October, 2016, account_number=CEL0013, due_date=09 November, 2016, amount_due=HK$6,300, description=October 2016 Brokerage Fee, amount=HK$6,300, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@ba562e0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12955, description=Listed KS200 DEC17 260/290 1/-2 European Call Ratio REF 245 (SEP16), size=300, hedge=10, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$426, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@65af05b2
2016-11-09 10:55:37,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,106 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4559, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160080, invoice_date=09 August, 2016, account_number=CEL0015, due_date=09 September, 2016, amount_due=US$426, description=October 2016 Brokerage Fee, amount=US$426, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@65af05b2, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,106 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12958, description=Listed KS200 SEP16/DEC16 220 European Put Time Spread REF 247 (SEP16), size=200, hedge=14, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$808, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,107 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,107 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,107 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@f48a080
2016-11-09 10:55:37,137 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,137 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,137 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,138 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed455c, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160076, invoice_date=09 August, 2016, account_number=CEL0007, due_date=09 September, 2016, amount_due=US$808, description=October 2016 Brokerage Fee, amount=US$808, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@f48a080, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,138 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,138 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,138 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,139 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,139 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,139 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,139 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,139 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13057, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,139 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,140 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,140 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,140 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=800, hedge=0, reference=Seller - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$12,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,140 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,140 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,140 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,140 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@517a46f3
2016-11-09 10:55:37,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,156 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4561, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=, invoice_date=09 September, 2016, account_number=CEL0024, due_date=09 October, 2016, amount_due=HK$18,000, description=October 2016 Brokerage Fee, amount=HK$18,000, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@517a46f3, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,156 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,156 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,156 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,156 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12997, description=Listed HSCEI MAR17 7600 European Put REF 9,075 (AUG16), size=200, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,784, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,156 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,157 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=500, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,384, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,157 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=450, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$5,640, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=200, hedge=36, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,832, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,158 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13006, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,250 (AUG16), size=108, hedge=7, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,380, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,158 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,159 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=100, hedge=19, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,428, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,159 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=200, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,496, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,159 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,160 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=504, hedge=63, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,804, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,160 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=300, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,660, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,160 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,460, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,161 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=100, hedge=9, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,308, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,161 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=200, hedge=38, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,856, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,161 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,161 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$6,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,162 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,162 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,162 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,162 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6cc8c13c
2016-11-09 10:55:37,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,212 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,212 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,213 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4570, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160090, invoice_date=09 September, 2016, account_number=CEL0006, due_date=09 October, 2016, amount_due=HK$46,032, description=October 2016 Brokerage Fee, amount=HK$46,032, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6cc8c13c, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13074, description=Listed HSCEI DEC16 8000/9000 -2/1 European Put Ratio REF 9,575 (SEP16), size=300, hedge=8, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,696, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13078, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=400, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$4,896, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,200, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=100, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,272, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,215 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13083, description=Listed HSCEI DEC18 10000/12000 1/-2 European Call Ratio REF 9,850 (SEP16), size=150, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,860, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,216 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13103, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,750 (SEP16), size=200, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,460, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,216 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=253, hedge=43, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,552, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,216 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=200, hedge=52, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$3,024, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=100, hedge=25, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,500, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,217 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=600, hedge=12, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,344, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,218 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13125, description=Listed HSCEI DEC18 10800/12600 -1/2 European Call Ratio REF 10,000 (SEP16), size=450, hedge=18, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$5,616, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@17003497
2016-11-09 10:55:37,272 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,272 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,272 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,273 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed457d, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160117, invoice_date=09 October, 2016, account_number=CEL0006, due_date=09 November, 2016, amount_due=HK$36,420, description=October 2016 Brokerage Fee, amount=HK$36,420, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@17003497, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,273 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,273 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,273 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,273 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=306, hedge=26, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Mohamed Lemsitef, fee=HK$4,980, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,273 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,274 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,274 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,274 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@11c3d22f
2016-11-09 10:55:37,304 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,305 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,305 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,305 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4580, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160149, invoice_date=09 November, 2016, account_number=CEL0009, due_date=09 December, 2016, amount_due=HK$4,980, description=October 2016 Brokerage Fee, amount=HK$4,980, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@11c3d22f, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,305 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,306 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,306 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,306 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13017, description=Listed KS200 JUN18 210 European Put REF 257.50 (SEP16), size=200, hedge=36, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$761, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,306 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,306 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,306 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,306 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13019, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=465, hedge=85, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$590, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,307 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13040, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=13, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$375, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,307 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,307 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13041, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=13, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=US$375, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,308 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Aug-16, tradeId=CELERAEQ-2016-13043, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258 (SEP16), size=900, hedge=36, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$1,128, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,308 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13044, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=400, hedge=86, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$747, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,308 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,309 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,309 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13045, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=500, hedge=107, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$934, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,309 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,309 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,309 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,309 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@40a28bda
2016-11-09 10:55:37,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4589, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0014, due_date=09 October, 2016, amount_due=US$4,910, description=October 2016 Brokerage Fee, amount=US$4,910, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@40a28bda, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=125, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,862, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=50, hedge=12, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$868, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=50, hedge=2, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$728, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=67, hedge=12, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,106, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=50, hedge=2, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$728, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=58, hedge=11, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$966, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=50, hedge=11, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$854, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=120, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,722, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,334 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,335 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,904, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,335 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13037, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,335 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,336 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=74, hedge=29, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,442, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,336 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,336 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,337 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,337 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=250, hedge=11, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,654, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,337 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,338 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3c64339f
2016-11-09 10:55:37,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed459a, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160091, invoice_date=09 September, 2016, account_number=CEL0005, due_date=09 October, 2016, amount_due=HK$19,026, description=October 2016 Brokerage Fee, amount=HK$19,026, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3c64339f, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Jun-16, tradeId=CELERAEQ-2016-12902, description=Listed KS200 JUL16/SEP16 247.50 -1/1 European Straddle Time Spread REF 252 (SEP16), size=400, hedge=50, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$1,091, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@54234569
2016-11-09 10:55:37,416 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,416 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,416 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,416 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed459d, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160062, invoice_date=09 July, 2016, account_number=CEL0009, due_date=09 August, 2016, amount_due=US$1,091, description=October 2016 Brokerage Fee, amount=US$1,091, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@54234569, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,416 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,416 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,417 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,417 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=500, hedge=85, reference=Seller - Hyundai Securities - Sangyeop Shin, fee=HK$14,625, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,417 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,417 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,417 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,417 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1686ed85
2016-11-09 10:55:37,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,448 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,448 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,448 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45a0, company=Hyundai Securities, address=, attn=82261141866, sentTo=syshin09@stockmarket.co.kr, invoice_number=CEL-160144, invoice_date=09 October, 2016, account_number=CEL0020, due_date=09 November, 2016, amount_due=HK$14,625, description=October 2016 Brokerage Fee, amount=HK$14,625, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1686ed85, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,449 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=125, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,449 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=46, hedge=5, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,449 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,450 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12975, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=33, hedge=6, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,450 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=60, hedge=3, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,450 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,451 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=200, hedge=38, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,451 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=100, hedge=8, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,451 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,452 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=54, hedge=3, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,452 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,452 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,452 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,452 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@71468613
2016-11-09 10:55:37,465 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,466 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,466 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45a9, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0012, due_date=09 September, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@71468613, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,466 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,466 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,466 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12865, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=110, hedge=6, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,740, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12872, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12882, description=Listed HSCEI SEP16 8200 European Straddle REF 8,275 (MAY16), size=50, hedge=8, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@149b53fa
2016-11-09 10:55:37,508 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,509 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,509 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,509 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45b0, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160033, invoice_date=09 June, 2016, account_number=CEL0012, due_date=09 July, 2016, amount_due=HK$1,740, description=October 2016 Brokerage Fee, amount=HK$1,740, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@149b53fa, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,509 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,509 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,509 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,509 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Jun-16, tradeId=CELERAEQ-2016-12892, description=Listed KS200 DEC17 190/220 -2/1 European Put Ratio REF 242.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,510 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12894, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=400, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,022, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,510 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12897, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=400, hedge=35, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$529, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,511 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12898, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=800, hedge=70, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,061, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,511 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12899, description=Listed KS200 DEC16 200 European Put REF 247 (JUN16), size=200, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$531, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,511 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12900, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=800, hedge=4, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,079, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,511 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,512 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12900, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=800, hedge=4, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,079, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,512 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12901, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=400, hedge=2, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$539, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,512 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,513 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5256fbc
2016-11-09 10:55:37,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45ba, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0003, due_date=09 August, 2016, amount_due=US$5,840, description=October 2016 Brokerage Fee, amount=US$5,840, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5256fbc, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,527 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13186, description=Listed KS200 DEC17 200 European Put REF 256 (DEC16), size=250, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$1,131, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,527 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,527 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,527 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,527 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@54d60fa1
2016-11-09 10:55:37,555 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,556 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,556 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45bd, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160153, invoice_date=09 November, 2016, account_number=CEL0006, due_date=09 December, 2016, amount_due=US$1,131, description=October 2016 Brokerage Fee, amount=US$1,131, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@54d60fa1, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,556 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,556 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,557 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13095, description=Listed HSCEI DEC17 10000 European Straddle REF 10,075 (SEP16), size=200, hedge=8, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$5,038, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,557 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13134, description=Listed HSI DEC17 24000 European Straddle REF 23,750 (SEP16), size=200, hedge=3, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,875, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,557 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,558 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2a65e237
2016-11-09 10:55:37,591 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,591 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,592 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,592 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45c1, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160133, invoice_date=09 October, 2016, account_number=CEL0007, due_date=09 November, 2016, amount_due=HK$16,913, description=October 2016 Brokerage Fee, amount=HK$16,913, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2a65e237, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,592 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,592 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,592 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,593 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12859, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=750, hedge=42, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=HK$11,754, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,593 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,593 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,593 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,593 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=150, hedge=66, reference=Seller - Morgan Stanley & Co. International PLC - Louis Fortin, fee=HK$3,042, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,594 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@236b4a44
2016-11-09 10:55:37,629 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,630 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,630 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,630 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45c5, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160043, invoice_date=09 June, 2016, account_number=CEL0015, due_date=09 July, 2016, amount_due=HK$14,796, description=October 2016 Brokerage Fee, amount=HK$14,796, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@236b4a44, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,631 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=100, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,650, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,631 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jun-16, tradeId=CELERAEQ-2016-12908, description=Listed HSCEI DEC17 7000/8400 2/-1 European Put Ratio REF 8,400 (JUN16), size=180, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,745, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,515, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12917, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,204, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,632 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,633 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12918, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,350 (JUN16), size=400, hedge=12, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,180, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,633 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12919, description=Listed HSCEI AUG16/JUN17 7000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,180, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,633 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=400, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,150, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,633 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=106, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,740, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=400, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,075, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=140, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,205, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,634 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=200, hedge=25, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,375, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12936, description=Listed HSI JUL16 21000 European Call REF 20,200 (JUN16), size=200, hedge=48, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,720, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=49, hedge=24, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,095, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12939, description=Listed HSCEI DEC16 9200 European Call REF 8,500 (JUL16), size=52, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$272, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=300, hedge=48, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,220, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=50, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$855, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,637 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,637 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@283bb8b7
2016-11-09 10:55:37,684 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,685 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,685 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,685 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45d7, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160054, invoice_date=09 July, 2016, account_number=CEL0003, due_date=09 August, 2016, amount_due=HK$50,181, description=October 2016 Brokerage Fee, amount=HK$50,181, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@283bb8b7, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,685 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,685 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,686 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12821, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=800, hedge=104, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$1,770, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,686 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12824, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$442, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,686 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,687 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12825, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$441, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,687 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12829, description=Listed KS200 SEP16 270 European Call REF 249.50 (JUN16), size=200, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,687 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12832, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,687 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,688 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12833, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,688 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12839, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$437, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,688 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,689 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12842, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248.50 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$432, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,689 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Apr-16, tradeId=CELERAEQ-2016-12849, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$434, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,689 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,689 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@145fe8ab
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,746 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45e2, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160017, invoice_date=09 May, 2016, account_number=CEL0006, due_date=09 June, 2016, amount_due=US$3,956, description=October 2016 Brokerage Fee, amount=US$3,956, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@145fe8ab, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,746 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12869, description=Listed HSCEI DEC17 6400/8400 -2/1 European Put Ratio REF 8,400 (MAY16), size=171, hedge=4, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$1,750, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=800, hedge=224, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$11,120, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,747 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3df04fa1
2016-11-09 10:55:37,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45e6, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160039, invoice_date=09 June, 2016, account_number=CEL0007, due_date=09 July, 2016, amount_due=HK$12,870, description=October 2016 Brokerage Fee, amount=HK$12,870, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3df04fa1, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,783 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,783 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,783 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=500, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$6,432, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,784 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=200, hedge=12, reference=Buyer - Nomura International Plc - Sudhanshu Kajbaje, fee=HK$2,544, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,784 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,785 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=167, hedge=15, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,184, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,785 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,785 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,785 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,785 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@41f40dfa
2016-11-09 10:55:37,821 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,822 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,822 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,822 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45eb, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160075, invoice_date=09 August, 2016, account_number=CEL0001, due_date=09 September, 2016, amount_due=HK$11,160, description=October 2016 Brokerage Fee, amount=HK$11,160, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@41f40dfa, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,822 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,822 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,822 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,822 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12846, description=Listed HSCEI APR16/MAY16 8800/9000 -1/1 European Call Diagonal REF 9,000 (APR16), size=40, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C* - Matthieu Barry, fee=HK$376, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,823 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4ff9f715
2016-11-09 10:55:37,823 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: BNP Paribas Arbitrage S.N.C*
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,823 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13046, description=HSCEI DEC18 Forward (OTC-Like) REF 9,530 (AUG16), size=200, hedge=200, reference=Buyer - Shinhan Investment Corp. - JaeSeong Yun, fee=HK$9,530, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,823 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,824 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@118a4d5
2016-11-09 10:55:37,853 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,853 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,853 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,854 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed45f0, company=Shinhan Investment Corp., address=, attn=82837722249, sentTo=global_fo@shinhan.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0028, due_date=09 October, 2016, amount_due=HK$9,530, description=October 2016 Brokerage Fee, amount=HK$9,530, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@118a4d5, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,854 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,854 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,854 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,855 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12997, description=Listed HSCEI MAR17 7600 European Put REF 9,075 (AUG16), size=200, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,855 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,855 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,855 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,856 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,856 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,856 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,856 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=300, hedge=54, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,900, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,857 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,857 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,857 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13003, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=112, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$896, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,857 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,857 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,857 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,858 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=300, hedge=54, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,400, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,858 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Aug-16, tradeId=CELERAEQ-2016-13005, description=Listed HSCEI DEC16 8600/8800 European Put Spread REF 9,100 (AUG16), size=200, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=200, hedge=74, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,859 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=1200, hedge=288, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$15,600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=100, hedge=19, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,861 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=400, hedge=16, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,861 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,861 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,862 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=300, hedge=15, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$2,400, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,862 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,862 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,862 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,862 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=400, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,863 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,863 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,863 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,863 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13026, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,863 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,863 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,864 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,864 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=506, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,048, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,864 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,864 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,864 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,865 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=100, hedge=19, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,865 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,865 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,865 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,866 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,866 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,866 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,866 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,867 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=600, hedge=30, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$7,800, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,867 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,867 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,867 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,868 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=300, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$3,900, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,868 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13047, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,775 (AUG16), size=104, hedge=11, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$2,288, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,868 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,869 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Karim Frahi, fee=HK$4,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,869 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$4,000, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,869 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,870 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=400, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,870 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,870 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,870 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,870 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=650, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,870 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,871 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,871 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,871 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=600, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$4,800, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,871 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,871 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,871 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13065, description=Listed HSI JUN17 22000 European Put REF 22,750 (SEP16), size=100, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13067, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,873 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,873 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,873 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=1500, hedge=66, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,500, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,873 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,873 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,873 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,874 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=1250, hedge=55, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$8,750, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,874 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,874 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,874 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,874 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13069, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,875 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13071, description=Listed HSCEI DEC17 7400/10800 -1/1 European Risk Reversal REF 9,550 (SEP16), size=600, hedge=150, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$4,800, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,875 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,876 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=200, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,876 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,876 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,877 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,877 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@13d1f898
2016-11-09 10:55:37,934 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,934 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,935 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,935 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4611, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160100, invoice_date=09 September, 2016, account_number=CEL0014, due_date=09 October, 2016, amount_due=HK$112,482, description=October 2016 Brokerage Fee, amount=HK$112,482, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@13d1f898, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,935 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,935 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,935 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,936 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12961, description=Listed KS200 MAR17 210/280 1/-1 European Risk Reversal REF 250 (SEP16), size=500, hedge=60, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$818, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,936 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,936 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,936 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,936 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3df3410a
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,977 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed4614, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160081, invoice_date=09 August, 2016, account_number=CEL0018, due_date=09 September, 2016, amount_due=US$818, description=October 2016 Brokerage Fee, amount=US$818, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3df3410a, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,977 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=132, hedge=4, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,020, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12965, description=Listed HSCEI JUL16/AUG16 8600/8800 1/-1 European Call Diagonal REF 8,925 (JUL16), size=100, hedge=11, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,310, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=54, hedge=6, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,140, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=23, hedge=5, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$510, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=100, hedge=19, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,990, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@13714753
2016-11-09 10:55:37,991 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:37,992 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:37,992 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,992 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=58229029327c183c9fed461b, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0004, due_date=09 September, 2016, amount_due=HK$8,970, description=October 2016 Brokerage Fee, amount=HK$8,970, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@13714753, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,992 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,992 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,992 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,993 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=200, hedge=48, reference=Seller - Mirae Asset Securities Co. Ltd - Sanghyun Lee, fee=HK$3,720, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,993 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=300, hedge=108, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$6,120, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,993 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=300, hedge=117, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$6,255, lastModified=Wed Nov 09 10:55:37 HKT 2016]
2016-11-09 10:55:37,993 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:37,994 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:37,994 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:37,994 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@673a9db4
2016-11-09 10:55:38,029 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,029 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,029 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,030 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4620, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160110, invoice_date=09 September, 2016, account_number=CEL0019, due_date=09 October, 2016, amount_due=HK$16,095, description=October 2016 Brokerage Fee, amount=HK$16,095, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@673a9db4, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,030 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,030 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,030 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,031 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=01-Sep-16, tradeId=CELERAEQ-2016-13073, description=Listed HSCEI DEC17 11600/14400 1/-2 European Call Ratio REF 9,525 (SEP16), size=300, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$4,340, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,031 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,031 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,031 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,032 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=200, hedge=24, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,136, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,032 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,034 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,035 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,036 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13096, description=Listed HSCEI DEC17 7400 European Put REF 10,150 (DEC16), size=100, hedge=14, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,596, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,036 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,036 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,036 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,036 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=49, hedge=18, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$938, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,036 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,037 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,037 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,037 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=25, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$434, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,037 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,038 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,038 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,038 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13126, description=Listed HSCEI DEC17 8000/12000 1/-1 European Risk Reversal REF 10,000 (SEP16), size=200, hedge=46, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,444, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,038 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,038 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,038 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,039 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=300, hedge=45, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$4,830, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,039 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,039 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,040 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=201, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,463, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,040 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,040 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,040 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,041 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@495e8a3
2016-11-09 10:55:38,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,082 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,083 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed462a, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160125, invoice_date=09 October, 2016, account_number=CEL0005, due_date=09 November, 2016, amount_due=HK$20,181, description=October 2016 Brokerage Fee, amount=HK$20,181, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@495e8a3, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,083 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,084 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Mar-16, tradeId=CELERAEQ-2016-12796, description=Listed HSCEI DEC16 9000/10800 European Call Spread REF 8,900 (APR16), size=50, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$696, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,084 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,084 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,084 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@68360fb9
2016-11-09 10:55:38,120 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,120 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,120 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,120 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed462d, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160009, invoice_date=09 April, 2016, account_number=CEL0006, due_date=09 May, 2016, amount_due=HK$696, description=October 2016 Brokerage Fee, amount=HK$696, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@68360fb9, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,121 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=800, hedge=20, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$8,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,121 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12860, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=250, hedge=14, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,640, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,121 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,122 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=310, hedge=17, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$3,270, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,122 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12870, description=Listed HSCEI DEC16 10400/11200 1/-1.5 European Call Ratio REF 8,400 (MAY16), size=125, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,260, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,122 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,122 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12871, description=Listed HSCEI DEC16 10400/11200 1/-1.5 European Call Ratio REF 8,400 (MAY16), size=125, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,260, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,123 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=9, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,090, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,123 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,124 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,124 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,124 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,124 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12878, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,125 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,125 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,125 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=100, hedge=2, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,125 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,125 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,125 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,126 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@70bc3a9c
2016-11-09 10:55:38,146 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,146 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,146 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,147 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4638, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0008, due_date=09 July, 2016, amount_due=HK$21,720, description=October 2016 Brokerage Fee, amount=HK$21,720, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@70bc3a9c, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,147 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,147 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,148 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12807, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=200, hedge=78, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$4,170, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,148 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,148 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,148 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,148 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=25, hedge=5, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$450, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,148 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,148 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,149 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,149 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Apr-16, tradeId=CELERAEQ-2016-12817, description=Listed HSCEI JUN16 8600/10000 1/1 European Strangle REF 9,100 (APR16), size=52, hedge=10, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$870, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,149 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,149 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,149 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,149 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12831, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,150 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,150 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=300, hedge=2, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5e46a125
2016-11-09 10:55:38,190 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,190 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,191 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,191 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4640, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160016, invoice_date=09 May, 2016, account_number=CEL0012, due_date=09 June, 2016, amount_due=HK$5,490, description=October 2016 Brokerage Fee, amount=HK$5,490, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@5e46a125, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,191 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,191 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,191 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,191 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=492, hedge=27, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,936, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,191 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,192 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,192 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,192 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=108, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$864, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,192 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,192 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,192 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,192 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,193 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13080, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=500, hedge=26, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,500, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,193 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,202 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13084, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$945, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,202 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,202 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,202 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13085, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$945, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=1000, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13109, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,550 (SEP16), size=200, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=125, hedge=25, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=600, hedge=102, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,800, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,205 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13112, description=Listed HSI SEP16 22600/23200 -2/1 European Put Ratio REF 23,200 (SEP16), size=450, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,850, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,205 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=300, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,400, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13126, description=Listed HSCEI DEC17 8000/12000 1/-1 European Risk Reversal REF 10,000 (SEP16), size=200, hedge=46, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=100, hedge=19, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$550, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=900, hedge=252, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$7,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13135, description=Listed HSCEI DEC18 9600 European Straddle REF 9,750 (SEP16), size=200, hedge=11, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=400, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=536, hedge=24, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,288, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=250, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,250, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13147, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=100, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,215 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6c49ea0c
2016-11-09 10:55:38,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4656, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0014, due_date=09 November, 2016, amount_due=HK$58,428, description=October 2016 Brokerage Fee, amount=HK$58,428, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6c49ea0c, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13046, description=HSCEI DEC18 Forward (OTC-Like) REF 9,530 (AUG16), size=200, hedge=200, reference=Seller - Citigroup Global Markets Hong Kong Limited - Godfrey Sham, fee=HK$4,766, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,238 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,238 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,238 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@33373f70
2016-11-09 10:55:38,274 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,274 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,274 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,275 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4659, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160106, invoice_date=09 September, 2016, account_number=CEL0009, due_date=09 October, 2016, amount_due=HK$4,766, description=October 2016 Brokerage Fee, amount=HK$4,766, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@33373f70, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,275 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,275 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,275 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,276 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12795, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Seller - Korea Investment & Securities Co Ltd - Traders, fee=US$1,058, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,276 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,276 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,276 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,276 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@40aad17d
2016-11-09 10:55:38,310 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,310 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,310 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,311 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed465c, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160005, invoice_date=09 April, 2016, account_number=CEL0011, due_date=09 May, 2016, amount_due=US$1,058, description=October 2016 Brokerage Fee, amount=US$1,058, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@40aad17d, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,311 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=1000, hedge=95, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,311 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,312 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=106, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$848, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,312 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13153, description=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=27, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,312 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,312 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=450, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,100, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,313 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13156, description=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), size=58, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$464, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,313 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=150, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$700, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,313 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,314 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=300, hedge=48, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,400, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,314 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=100, hedge=3, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,314 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,315 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=625, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,375, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,315 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,315 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,316 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13166, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=200, hedge=9, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,316 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=1880, hedge=47, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,340, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,316 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,317 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,317 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13184, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,317 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13188, description=Listed HSI NOV16 23200 European Straddle REF 23,300 (OCT16), size=200, hedge=8, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,318 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,318 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@e67d3b7
2016-11-09 10:55:38,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed466d, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160147, invoice_date=09 November, 2016, account_number=CEL0014, due_date=09 December, 2016, amount_due=HK$42,627, description=October 2016 Brokerage Fee, amount=HK$42,627, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@e67d3b7, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=150, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,071, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$952, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12963, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=54, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$812, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=54, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$840, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=125, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,750, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12974, description=Listed HSCEI DEC17 7200/10800 1/-1 European Risk Reversal REF 9,025 (JUL16), size=50, hedge=12, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$868, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=23, hedge=5, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$392, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,371 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,371 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=28, hedge=7, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$490, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,346, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=57, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$854, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=100, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,484, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,373 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=600, hedge=114, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$9,996, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,373 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12988, description=Listed HSI DEC16 22400/25200 1/-2 European Call Ratio REF 22,200 (JUL16), size=81, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,218, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,374 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=100, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,512, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,374 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=135, hedge=9, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,016, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,374 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=54, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$798, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,374 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,375 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=33, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$504, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,375 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,375 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=200, hedge=53, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,542, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,376 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=100, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,456, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,376 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,376 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,377 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1cee3e05
2016-11-09 10:55:38,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,428 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,428 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,428 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4683, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160070, invoice_date=09 August, 2016, account_number=CEL0005, due_date=09 September, 2016, amount_due=HK$34,783, description=October 2016 Brokerage Fee, amount=HK$34,783, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1cee3e05, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,428 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,429 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12890, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$813, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,429 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12891, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$813, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,429 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,429 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3ca3eba2
2016-11-09 10:55:38,458 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,458 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,458 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,458 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed4687, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160030, invoice_date=09 June, 2016, account_number=CEL0006, due_date=09 July, 2016, amount_due=US$1,626, description=October 2016 Brokerage Fee, amount=US$1,626, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3ca3eba2, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,459 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12945, description=Listed HSCEI DEC17 6600 European Put REF 8,700 (JUL16), size=230, hedge=37, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,002, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,459 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12951, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=450, hedge=72, reference=Seller - Société Générale (HK) Limited - David Bruchet, fee=HK$5,771, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,459 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,460 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12954, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=100, hedge=25, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,286, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,460 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12957, description=Listed HSCEI DEC17 9600/11200 1/-2 European Call Ratio REF 8,725 (JUL16), size=600, hedge=12, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,618, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,460 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12960, description=Listed HSCEI DEC16 8800 European Straddle REF 8,800 (JUL16), size=200, hedge=7, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$2,640, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,460 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,461 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12962, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=400, hedge=30, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,355, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,461 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12967, description=Listed HSCEI JUN18 11200 European Call REF 8,900 (JUL16), size=500, hedge=107, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,675, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,461 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,462 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12968, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,715, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,462 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12971, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,715, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,462 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=320, hedge=16, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,344, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,463 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,463 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12982, description=Listed HSCEI DEC16 10000/11200 1/-2 European Call Ratio REF 9,050 (JUL16), size=900, hedge=27, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,073, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,469 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12984, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,308, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=100, hedge=7, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,300, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=1100, hedge=209, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,425, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12989, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=200, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,653, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,472 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12990, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=100, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,326, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,472 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=1500, hedge=102, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$8,145, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=100, hedge=27, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$679, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,473 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,473 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7582a16b
2016-11-09 10:55:38,520 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,521 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,521 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,522 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed469b, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160082, invoice_date=09 August, 2016, account_number=CEL0018, due_date=09 September, 2016, amount_due=HK$74,030, description=October 2016 Brokerage Fee, amount=HK$74,030, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7582a16b, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,522 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,522 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,522 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,522 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=132, hedge=4, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,632, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,522 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,522 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,523 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,523 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12948, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,523 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12956, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=200, hedge=42, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,904, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,524 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12957, description=Listed HSCEI DEC17 9600/11200 1/-2 European Call Ratio REF 8,725 (JUL16), size=600, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$7,272, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,524 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12960, description=Listed HSCEI DEC16 8800 European Straddle REF 8,800 (JUL16), size=200, hedge=7, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,484, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,524 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12963, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=54, hedge=4, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$696, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,524 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,525 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12967, description=Listed HSCEI JUN18 11200 European Call REF 8,900 (JUL16), size=500, hedge=105, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,260, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,525 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=250, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,525 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=50, hedge=11, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$732, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,525 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12978, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=200, hedge=36, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,832, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,525 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12980, description=Listed HSI DEC16 18000/25200 1/-1 European Risk Reversal REF 21,800 (JUL16), size=50, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$672, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12982, description=Listed HSCEI DEC16 10000/11200 1/-2 European Call Ratio REF 9,050 (JUL16), size=900, hedge=27, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$11,124, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=108, hedge=6, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,368, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,527 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,527 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@25435731
2016-11-09 10:55:38,565 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,566 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,566 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46ab, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160069, invoice_date=09 August, 2016, account_number=CEL0006, due_date=09 September, 2016, amount_due=HK$43,608, description=October 2016 Brokerage Fee, amount=HK$43,608, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@25435731, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,566 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,566 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,566 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,567 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13196, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=200, hedge=14, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$4,280, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,567 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,567 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,567 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,567 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@29394966
2016-11-09 10:55:38,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46ae, company=HMC Investment, address=, attn=, sentTo=0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com, invoice_number=CEL-160152, invoice_date=09 November, 2016, account_number=CEL0023, due_date=09 December, 2016, amount_due=HK$4,280, description=October 2016 Brokerage Fee, amount=HK$4,280, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@29394966, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12805, description=Listed HSCEI DEC17 9600/11600 1/-2 European Call Ratio REF 8,600 (APR16), size=165, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,565, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=54, hedge=21, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$1,125, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=25, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$450, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12811, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$900, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,150, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12827, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,050 (APR16), size=300, hedge=16, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$4,740, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=900, hedge=0, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$13,500, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=900, hedge=0, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$13,500, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$7,680, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=134, hedge=9, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,145, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,840, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12840, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,340, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12841, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,340, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12844, description=Listed HSCEI SEP16 8800/9600 1/-1 European Risk Reversal REF 9,075 (APR16), size=104, hedge=41, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,175, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12846, description=Listed HSCEI APR16/MAY16 8800/9000 -1/1 European Call Diagonal REF 9,000 (APR16), size=40, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$705, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,600 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1abf951a
2016-11-09 10:55:38,613 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,613 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,613 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,614 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46bf, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0003, due_date=09 June, 2016, amount_due=HK$61,155, description=October 2016 Brokerage Fee, amount=HK$61,155, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1abf951a, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,614 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12903, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=3000, hedge=80, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$46,200, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,614 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12904, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=750, hedge=20, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$11,550, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,614 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,615 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=500, hedge=57, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$8,355, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,615 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=110, hedge=39, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$2,235, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,615 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,615 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2e7517aa
2016-11-09 10:55:38,664 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,664 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,664 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,664 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46c5, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160063, invoice_date=09 July, 2016, account_number=CEL0002, due_date=09 August, 2016, amount_due=HK$68,340, description=October 2016 Brokerage Fee, amount=HK$68,340, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2e7517aa, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,664 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,665 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,665 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,665 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Thierry, fee=HK$3,330, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,665 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,665 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,665 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,665 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3731e8b6
2016-11-09 10:55:38,721 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,722 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,722 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,722 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46c8, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160083, invoice_date=09 August, 2016, account_number=CEL0030, due_date=09 September, 2016, amount_due=HK$3,330, description=October 2016 Brokerage Fee, amount=HK$3,330, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3731e8b6, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,722 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,723 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,723 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,723 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13116, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=400, hedge=80, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$681, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,723 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,723 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,723 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,723 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13117, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$340, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,724 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,724 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,724 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,724 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@495bc9e7
2016-11-09 10:55:38,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,762 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,762 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,762 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46cc, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160137, invoice_date=09 October, 2016, account_number=CEL0018, due_date=09 November, 2016, amount_due=US$1,021, description=October 2016 Brokerage Fee, amount=US$1,021, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@495bc9e7, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,762 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,762 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,762 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12860, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=250, hedge=14, reference=Buyer - Thierry, fee=HK$3,960, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=2000, hedge=110, reference=Seller - Thierry, fee=HK$31,650, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@285c63cf
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,800 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46d0, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160047, invoice_date=09 June, 2016, account_number=CEL0030, due_date=09 July, 2016, amount_due=HK$35,610, description=October 2016 Brokerage Fee, amount=HK$35,610, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@285c63cf, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,800 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,801 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=400, hedge=38, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$5,256, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,801 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=300, hedge=4, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$3,648, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,801 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13167, description=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), size=300, hedge=33, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$3,996, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,801 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,802 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13184, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=20, hedge=1, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$0, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,802 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=200, hedge=12, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,544, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,802 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=200, hedge=12, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,544, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,802 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,803 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,803 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@403cff1c
2016-11-09 10:55:38,853 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,854 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46d8, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160159, invoice_date=09 November, 2016, account_number=CEL0001, due_date=09 December, 2016, amount_due=HK$17,988, description=October 2016 Brokerage Fee, amount=HK$17,988, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@403cff1c, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,854 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Aug-16, tradeId=CELERAEQ-2016-13005, description=Listed HSCEI DEC16 8600/8800 European Put Spread REF 9,100 (AUG16), size=200, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,060, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,854 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,855 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=158, hedge=30, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,880, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,855 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=100, hedge=22, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,220, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,855 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$680, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,855 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,855 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,856 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=50, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,856 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,856 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@7adbec34
2016-11-09 10:55:38,933 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,934 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,934 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,934 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46e0, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160095, invoice_date=09 September, 2016, account_number=CEL0008, due_date=09 October, 2016, amount_due=HK$7,095, description=October 2016 Brokerage Fee, amount=HK$7,095, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@7adbec34, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,934 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,934 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,934 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,934 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13176, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=200, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$1,134, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,935 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13178, description=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), size=400, hedge=20, reference=Buyer - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,288, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,935 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13185, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=200, hedge=78, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,261, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,935 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,936 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13186, description=Listed KS200 DEC17 200 European Put REF 256 (DEC16), size=250, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,827, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,936 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,936 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,936 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,936 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@56a72887
2016-11-09 10:55:38,976 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:38,977 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:38,977 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,977 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902a327c183c9fed46e6, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160168, invoice_date=09 November, 2016, account_number=CEL0025, due_date=09 December, 2016, amount_due=US$8,510, description=October 2016 Brokerage Fee, amount=US$8,510, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@56a72887, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,977 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,977 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,977 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13099, description=Listed KS200 DEC17/DEC18 290 European Call Time Spread REF 258 (DEC16), size=2, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,978 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@14624acc
2016-11-09 10:55:38,978 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,978 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Oct-16, tradeId=CELERAEQ-2016-13162, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=300, hedge=120, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,021, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13174, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=400, hedge=62, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$683, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,979 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13178, description=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), size=400, hedge=20, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$686, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:38,979 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13187, description=Listed KS200 JUN17 240/270 1/-1 European Risk Reversal REF 255 (DEC16), size=600, hedge=174, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,014, lastModified=Wed Nov 09 10:55:38 HKT 2016]
2016-11-09 10:55:38,980 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:38,980 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:38,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:38,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@1b6e4761
2016-11-09 10:55:39,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed46ee, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160163, invoice_date=09 November, 2016, account_number=CEL0018, due_date=09 December, 2016, amount_due=US$3,404, description=October 2016 Brokerage Fee, amount=US$3,404, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@1b6e4761, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,026 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13018, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=900, hedge=33, reference=Buyer - Société Générale (HK) Limited - Jacinto Ferreira, fee=US$1,053, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13018, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=900, hedge=33, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=US$1,053, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Aug-16, tradeId=CELERAEQ-2016-13038, description=Listed KS200 JUN17/JUN18 250 -1/1 European Straddle Time Spread REF 256.50 (SEP16), size=1000, hedge=25, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,738, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Aug-16, tradeId=CELERAEQ-2016-13043, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258 (SEP16), size=900, hedge=36, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,041, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,028 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@71d78cac
2016-11-09 10:55:39,042 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,042 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,042 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,043 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed46f4, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 September, 2016, account_number=CEL0018, due_date=09 October, 2016, amount_due=US$4,885, description=October 2016 Brokerage Fee, amount=US$4,885, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@71d78cac, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,043 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=400, hedge=40, reference=Buyer - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$6,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,043 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,043 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@b5311cb
2016-11-09 10:55:39,098 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,098 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,098 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,099 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed46f7, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160049, invoice_date=09 July, 2016, account_number=CEL0011, due_date=09 August, 2016, amount_due=HK$6,600, description=October 2016 Brokerage Fee, amount=HK$6,600, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@b5311cb, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,099 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13044, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=400, hedge=86, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,298, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,099 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,099 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13045, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=500, hedge=107, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,873, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,100 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13058, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256 (SEP16), size=1000, hedge=215, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$5,745, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,100 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,100 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4c3d72fd
2016-11-09 10:55:39,131 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,131 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,131 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,132 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed46fc, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160112, invoice_date=09 September, 2016, account_number=CEL0025, due_date=09 October, 2016, amount_due=US$10,916, description=October 2016 Brokerage Fee, amount=US$10,916, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4c3d72fd, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,132 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=200, hedge=32, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,320, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,132 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,133 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=300, hedge=31, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$3,110, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,133 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,133 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@18bc1064
2016-11-09 10:55:39,160 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,161 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4700, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160166, invoice_date=09 November, 2016, account_number=CEL0004, due_date=09 December, 2016, amount_due=HK$7,430, description=October 2016 Brokerage Fee, amount=HK$7,430, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@18bc1064, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,161 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13115, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=600, hedge=126, reference=Buyer - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$3,405, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,161 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,162 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,162 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,162 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13116, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=400, hedge=80, reference=Buyer - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,270, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,162 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,162 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,162 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,162 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@45017263
2016-11-09 10:55:39,188 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,189 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4704, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160123, invoice_date=09 October, 2016, account_number=CEL0025, due_date=09 November, 2016, amount_due=US$5,675, description=October 2016 Brokerage Fee, amount=US$5,675, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@45017263, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,189 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13107, description=Listed N225 DEC16 14500/18500 1/-1 European Risk Reversal REF 16,600 (DEC16), size=600, hedge=81, reference=Buyer - Barclays Bank PLC - Amine Ahallal, fee=JPY105,000, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,190 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,190 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,190 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@19de32cb
2016-11-09 10:55:39,202 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,202 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,202 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4707, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0021, due_date=09 November, 2016, amount_due=JPY105,000, description=October 2016 Brokerage Fee, amount=JPY105,000, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@19de32cb, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=19, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,190, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=250, hedge=12, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,620, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13168, description=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), size=200, hedge=41, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,410, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=120, hedge=3, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,230, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13189, description=Listed HSI NOV16 23200 European Straddle REF 23,200 (NOV16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@402676e3
2016-11-09 10:55:39,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed470e, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160151, invoice_date=09 November, 2016, account_number=CEL0008, due_date=09 December, 2016, amount_due=HK$8,705, description=October 2016 Brokerage Fee, amount=HK$8,705, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@402676e3, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Mar-16, tradeId=CELERAEQ-2016-12796, description=Listed HSCEI DEC16 9000/10800 European Call Spread REF 8,900 (APR16), size=50, hedge=8, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@6fdd3382
2016-11-09 10:55:39,302 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,303 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,303 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,303 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4711, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 April, 2016, account_number=CEL0012, due_date=09 May, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@6fdd3382, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,303 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,303 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,303 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,304 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12887, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$460, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,304 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,304 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,304 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,304 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@13dc383b
2016-11-09 10:55:39,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4714, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160040, invoice_date=09 June, 2016, account_number=CEL0014, due_date=09 July, 2016, amount_due=US$460, description=October 2016 Brokerage Fee, amount=US$460, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@13dc383b, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=16-Feb-16, tradeId=CELERAEQ-2016-12787, description=Listed SPX JUN16 2150 European Call REF 2,115 (MAR16), size=200, hedge=80, reference=Buyer - Celera Bank Private Test 3 - Alex Chau, fee=US$1, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@5e66733b
2016-11-09 10:55:39,333 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 3
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13091, description=Listed KS200 DEC16 260 European Straddle REF 262.50 (DEC16), size=800, hedge=48, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$7,205, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13129, description=Listed KS200 NOV16 235/250 -2/1 European Put Ratio REF 259 (DEC16), size=900, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$2,642, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@3694461d
2016-11-09 10:55:39,363 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,364 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,364 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,364 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed471a, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160130, invoice_date=09 October, 2016, account_number=CEL0001, due_date=09 November, 2016, amount_due=US$9,847, description=October 2016 Brokerage Fee, amount=US$9,847, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@3694461d, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,364 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,364 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,365 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,365 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=200, hedge=28, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,824, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,365 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,365 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,365 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,365 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=800, hedge=44, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,752, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,366 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12868, description=Listed HSCEI JUN16 8600 European Call REF 8,450 (MAY16), size=100, hedge=32, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,056, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,366 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12870, description=***THIS IS A PRE-CONFIRMATION ONLY***Listed HSCEI DEC16 10400/11200 1/-, size=125, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,008, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,366 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12871, description=***THIS IS A FINAL CONFIRMATION***, size=125, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,008, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=300, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,432, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=400, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12881, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,275 (MAY16), size=75, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$616, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12883, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,432, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4fc2933e
2016-11-09 10:55:39,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4725, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0014, due_date=09 July, 2016, amount_due=HK$20,328, description=October 2016 Brokerage Fee, amount=HK$20,328, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4fc2933e, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=300, hedge=2, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,478, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=3000, hedge=8, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$22,388, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=1200, hedge=124, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,730, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=250, hedge=12, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,440, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=1400, hedge=42, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$10,211, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13166, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=200, hedge=9, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,918, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=106, hedge=9, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,538, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13171, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=600, hedge=24, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$8,753, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13172, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=400, hedge=16, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,835, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=2000, hedge=50, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$14,700, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13181, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=300, hedge=123, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,421, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,466, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=400, hedge=24, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$13,800, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=300, hedge=18, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,320, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,388 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,388 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,389 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@54c37dab
2016-11-09 10:55:39,435 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,435 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,435 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,436 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4735, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160162, invoice_date=09 November, 2016, account_number=CEL0018, due_date=09 December, 2016, amount_due=HK$98,998, description=October 2016 Brokerage Fee, amount=HK$98,998, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@54c37dab, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,436 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=200, hedge=25, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,650, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,436 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,360, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,436 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,437 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=100, hedge=39, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,390, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,437 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,437 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,437 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@48697181
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,467 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed473a, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160094, invoice_date=09 September, 2016, account_number=CEL0004, due_date=09 October, 2016, amount_due=HK$7,400, description=October 2016 Brokerage Fee, amount=HK$7,400, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@48697181, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,467 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13075, description=Listed HSCEI DEC16 8000/9000 -2/1 European Put Ratio REF 9,575 (SEP16), size=150, hedge=4, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$770, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=100, hedge=20, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,468 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=50, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$500, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,468 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=66, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$670, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=100, hedge=25, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,250, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13140, description=Listed HSCEI SEP16 9600/9800 European Put Spread REF 9,625 (SEP16), size=200, hedge=34, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,170, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=200, hedge=9, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,045, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13150, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$500, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@658098a2
2016-11-09 10:55:39,506 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,507 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,507 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,507 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4745, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160129, invoice_date=09 October, 2016, account_number=CEL0008, due_date=09 November, 2016, amount_due=HK$7,360, description=October 2016 Brokerage Fee, amount=HK$7,360, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@658098a2, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,507 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,507 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,507 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,508 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12793, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=150, hedge=38, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$793, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,508 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,508 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,508 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,508 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4840ec68
2016-11-09 10:55:39,538 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,538 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,538 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,539 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4748, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160006, invoice_date=09 April, 2016, account_number=CEL0003, due_date=09 May, 2016, amount_due=US$793, description=October 2016 Brokerage Fee, amount=US$793, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4840ec68, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,539 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=125, hedge=3, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$1,024, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,539 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,540 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=125, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,016, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,540 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=700, hedge=21, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,373, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,540 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=100, hedge=3, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,339, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,540 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,541 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12950, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=134, hedge=4, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,794, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,541 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12951, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=450, hedge=72, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,850, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,541 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=400, hedge=100, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,541 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,542 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12953, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,542 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12959, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,775 (JUL16), size=625, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$3,250, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,542 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,543 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12962, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=400, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,543 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=625, hedge=45, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,000, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,543 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12965, description=Listed HSCEI JUL16/AUG16 8600/8800 1/-1 European Call Diagonal REF 8,925 (JUL16), size=100, hedge=11, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Matthieu Barry, fee=HK$400, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,543 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,543 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12968, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=400, hedge=44, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,544 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12969, description=Listed HSCEI DEC17 10000 European Call REF 9,050 (JUL16), size=200, hedge=78, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,544 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,544 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,545 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12973, description=Listed HSCEI SEP16 8200 European Put REF 9,075 (JUL16), size=100, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,545 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12975, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=33, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$264, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,545 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,545 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12979, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=167, hedge=30, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,336, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,546 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=56, hedge=14, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$728, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,546 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,546 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=50, hedge=3, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$650, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12989, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=200, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=1365, hedge=93, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,555, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,547 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@4d9cf71d
2016-11-09 10:55:39,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4761, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160079, invoice_date=09 August, 2016, account_number=CEL0014, due_date=09 September, 2016, amount_due=HK$62,979, description=October 2016 Brokerage Fee, amount=HK$62,979, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@4d9cf71d, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$8,280, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13138, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$8,280, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=100, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$1,200, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13150, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$600, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,601 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,601 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@46051269
2016-11-09 10:55:39,622 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,622 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,622 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,623 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed4767, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0001, due_date=09 November, 2016, amount_due=HK$18,360, description=October 2016 Brokerage Fee, amount=HK$18,360, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@46051269, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,623 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,623 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,623 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,624 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=1200, hedge=36, reference=Buyer - Yuanta Securities Korea Co., Ltd - Seungwoo Hwangbo, fee=HK$24,720, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,624 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,624 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,624 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,624 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13197, description=Listed HSCEI DEC16 8800/9600 -1.5/1 European Put Ratio REF 9,575 (NOV16), size=250, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=HK$5,400, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,624 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,624 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,625 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,625 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@152d2a58
2016-11-09 10:55:39,657 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,657 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,658 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,658 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed476b, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160167, invoice_date=09 November, 2016, account_number=CEL0025, due_date=09 December, 2016, amount_due=HK$30,120, description=October 2016 Brokerage Fee, amount=HK$30,120, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@152d2a58, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,658 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 10:55:39,658 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 10:55:39,658 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,658 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12958, description=Listed KS200 SEP16/DEC16 220 European Put Time Spread REF 247 (SEP16), size=200, hedge=14, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$242, lastModified=Wed Nov 09 10:55:39 HKT 2016]
2016-11-09 10:55:39,658 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 10:55:39,659 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 10:55:39,659 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,659 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save com.celera.mongo.entity.TradeDetails@2ad6aeb8
2016-11-09 10:55:39,699 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 10:55:39,700 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, TradeDetails] in collection: invoice
2016-11-09 10:55:39,700 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 10:55:39,700 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:200) - save Invoice [id=5822902b327c183c9fed476e, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160078, invoice_date=09 August, 2016, account_number=CEL0014, due_date=09 September, 2016, amount_due=US$242, description=October 2016 Brokerage Fee, amount=US$242, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, TradeDetails=com.celera.mongo.entity.TradeDetails@2ad6aeb8, lastModified=Wed Nov 09 10:55:39 HKT 2016]
