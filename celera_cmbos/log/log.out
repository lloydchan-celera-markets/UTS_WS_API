2016-11-30 18:18:49,173 [main] DEBUG com.celera.backoffice.DatabaseAdapter.<clinit>(DatabaseAdapter.java:102) - 01-Nov-16,31-Dec-99
2016-11-30 18:18:49,295 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,301 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,302 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,307 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2016-11-30 18:18:49,324 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-30 18:18:49,386 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2016-11-30 18:18:49,390 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/datatypes.dtd=schemas/datatypes.dtd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://cxf.apache.org/schemas/configuration/http-jetty.xsd=schemas/configuration/http-jetty.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.w3.org/2001/XMLSchema.dtd=schemas/XMLSchema.dtd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2016-11-30 18:18:49,392 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2016-11-30 18:18:49,428 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2016-11-30 18:18:49,435 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2016-11-30 18:18:49,440 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2016-11-30 18:18:49,441 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2016-11-30 18:18:49,453 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2016-11-30 18:18:49,463 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://cxf.apache.org/transports/http-jetty/configuration=org.apache.cxf.transport.http_jetty.spring.NamespaceHandler, http://www.w3.org/2006/07/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxws=org.apache.cxf.jaxws.spring.NamespaceHandler, http://cxf.apache.org/policy=org.apache.cxf.ws.policy.spring.NamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/ws/addressing=org.apache.cxf.ws.addressing.spring.NamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://schemas.xmlsoap.org/ws/2004/09/policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.w3.org/ns/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler}
2016-11-30 18:18:49,487 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,489 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,489 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,494 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2016-11-30 18:18:49,508 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2016-11-30 18:18:49,515 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2016-11-30 18:18:49,528 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2016-11-30 18:18:49,530 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2016-11-30 18:18:49,543 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2016-11-30 18:18:49,546 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2016-11-30 18:18:49,551 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2016-11-30 18:18:49,568 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,568 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,569 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,573 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,573 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2016-11-30 18:18:49,575 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRegisterRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]]
2016-11-30 18:18:49,576 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class]
2016-11-30 18:18:49,577 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2016-11-30 18:18:49,577 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2016-11-30 18:18:49,577 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRegisterRepo.class]
2016-11-30 18:18:49,591 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class]
2016-11-30 18:18:49,592 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2016-11-30 18:18:49,593 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2016-11-30 18:18:49,594 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class]
2016-11-30 18:18:49,594 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]
2016-11-30 18:18:49,605 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,605 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,606 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,607 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,607 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2016-11-30 18:18:49,608 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2016-11-30 18:18:49,611 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,613 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,613 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,613 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,614 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,614 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRegisterRepoImpl.class]
2016-11-30 18:18:49,615 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRegisterRepoImpl.class] to resources []
2016-11-30 18:18:49,616 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRegisterRepo - Interface: com.celera.mongo.repo.InvoiceRegisterRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,616 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,617 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,617 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,617 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,618 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailRepoImpl.class]
2016-11-30 18:18:49,618 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailRepoImpl.class] to resources []
2016-11-30 18:18:49,618 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailRepo - Interface: com.celera.mongo.repo.TradeDetailRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,619 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,619 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,620 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,620 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,620 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class]
2016-11-30 18:18:49,620 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class] to resources []
2016-11-30 18:18:49,621 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailsRepo - Interface: com.celera.mongo.repo.TradeDetailsRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,622 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,622 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,622 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,622 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,623 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2016-11-30 18:18:49,623 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2016-11-30 18:18:49,623 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,624 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,624 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,624 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,625 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,625 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2016-11-30 18:18:49,625 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2016-11-30 18:18:49,626 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,627 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,627 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,627 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,628 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,628 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AccountRepoImpl.class]
2016-11-30 18:18:49,628 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AccountRepoImpl.class] to resources []
2016-11-30 18:18:49,628 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: accountRepo - Interface: com.celera.mongo.repo.AccountRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,629 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,629 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,629 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,630 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,630 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2016-11-30 18:18:49,630 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2016-11-30 18:18:49,631 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,632 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-30 18:18:49,633 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-30 18:18:49,633 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-30 18:18:49,633 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-30 18:18:49,633 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRepoImpl.class]
2016-11-30 18:18:49,634 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRepoImpl.class] to resources []
2016-11-30 18:18:49,634 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRepo - Interface: com.celera.mongo.repo.InvoiceRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-30 18:18:49,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 17 bean definitions from location pattern [spring-config.xml]
2016-11-30 18:18:49,637 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@3f102e87: startup date [Wed Nov 30 18:18:49 HKT 2016]; root of context hierarchy
2016-11-30 18:18:49,637 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@3f102e87: org.springframework.beans.factory.support.DefaultListableBeanFactory@3d3fcdb0: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,addressRepo,invoiceRegisterRepo,tradeDetailRepo,tradeDetailsRepo,hedgeRepo,personRepo,accountRepo,tradeConfoRepo,invoiceRepo]; root of factory hierarchy
2016-11-30 18:18:49,652 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-30 18:18:49,653 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-30 18:18:49,661 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2016-11-30 18:18:49,683 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-30 18:18:49,683 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-30 18:18:49,684 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-30 18:18:49,684 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2016-11-30 18:18:49,685 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-30 18:18:49,686 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-30 18:18:49,687 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-30 18:18:49,687 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2016-11-30 18:18:49,688 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-30 18:18:49,689 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2fd6b6c7]
2016-11-30 18:18:49,691 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@60dcc9fe]
2016-11-30 18:18:49,693 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3d3fcdb0: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,addressRepo,invoiceRegisterRepo,tradeDetailRepo,tradeDetailsRepo,hedgeRepo,personRepo,accountRepo,tradeConfoRepo,invoiceRepo]; root of factory hierarchy
2016-11-30 18:18:49,693 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2016-11-30 18:18:49,693 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2016-11-30 18:18:49,696 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2016-11-30 18:18:49,713 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2016-11-30 18:18:49,826 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2016-11-30 18:18:49,827 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-30 18:18:49,827 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-30 18:18:49,827 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:49,827 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2016-11-30 18:18:49,830 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2016-11-30 18:18:49,830 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2016-11-30 18:18:49,830 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2016-11-30 18:18:49,835 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2016-11-30 18:18:49,836 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2016-11-30 18:18:49,955 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2016-11-30 18:18:49,968 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2016-11-30 18:18:49,969 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2016-11-30 18:18:49,969 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-30 18:18:49,969 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2016-11-30 18:18:49,969 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2016-11-30 18:18:49,969 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2016-11-30 18:18:49,975 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2016-11-30 18:18:49,976 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2016-11-30 18:18:49,976 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2016-11-30 18:18:49,976 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2016-11-30 18:18:49,984 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2016-11-30 18:18:49,997 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4d5b6aac'
2016-11-30 18:18:49,997 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3e84448c'
2016-11-30 18:18:50,002 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#3e84448c'
2016-11-30 18:18:50,002 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3e84448c'
2016-11-30 18:18:50,007 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4d5b6aac'
2016-11-30 18:18:50,007 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#57d7f8ca'
2016-11-30 18:18:50,010 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#57d7f8ca'
2016-11-30 18:18:50,010 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,010 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2016-11-30 18:18:50,041 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2016-11-30 18:18:50,068 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@117159c0]
2016-11-30 18:18:50,073 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2016-11-30 18:18:50,073 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:50,073 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRegisterRepo'
2016-11-30 18:18:50,074 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRegisterRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,074 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#74d1dc36'
2016-11-30 18:18:50,074 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7161d8d1'
2016-11-30 18:18:50,075 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#7161d8d1'
2016-11-30 18:18:50,075 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7161d8d1'
2016-11-30 18:18:50,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#74d1dc36'
2016-11-30 18:18:50,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1cf6d1be'
2016-11-30 18:18:50,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1cf6d1be'
2016-11-30 18:18:50,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRegisterRepo'
2016-11-30 18:18:50,087 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.InvoiceRegister for index information.
2016-11-30 18:18:50,088 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@4b013c76]
2016-11-30 18:18:50,091 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRegisterRepo'
2016-11-30 18:18:50,092 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailRepo'
2016-11-30 18:18:50,092 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailRepo'
2016-11-30 18:18:50,092 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,092 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#cb0755b'
2016-11-30 18:18:50,093 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#33065d67'
2016-11-30 18:18:50,094 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#33065d67'
2016-11-30 18:18:50,095 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#33065d67'
2016-11-30 18:18:50,095 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#cb0755b'
2016-11-30 18:18:50,095 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#75437611'
2016-11-30 18:18:50,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#75437611'
2016-11-30 18:18:50,096 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailRepo'
2016-11-30 18:18:50,104 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetail for index information.
2016-11-30 18:18:50,105 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@79e4c792]
2016-11-30 18:18:50,107 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailRepo'
2016-11-30 18:18:50,108 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailsRepo'
2016-11-30 18:18:50,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailsRepo'
2016-11-30 18:18:50,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailsRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4c60d6e9'
2016-11-30 18:18:50,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#15043a2f'
2016-11-30 18:18:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#15043a2f'
2016-11-30 18:18:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#15043a2f'
2016-11-30 18:18:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4c60d6e9'
2016-11-30 18:18:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1349883'
2016-11-30 18:18:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1349883'
2016-11-30 18:18:50,110 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,110 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailsRepo'
2016-11-30 18:18:50,115 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetails for index information.
2016-11-30 18:18:50,117 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@35dab4eb]
2016-11-30 18:18:50,120 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailsRepo'
2016-11-30 18:18:50,121 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2016-11-30 18:18:50,121 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2016-11-30 18:18:50,121 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,122 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3ba987b8'
2016-11-30 18:18:50,122 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3f191845'
2016-11-30 18:18:50,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#3f191845'
2016-11-30 18:18:50,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3f191845'
2016-11-30 18:18:50,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3ba987b8'
2016-11-30 18:18:50,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#72cc7e6f'
2016-11-30 18:18:50,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#72cc7e6f'
2016-11-30 18:18:50,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2016-11-30 18:18:50,131 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2016-11-30 18:18:50,132 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@18271936]
2016-11-30 18:18:50,139 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2016-11-30 18:18:50,140 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2016-11-30 18:18:50,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2016-11-30 18:18:50,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#8458f04'
2016-11-30 18:18:50,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#48075da3'
2016-11-30 18:18:50,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#48075da3'
2016-11-30 18:18:50,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#48075da3'
2016-11-30 18:18:50,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#8458f04'
2016-11-30 18:18:50,143 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7a35b0f5'
2016-11-30 18:18:50,143 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7a35b0f5'
2016-11-30 18:18:50,143 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,143 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2016-11-30 18:18:50,177 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2016-11-30 18:18:50,196 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@19932c16]
2016-11-30 18:18:50,199 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2016-11-30 18:18:50,199 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'accountRepo'
2016-11-30 18:18:50,199 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'accountRepo'
2016-11-30 18:18:50,199 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'accountRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,199 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#514646ef'
2016-11-30 18:18:50,200 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#305ffe9e'
2016-11-30 18:18:50,200 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#305ffe9e'
2016-11-30 18:18:50,200 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#305ffe9e'
2016-11-30 18:18:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#514646ef'
2016-11-30 18:18:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1972e513'
2016-11-30 18:18:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1972e513'
2016-11-30 18:18:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'accountRepo'
2016-11-30 18:18:50,206 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Account for index information.
2016-11-30 18:18:50,206 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@6f10d5b6]
2016-11-30 18:18:50,209 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'accountRepo'
2016-11-30 18:18:50,209 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2016-11-30 18:18:50,209 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2016-11-30 18:18:50,209 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,210 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#548a24a'
2016-11-30 18:18:50,210 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#433defed'
2016-11-30 18:18:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#433defed'
2016-11-30 18:18:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#433defed'
2016-11-30 18:18:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#548a24a'
2016-11-30 18:18:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3f4faf53'
2016-11-30 18:18:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3f4faf53'
2016-11-30 18:18:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2016-11-30 18:18:50,229 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Leg for index information.
2016-11-30 18:18:50,230 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2016-11-30 18:18:50,247 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@4a8355dd]
2016-11-30 18:18:50,249 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2016-11-30 18:18:50,250 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:50,250 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRepo'
2016-11-30 18:18:50,250 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRepo' to allow for resolving potential circular references
2016-11-30 18:18:50,251 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#c430e6c'
2016-11-30 18:18:50,251 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#312aa7c'
2016-11-30 18:18:50,252 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#312aa7c'
2016-11-30 18:18:50,252 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#312aa7c'
2016-11-30 18:18:50,253 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#c430e6c'
2016-11-30 18:18:50,253 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#72bc6553'
2016-11-30 18:18:50,253 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#72bc6553'
2016-11-30 18:18:50,253 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-30 18:18:50,254 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRepo'
2016-11-30 18:18:50,265 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Invoice for index information.
2016-11-30 18:18:50,267 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@71075444]
2016-11-30 18:18:50,269 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRepo'
2016-11-30 18:18:50,270 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4007f65e]
2016-11-30 18:18:50,271 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2016-11-30 18:18:50,272 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-11-30 18:18:50,272 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-11-30 18:18:50,272 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-11-30 18:18:50,272 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:50,281 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:51,909 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate$13.doInCollection(MongoTemplate.java:1285) - Remove using query: { } in collection: invoiceregister.
2016-11-30 18:18:51,911 [main] INFO  com.celera.backoffice.DatabaseAdapter.deleteAll(DatabaseAdapter.java:341) - delete all InvoiceRegister [id=null, date=null, invoice=null, customer=null, accountNumber=null, curncy=null, amount=null, key=null, lastModified=null]
2016-11-30 18:18:51,992 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Yuanta Securities Korea Co., Ltd, accountNumber=CEL0025, curncy=HKD, amount=7200.0, key=CEL0025_HKD_1116, lastModified=null]
2016-11-30 18:18:51,992 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=4320.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:51,992 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=0.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:51,993 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=9000.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:51,993 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=3195.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:51,993 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Korea Investment & Securities Co Ltd, accountNumber=CEL0011, curncy=HKD, amount=3195.0, key=CEL0011_HKD_1116, lastModified=null]
2016-11-30 18:18:51,994 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=2800.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:51,994 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=11393.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:51,994 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=1595.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:51,996 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=4200.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:51,996 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=2990.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:51,997 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=0.0, key=CEL0012_HKD_1116, lastModified=null]
2016-11-30 18:18:51,997 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=2085.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:51,997 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=5592.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:51,997 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=12586.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:51,998 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=742.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:51,998 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=NH Investment & Securities Co Ltd, accountNumber=CEL0024, curncy=HKD, amount=1965.0, key=CEL0024_HKD_1116, lastModified=null]
2016-11-30 18:18:51,998 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=5000.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:51,998 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=14551.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:51,998 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=910.0, key=CEL0012_HKD_1116, lastModified=null]
2016-11-30 18:18:51,999 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=2620.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:51,999 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=1666.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:51,999 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=KRW, amount=866.0, key=CEL0006_USD_1116, lastModified=null]
2016-11-30 18:18:51,999 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=0.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,000 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Tue Nov 29 13:04:00 HKT 2016, invoice=CEL-160001, customer=Samsung Securities Co., Ltd, accountNumber=CEL0026, curncy=USD, amount=1082.0, key=CEL0026_USD_1116, lastModified=null]
2016-11-30 18:18:52,000 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=541.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,000 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=16936.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,000 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=3906.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:52,001 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=2978.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,001 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=4770.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,001 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=5800.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,002 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=3165.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:52,002 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=7377.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,002 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=24631.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,002 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=5530.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,007 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=4235.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:52,007 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Fri Nov 25 14:44:00 HKT 2016, invoice=CEL-160001, customer=IMC Pacific Pty Ltd, accountNumber=CEL0037, curncy=HKD, amount=2568.0, key=CEL0037_HKD_1116, lastModified=null]
2016-11-30 18:18:52,007 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=40681.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,008 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=5305.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:52,008 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=4762.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:52,008 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Dongbu Securities, accountNumber=CEL0034, curncy=HKD, amount=8220.0, key=CEL0034_HKD_1116, lastModified=null]
2016-11-30 18:18:52,009 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Hanwha Investment & Securities, accountNumber=CEL0035, curncy=HKD, amount=2740.0, key=CEL0035_HKD_1116, lastModified=null]
2016-11-30 18:18:52,009 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=46846.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,010 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Hanwha Investment & Securities, accountNumber=CEL0035, curncy=HKD, amount=7340.0, key=CEL0035_HKD_1116, lastModified=null]
2016-11-30 18:18:52,010 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,011 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=IBK Securities Co. Ltd, accountNumber=CEL0027, curncy=USD, amount=1327.0, key=CEL0027_USD_1116, lastModified=null]
2016-11-30 18:18:52,011 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=USD, amount=398.0, key=CEL0018_USD_1116, lastModified=null]
2016-11-30 18:18:52,011 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=10280.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,011 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 23 17:07:00 HKT 2016, invoice=CEL-160001, customer=Barclays Bank PLC, accountNumber=CEL0021, curncy=HKD, amount=8625.0, key=CEL0021_HKD_1116, lastModified=null]
2016-11-30 18:18:52,012 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=8400.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,012 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=49434.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,012 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=10344.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,012 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=7850.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,013 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 23 14:05:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=HKD, amount=16975.0, key=CEL0007_HKD_1116, lastModified=null]
2016-11-30 18:18:52,013 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=58344.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,013 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Dongbu Securities, accountNumber=CEL0034, curncy=HKD, amount=13500.0, key=CEL0034_HKD_1116, lastModified=null]
2016-11-30 18:18:52,014 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=13190.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,014 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=16546.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,014 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=9050.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,014 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=10090.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,014 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 23 14:05:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=HKD, amount=22569.0, key=CEL0007_HKD_1116, lastModified=null]
2016-11-30 18:18:52,015 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=61134.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,015 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=5925.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:52,015 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=19884.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,015 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=63834.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,015 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=25968.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,016 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=11250.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,016 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=12660.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,016 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 23 14:05:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=HKD, amount=30707.0, key=CEL0007_HKD_1116, lastModified=null]
2016-11-30 18:18:52,017 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=26057.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,017 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=13300.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,017 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=66684.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,018 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=27460.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,018 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Thu Nov 17 15:21:00 HKT 2016, invoice=CEL-160001, customer=HMC Investment, accountNumber=CEL0023, curncy=HKD, amount=5560.0, key=CEL0023_HKD_1116, lastModified=null]
2016-11-30 18:18:52,018 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=31668.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,018 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=10110.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,019 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=13750.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,019 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=13470.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,019 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=USD, amount=717.0, key=CEL0018_USD_1116, lastModified=null]
2016-11-30 18:18:52,019 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=1073.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,020 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=14850.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,020 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=68229.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,020 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=37353.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,020 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=43650.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,021 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=140469.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,021 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=44422.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,021 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=51350.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,022 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=14232.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,022 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=143904.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,022 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 16 14:42:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=USD, amount=2418.0, key=CEL0007_USD_1116, lastModified=null]
2016-11-30 18:18:52,022 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=2685.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,022 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=29880.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,023 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=55550.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,023 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=17990.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,023 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=51120.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,023 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=57750.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,023 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=145464.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,024 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=168489.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,024 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=48300.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,024 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=56745.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,024 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=186819.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,025 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Mon Nov 14 16:16:00 HKT 2016, invoice=CEL-160001, customer=Kiwoom Securities, accountNumber=CEL0038, curncy=HKD, amount=7000.0, key=CEL0038_HKD_1116, lastModified=null]
2016-11-30 18:18:52,025 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=14632.0, key=CEL0004_HKD_1116, lastModified=null]
2016-11-30 18:18:52,025 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=1310.0, key=CEL0012_HKD_1116, lastModified=null]
2016-11-30 18:18:52,025 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=19490.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,026 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=58550.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,026 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=6386.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:52,026 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=66746.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,026 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=190217.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,026 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Korea Investment & Securities Co Ltd, accountNumber=CEL0011, curncy=HKD, amount=5475.0, key=CEL0011_HKD_1116, lastModified=null]
2016-11-30 18:18:52,027 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=194785.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,027 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,027 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=80734.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=85750.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=203920.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=58044.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Mon Nov 14 09:54:00 HKT 2016, invoice=CEL-160001, customer=Celera Financial Limited, accountNumber=CEL0013, curncy=HKD, amount=75.0, key=CEL0013_HKD_1116, lastModified=null]
2016-11-30 18:18:52,028 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,029 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Dongbu Securities, accountNumber=CEL0034, curncy=HKD, amount=18700.0, key=CEL0034_HKD_1116, lastModified=null]
2016-11-30 18:18:52,029 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=207820.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,029 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 14 09:54:00 HKT 2016, invoice=CEL-160001, customer=Celera Financial Limited, accountNumber=CEL0013, curncy=HKD, amount=150.0, key=CEL0013_HKD_1116, lastModified=null]
2016-11-30 18:18:52,029 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,029 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=86850.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,030 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=1742.0, key=CEL0012_HKD_1116, lastModified=null]
2016-11-30 18:18:52,030 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=6818.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:52,030 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Hanwha Investment & Securities, accountNumber=CEL0035, curncy=HKD, amount=11360.0, key=CEL0035_HKD_1116, lastModified=null]
2016-11-30 18:18:52,030 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=86479.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,030 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=92050.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,031 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=60456.0, key=CEL0006_HKD_1116, lastModified=null]
2016-11-30 18:18:52,031 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=89389.0, key=CEL0018_HKD_1116, lastModified=null]
2016-11-30 18:18:52,031 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=94650.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,032 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=214030.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,032 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 23 17:07:00 HKT 2016, invoice=CEL-160001, customer=Barclays Bank PLC, accountNumber=CEL0021, curncy=HKD, amount=13665.0, key=CEL0021_HKD_1116, lastModified=null]
2016-11-30 18:18:52,032 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=219070.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,032 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=98030.0, key=CEL0014_HKD_1116, lastModified=null]
2016-11-30 18:18:52,032 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=6645.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,033 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=222970.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,033 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=10545.0, key=CEL0030_HKD_1116, lastModified=null]
2016-11-30 18:18:52,033 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=22090.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,033 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 16 14:42:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=USD, amount=2418.0, key=CEL0007_USD_1116, lastModified=null]
2016-11-30 18:18:52,033 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=4063.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,034 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:90) - New invoice register InvoiceRegister [id=null, date=Wed Nov 02 16:24:00 HKT 2016, invoice=CEL-160001, customer=Hana Financial Investment, accountNumber=CEL0036, curncy=HKD, amount=15120.0, key=CEL0036_HKD_1116, lastModified=null]
2016-11-30 18:18:52,034 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=226210.0, key=CEL0003_HKD_1116, lastModified=null]
2016-11-30 18:18:52,034 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=1958.0, key=CEL0012_HKD_1116, lastModified=null]
2016-11-30 18:18:52,034 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=6465.0, key=CEL0008_HKD_1116, lastModified=null]
2016-11-30 18:18:52,034 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=25330.0, key=CEL0001_HKD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=7034.0, key=CEL0005_HKD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=USD, amount=2370.0, key=CEL0018_USD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=6818.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Wed Nov 16 14:42:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=USD, amount=4078.0, key=CEL0007_USD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG com.uts.tradeconfo.UtsTradeConfoSummary.load(UtsTradeConfoSummary.java:94) - Update invoice register InvoiceRegister [id=null, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=7925.0, key=CEL0003_USD_1116, lastModified=null]
2016-11-30 18:18:52,035 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,042 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,042 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,045 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02049, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Yuanta Securities Korea Co., Ltd, accountNumber=CEL0025, curncy=HKD, amount=7200.0, key=CEL0025_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,045 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,046 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,046 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,048 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204a, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Vivienne Court Trading Pty Ltd, accountNumber=CEL0004, curncy=HKD, amount=14632.0, key=CEL0004_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,048 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,049 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204b, date=Wed Nov 23 14:05:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=HKD, amount=30707.0, key=CEL0007_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,050 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,051 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204c, date=Wed Nov 02 16:24:00 HKT 2016, invoice=CEL-160001, customer=Hana Financial Investment, accountNumber=CEL0036, curncy=HKD, amount=15120.0, key=CEL0036_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,051 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,052 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,052 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,054 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204d, date=Mon Nov 14 09:54:00 HKT 2016, invoice=CEL-160001, customer=Celera Financial Limited, accountNumber=CEL0013, curncy=HKD, amount=150.0, key=CEL0013_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,054 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,054 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,054 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,055 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204e, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=Eclipse Futures (HK) Limited, accountNumber=CEL0008, curncy=HKD, amount=6465.0, key=CEL0008_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,055 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,056 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,056 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,057 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0204f, date=Tue Nov 29 16:30:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Australia Pty Ltd., accountNumber=CEL0005, curncy=HKD, amount=7034.0, key=CEL0005_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,058 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,058 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,059 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02050, date=Wed Nov 30 14:39:00 HKT 2016, invoice=CEL-160001, customer=BNP Paribas Arbitrage S.N.C.*, accountNumber=CEL0014, curncy=HKD, amount=98030.0, key=CEL0014_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,059 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,059 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,060 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,061 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02051, date=Wed Nov 16 14:42:00 HKT 2016, invoice=CEL-160001, customer=UBS AG London Branch, accountNumber=CEL0007, curncy=USD, amount=4078.0, key=CEL0007_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,061 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,061 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,062 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,063 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02052, date=Fri Nov 25 14:44:00 HKT 2016, invoice=CEL-160001, customer=IMC Pacific Pty Ltd, accountNumber=CEL0037, curncy=HKD, amount=2568.0, key=CEL0037_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,063 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,064 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,064 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,065 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02053, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Dongbu Securities, accountNumber=CEL0034, curncy=HKD, amount=18700.0, key=CEL0034_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,066 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,066 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,067 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02054, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Korea Investment & Securities Co Ltd, accountNumber=CEL0011, curncy=HKD, amount=5475.0, key=CEL0011_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,067 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,067 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,067 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,068 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02055, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=HKD, amount=226210.0, key=CEL0003_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,068 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,068 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,068 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,069 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02056, date=Wed Nov 30 16:48:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=HKD, amount=60456.0, key=CEL0006_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,069 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,069 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,069 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,070 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02057, date=Mon Nov 14 16:16:00 HKT 2016, invoice=CEL-160001, customer=Kiwoom Securities, accountNumber=CEL0038, curncy=HKD, amount=7000.0, key=CEL0038_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,071 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,071 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,071 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,072 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02058, date=Thu Nov 24 15:50:00 HKT 2016, invoice=CEL-160001, customer=Hanwha Investment & Securities, accountNumber=CEL0035, curncy=HKD, amount=11360.0, key=CEL0035_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,072 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,073 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,073 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02059, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=Optiver Australia Pty Ltd, accountNumber=CEL0003, curncy=KRW, amount=7925.0, key=CEL0003_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,074 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,074 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,074 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,075 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205a, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=USD, amount=2370.0, key=CEL0018_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,075 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,075 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,077 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205b, date=Thu Nov 24 11:32:00 HKT 2016, invoice=CEL-160001, customer=IBK Securities Co. Ltd, accountNumber=CEL0027, curncy=USD, amount=1327.0, key=CEL0027_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,079 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205c, date=Thu Nov 17 15:21:00 HKT 2016, invoice=CEL-160001, customer=HMC Investment, accountNumber=CEL0023, curncy=HKD, amount=5560.0, key=CEL0023_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,079 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205d, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=NH Investment & Securities Co Ltd, accountNumber=CEL0024, curncy=HKD, amount=1965.0, key=CEL0024_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,081 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205e, date=Wed Nov 23 17:07:00 HKT 2016, invoice=CEL-160001, customer=Barclays Bank PLC, accountNumber=CEL0021, curncy=HKD, amount=13665.0, key=CEL0021_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,081 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,081 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,081 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,082 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b0205f, date=Tue Nov 29 13:04:00 HKT 2016, invoice=CEL-160001, customer=Samsung Securities Co., Ltd, accountNumber=CEL0026, curncy=USD, amount=1082.0, key=CEL0026_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,082 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,082 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,083 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02060, date=Tue Nov 29 16:17:00 HKT 2016, invoice=CEL-160001, customer=Nomura International Plc, accountNumber=CEL0001, curncy=HKD, amount=25330.0, key=CEL0001_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,083 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,084 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,084 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02061, date=Wed Nov 30 14:10:00 HKT 2016, invoice=CEL-160001, customer=Liquid Capital Hong Kong Limited, accountNumber=CEL0012, curncy=HKD, amount=1958.0, key=CEL0012_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,086 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02062, date=Mon Nov 28 16:18:00 HKT 2016, invoice=CEL-160001, customer=Soci�t� G�n�rale (HK) Limited, accountNumber=CEL0018, curncy=HKD, amount=89389.0, key=CEL0018_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,086 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,087 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02063, date=Tue Nov 29 15:16:00 HKT 2016, invoice=CEL-160001, customer=J.P. Morgan Securities PLC, accountNumber=CEL0006, curncy=KRW, amount=866.0, key=CEL0006_USD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:52,088 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRegisterRepo'
2016-11-30 18:18:52,088 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, invoice, customer, accountNumber, curncy, amount, key, lastModified] in collection: invoiceregister
2016-11-30 18:18:52,088 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:52,089 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create InvoiceRegister [id=583ea78cbebc95fe10b02064, date=Wed Nov 30 16:24:00 HKT 2016, invoice=CEL-160001, customer=Celera Bank Private Test 1, accountNumber=CEL0030, curncy=HKD, amount=10545.0, key=CEL0030_HKD_1116, lastModified=Wed Nov 30 18:18:52 HKT 2016]
2016-11-30 18:18:53,157 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Thierry, 10545.0, 10545.0
2016-11-30 18:18:55,094 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Thierry_HKD_1216.pdf in 1226 ms
2016-11-30 18:18:55,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,099 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,099 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,102 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b02065, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160170, invoice_date=09 December, 2016, account_number=CEL0030, due_date=09 January, 2017, amount_due=HK$10,545, description=October 2016 Brokerage Fee, amount=HK$10,545, key=CEL0030_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_1216.docx, size=600, hedge=103, total_fee=HK$10,545, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13236, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=200, hedge=30, reference=Seller - Thierry, fee=HK$3,450, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13236_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_BFAM.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13202, description=Listed HSCEI DEC17 8400 European Put REF 9,475 (NOV16), size=200, hedge=60, reference=Seller - Thierry, fee=HK$3,900, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13202_HSCEI_DEC17_8400_P_REF_9,475_(NOV16)_CELERA1.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13251, description=Listed HSCEI DEC17 9600 European Straddle REF 9,875 (DEC16), size=200, hedge=13, reference=Buyer - Thierry, fee=HK$3,195, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13251_HSCEI_DEC17_9600_SD_REF_9,875_(DEC16)_BFAM.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,103 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== UBS AG London Branch, 4078.0, 4078.0
2016-11-30 18:18:55,279 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/UBS AG London Branch_KRW_1216.pdf in 114 ms
2016-11-30 18:18:55,280 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,280 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,280 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,281 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b02066, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160171, invoice_date=09 December, 2016, account_number=CEL0007, due_date=09 January, 2017, amount_due=US$4,078, description=October 2016 Brokerage Fee, amount=US$4,078, key=CEL0007_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_1216.docx, size=1,550, hedge=101, total_fee=US$4,078, tradeDetail=[TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13220, description=Listed KS200 MAR17 225 European Put REF 251 (DEC16), size=300, hedge=45, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$2,418, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13220_KS200_MAR17_225_P_REF_251_(DEC16)_UBS.pdf, lastModified=null], TradeDetail [id=null, date=03-Nov-16, tradeId=CELERAEQ-2016-13201, description=Listed KS200 DEC16/JAN17 245/250 -2/1 European Put Time Ratio REF 253.50 (DEC16), size=750, hedge=10, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$0, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13201_KS200_DEC16_JAN17_245_250_-2_1_PTR_REF_253.50_(DEC16)_UBS.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13198, description=Listed KS200 JUN17/DEC17 250 1.5/-1 European Put Time Ratio REF 254.50 (DEC16), size=500, hedge=46, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$1,660, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13198_KS200_JUN17_DEC17_250_1.5_-1_PTR_REF_254.50_(DEC16)_UBS.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,282 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== IBK Securities Co. Ltd, 1327.0, 1327.0
2016-11-30 18:18:55,446 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/IBK Securities Co. Ltd_KRW_1216.pdf in 124 ms
2016-11-30 18:18:55,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,447 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,448 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,449 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b02067, company=IBK Securities Co. Ltd, address=, attn=82269155823, sentTo=twklem@ibks.com , invoice_number=CEL-160172, invoice_date=09 December, 2016, account_number=CEL0027, due_date=09 January, 2017, amount_due=US$1,327, description=October 2016 Brokerage Fee, amount=US$1,327, key=CEL0027_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/IBK Securities Co. Ltd_KRW_1216.docx, size=124, hedge=21, total_fee=US$1,327, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13235, description=Listed KS200 SEP17 220 European Put REF 253 (DEC16), size=124, hedge=21, reference=Seller - IBK Securities Co. Ltd - Sungjoon Chang, fee=US$1,327, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13235_KS200_SEP17_220_P_REF_253_(DEC16)_IBK.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,450 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Hanwha Investment & Securities, 11360.0, 11360.0
2016-11-30 18:18:55,616 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Hanwha Investment & Securities_HKD_1216.pdf in 106 ms
2016-11-30 18:18:55,616 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,616 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,616 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,617 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b02068, company=Hanwha Investment & Securities, address=, attn=, sentTo=, invoice_number=CEL-160173, invoice_date=09 December, 2016, account_number=CEL0035, due_date=09 January, 2017, amount_due=HK$11,360, description=October 2016 Brokerage Fee, amount=HK$11,360, key=CEL0035_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Hanwha Investment & Securities_HKD_1216.docx, size=500, hedge=68, total_fee=HK$11,360, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13237, description=Listed HSCEI JUN17 10200 European Call REF 9,650 (NOV16), size=100, hedge=37, reference=Buyer - Hanwha Investment & Securities - Jongmoon Kim, fee=HK$2,740, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13237_HSCEI_JUN17_10200_C_REF_9,650_(NOV16)_HANWHA.pdf, lastModified=null], TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13236, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=200, hedge=30, reference=Buyer - Hanwha Investment & Securities - Jongmoon Kim, fee=HK$4,600, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13236_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_HANWHA.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13206, description=Listed HSCEI JUN18 9600 European Straddle REF 9,575 (NOV16), size=200, hedge=1, reference=Seller - Hanwha Investment & Securities - Jongmoon Kim, fee=HK$4,020, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13206_HSCEI_JUN18_9600_SD_REF_9,575_(NOV16)_HANWHA.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,618 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Korea Investment & Securities Co Ltd, 5475.0, 5475.0
2016-11-30 18:18:55,703 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_1216.pdf in 57 ms
2016-11-30 18:18:55,703 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,704 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,704 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,704 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b02069, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160174, invoice_date=09 December, 2016, account_number=CEL0011, due_date=09 January, 2017, amount_due=HK$5,475, description=October 2016 Brokerage Fee, amount=HK$5,475, key=CEL0011_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_1216.docx, size=350, hedge=15, total_fee=HK$5,475, tradeDetail=[TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13213, description=Listed HSI JUN18 22000 European Straddle REF 22,225 (NOV16), size=150, hedge=2, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$2,280, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13213_HSI_JUN18_22000_SD_REF_22,225_(NOV16)_KIS.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13251, description=Listed HSCEI DEC17 9600 European Straddle REF 9,875 (DEC16), size=200, hedge=13, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,195, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13251_HSCEI_DEC17_9600_SD_REF_9,875_(DEC16)_KIS.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,705 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Yuanta Securities Korea Co., Ltd, 7200.0, 7200.0
2016-11-30 18:18:55,792 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_HKD_1216.pdf in 55 ms
2016-11-30 18:18:55,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,793 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,793 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,793 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b0206a, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160175, invoice_date=09 December, 2016, account_number=CEL0025, due_date=09 January, 2017, amount_due=HK$7,200, description=October 2016 Brokerage Fee, amount=HK$7,200, key=CEL0025_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_HKD_1216.docx, size=300, hedge=60, total_fee=HK$7,200, tradeDetail=[TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13252, description=Listed HSCEI MAR17 11000 European Call REF 9,875 (DEC16), size=300, hedge=60, reference=Seller - Yuanta Securities Korea Co., Ltd - Seung Woo Hwangbo, fee=HK$7,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13252_HSCEI_MAR17_11000_C_REF_9,875_(DEC16)_Yuanta.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,794 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Eclipse Futures (HK) Limited, 6465.0, 6465.0
2016-11-30 18:18:55,907 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_1216.pdf in 86 ms
2016-11-30 18:18:55,907 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:55,907 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:55,907 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:55,908 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea78fbebc95fe10b0206b, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160176, invoice_date=09 December, 2016, account_number=CEL0008, due_date=09 January, 2017, amount_due=HK$6,465, description=October 2016 Brokerage Fee, amount=HK$6,465, key=CEL0008_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_1216.docx, size=1,037, hedge=85, total_fee=HK$6,465, tradeDetail=[TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13239, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,750 (NOV16), size=200, hedge=14, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,070, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13239_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,750_(NOV16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13238, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,750 (NOV16), size=200, hedge=14, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,070, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13238_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,750_(NOV16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=50, hedge=12, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$620, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=100, hedge=8, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$540, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9,525_(NOV16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13248, description=Listed HSCEI DEC16 8600/10200 -2/1 European Risk Reversal REF 9,900 (DEC16), size=87, hedge=11, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$490, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13248_HSCEI_DEC16_8600_10200_-2_1_RR_REF_9,900_(DEC16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13250, description=Listed HSCEI DEC16 10000/10600 1/-2 European Call Ratio REF 9,875 (DEC16), size=300, hedge=19, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,595, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13250_HSCEI_DEC16_10000_10600_1_-2_CR_REF_9,875_(DEC16)_ECLIPSE.pdf, lastModified=null], TradeDetail [id=null, date=28-Nov-16, tradeId=CELERAEQ-2016-13241, description=Listed HSCEI MAR17 9800 European Straddle REF 9,925 (DEC16), size=100, hedge=7, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,080, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13241_HSCEI_MAR17_9800_SD_REF_9925_(DEC16)_ECLIPSE.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:55 HKT 2016]
2016-11-30 18:18:55,909 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Société Générale (HK) Limited, 89389.0, 89389.0
2016-11-30 18:18:56,106 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_1216.pdf in 131 ms
2016-11-30 18:18:56,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,108 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,108 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,109 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b0206c, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160177, invoice_date=09 December, 2016, account_number=CEL0018, due_date=09 January, 2017, amount_due=HK$89,389, description=October 2016 Brokerage Fee, amount=HK$89,389, key=CEL0018_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_1216.docx, size=8,786, hedge=566, total_fee=HK$89,389, tradeDetail=[TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13240, description=Listed HSCEI DEC18 6600 European Put REF 9,775 (NOV16), size=300, hedge=42, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,399, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13240_HSCEI_DEC18_6600_P_REF_9,775_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13234, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=200, hedge=30, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,903, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13234_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13232, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=200, hedge=64, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,910, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13232_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=100, hedge=24, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,356, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13230, description=Listed HSI SEP17 18800 European Put REF 22,250 (NOV16), size=100, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,338, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13230_HSI_SEP17_18800_P_REF_22,250_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13228, description=Listed HSI SEP17 18800 European Put REF 22,125 (NOV16), size=186, hedge=39, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,173, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13228_HSI_SEP17_18800_P_REF_22,125_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13227, description=Listed HSCEI DEC16 8200/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=250, hedge=28, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,403, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13227_HSCEI_DEC16_8200_9200_-1.5_1_PR_REF_9,350_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13226, description=Listed HSCEI DEC16 8200/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=750, hedge=84, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,208, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13226_HSCEI_DEC16_8200_9200_-1.5_1_PR_REF_9,350_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13222, description=Listed HSCEI MAR17/JUN18 9600 -2/1 European Straddle Time Spread REF 9,475 (NOV16), size=1200, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,685, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13222_HSCEI_MAR17_JUN18_9600_-2_1_SDTS_REF_9,475_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13221, description=Listed HSCEI FEB17 8200/10600 1/-1 European Risk Reversal REF 9,425 (NOV16), size=1000, hedge=145, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,069, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13221_HSCEI_FEB17_8200_10600_1_-1_RR_REF_9,425_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13218, description=Listed HSI DEC17 22000 European Straddle REF 22,325 (NOV16), size=200, hedge=7, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,698, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13218_HSI_DEC17_22000_SD_REF_22,325_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13216, description=Listed HSCEI MAR17/JUN18 9600 -2/1 European Straddle Time Spread REF 9,375 (NOV16), size=1200, hedge=22, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,625, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13216_HSCEI_MAR17_JUN18_9600_-2_1_SDTS_REF_9,375_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13213, description=Listed HSI JUN18 22000 European Straddle REF 22,225 (NOV16), size=300, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$10,001, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13213_HSI_JUN18_22000_SD_REF_22,225_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13211, description=Listed HSCEI SEP17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,325 (NOV16), size=2000, hedge=30, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$13,988, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13211_HSCEI_SEP17_JUN18_9600_-1_1_SDTS_REF_9,325_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13206, description=Listed HSCEI JUN18 9600 European Straddle REF 9,575 (NOV16), size=400, hedge=2, reference=Seller - Société Générale (HK) Limited - Jonathan Moldovan, fee=HK$5,745, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13206_HSCEI_JUN18_9600_SD_REF_9,575_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=08-Nov-16, tradeId=CELERAEQ-2016-13205, description=Listed HSCEI DEC17 9600 European Straddle REF 9,700 (NOV16), size=200, hedge=7, reference=Seller - Société Générale (HK) Limited - Jonathan Moldovan, fee=HK$2,910, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13205_HSCEI_DEC17_9600_SD_REF_9,700_(NOV16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=28-Nov-16, tradeId=CELERAEQ-2016-13242, description=Listed HSCEI MAR17 9800 European Straddle REF 9,925 (DEC16), size=200, hedge=15, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,978, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13242_HSCEI_MAR17_9800_SD_REF_9925_(DEC16)_SG_P.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,110 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== J.P. Morgan Securities PLC, 866.0, 866.0
2016-11-30 18:18:56,277 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_1216.pdf in 116 ms
2016-11-30 18:18:56,277 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,279 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,279 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,280 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b0206d, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160178, invoice_date=09 December, 2016, account_number=CEL0006, due_date=09 January, 2017, amount_due=US$866, description=October 2016 Brokerage Fee, amount=US$866, key=CEL0006_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_1216.docx, size=200, hedge=55, total_fee=US$866, tradeDetail=[TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13245, description=Listed KS200 DEC17 260 European Straddle REF 253 (DEC16), size=200, hedge=55, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$866, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13245_KS200_DEC17_260_SD_REF_253_(DEC16)_JPM_L.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,291 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Hana Financial Investment, 15120.0, 15120.0
2016-11-30 18:18:56,394 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Hana Financial Investment_HKD_1216.pdf in 52 ms
2016-11-30 18:18:56,394 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,395 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,395 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,395 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b0206e, company=Hana Financial Investment, address=, attn=, sentTo=, invoice_number=CEL-160179, invoice_date=09 December, 2016, account_number=CEL0036, due_date=09 January, 2017, amount_due=HK$15,120, description=October 2016 Brokerage Fee, amount=HK$15,120, key=CEL0036_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Hana Financial Investment_HKD_1216.docx, size=700, hedge=56, total_fee=HK$15,120, tradeDetail=[TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=700, hedge=56, reference=Buyer - Hana Financial Investment - Hyochul Lee, fee=HK$15,120, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9,525_(NOV16)_HANAFN.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,396 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Liquid Capital Australia Pty Ltd., 7034.0, 7034.0
2016-11-30 18:18:56,471 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_1216.pdf in 49 ms
2016-11-30 18:18:56,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,473 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b0206f, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160180, invoice_date=09 December, 2016, account_number=CEL0005, due_date=09 January, 2017, amount_due=HK$7,034, description=October 2016 Brokerage Fee, amount=HK$7,034, key=CEL0005_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_1216.docx, size=700, hedge=71, total_fee=HK$7,034, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13247, description=Listed HSCEI DEC17 9600 European Straddle REF 9,875 (DEC16), size=50, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$742, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13247_HSCEI_DEC17_9600_SD_REF_9,875_(DEC16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=50, hedge=16, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$924, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13243, description=Listed HSCEI DEC17 10800/13800 1/-2 European Call Ratio REF 9,825 (DEC16), size=150, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,240, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13243_HSCEI_DEC17_10800_13800_1_-2_CR_REF_9,825_(DEC16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13238, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,750 (NOV16), size=200, hedge=14, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$856, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13238_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,750_(NOV16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13214, description=Listed HSCEI DEC17 7200/12000 1/-1 European Risk Reversal REF 9,350 (NOV16), size=100, hedge=16, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,624, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13214_HSCEI_DEC17_7200_12000_1_-1_RR_REF_9,350_(NOV16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13207, description=Listed HSCEI DEC16 10200/11000 European Call Spread REF 9,575 (NOV16), size=100, hedge=8, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$432, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13207_HSCEI_DEC16_10200_11000_CS_REF_9,575_(NOV16)_LIQ.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=50, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$216, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9,525_(NOV16)_LIQ.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,474 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Vivienne Court Trading Pty Ltd, 14632.0, 14632.0
2016-11-30 18:18:56,552 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_1216.pdf in 54 ms
2016-11-30 18:18:56,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,554 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02070, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160181, invoice_date=09 December, 2016, account_number=CEL0004, due_date=09 January, 2017, amount_due=HK$14,632, description=October 2016 Brokerage Fee, amount=HK$14,632, key=CEL0004_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_1216.docx, size=1,329, hedge=165, total_fee=HK$14,632, tradeDetail=[TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13239, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,725 (NOV16), size=200, hedge=14, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,540, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13239_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,725_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13233, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=100, hedge=32, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,320, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13233_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=100, hedge=24, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,240, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=18-Nov-16, tradeId=CELERAEQ-2016-13229, description=Listed HSCEI DEC16 9800/10400 European Call Spread REF 9,300 (NOV16), size=200, hedge=17, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,570, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13229_HSCEI_DEC16_9800_10400_CS_REF_9,300_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13228, description=Listed HSI SEP17 18800 European Put REF 22,125 (NOV16), size=29, hedge=6, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$640, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13228_HSI_SEP17_18800_P_REF_22,125_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13221, description=Listed HSCEI FEB17 8200/10600 1/-1 European Risk Reversal REF 9,425 (NOV16), size=200, hedge=33, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$932, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13221_HSCEI_FEB17_8200_10600_1_-1_RR_REF_9,425_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13215, description=Listed HSCEI DEC16 7000 European Put REF 9,350 (NOV16), size=100, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$400, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13215_HSCEI_DEC16_7000_P_REF_9,350_(NOV16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13249, description=Listed HSCEI DEC16 10000/10600 1/-2 European Call Ratio REF 9,875 (DEC16), size=300, hedge=19, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,990, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13249_HSCEI_DEC16_10000_10600_1_-2_CR_REF_9,875_(DEC16)_VIV.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13252, description=Listed HSCEI MAR17 11000 European Call REF 9,875 (DEC16), size=100, hedge=20, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$0, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13252_HSCEI_MAR17_11000_C_REF_9,875_(DEC16)_VIV.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,564 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Société Générale (HK) Limited, 2370.0, 2370.0
2016-11-30 18:18:56,638 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_1216.pdf in 48 ms
2016-11-30 18:18:56,638 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,638 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,638 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,639 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02071, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160182, invoice_date=09 December, 2016, account_number=CEL0018, due_date=09 January, 2017, amount_due=US$2,370, description=October 2016 Brokerage Fee, amount=US$2,370, key=CEL0018_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_1216.docx, size=1,324, hedge=326, total_fee=US$2,370, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13235, description=Listed KS200 SEP17 220 European Put REF 253 (DEC16), size=124, hedge=21, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$398, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13235_KS200_SEP17_220_P_REF_253_(DEC16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13224, description=Listed KS200 JUN17/DEC17 250/260 -1/1 European Put Diagonal REF 249.50 (DEC16), size=200, hedge=40, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$319, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13224_KS200_JUN17_DEC17_250_260_-1_1_PDIAG_REF_249.50_(DEC16)_SG_P.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13199, description=Listed KS200 DEC16 245/260 1/-1 European Risk Reversal REF 253.50 (DEC16), size=1000, hedge=265, reference=Buyer - Société Générale (HK) Limited - Jonathan Moldovan, fee=US$1,653, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13199_KS200_DEC16_245_260_1_-1_RR_REF_253.50_(DEC16)_SG_P.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,640 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Dongbu Securities, 18700.0, 18700.0
2016-11-30 18:18:56,705 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Dongbu Securities_HKD_1216.pdf in 35 ms
2016-11-30 18:18:56,705 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,706 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,706 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,706 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02072, company=Dongbu Securities, address=, attn=, sentTo=, invoice_number=CEL-160183, invoice_date=09 December, 2016, account_number=CEL0034, due_date=09 January, 2017, amount_due=HK$18,700, description=October 2016 Brokerage Fee, amount=HK$18,700, key=CEL0034_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Dongbu Securities_HKD_1216.docx, size=700, hedge=235, total_fee=HK$18,700, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13237, description=Listed HSCEI JUN17 10200 European Call REF 9,650 (NOV16), size=300, hedge=111, reference=Seller - Dongbu Securities - Tae Kwang Han, fee=HK$8,220, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13237_HSCEI_JUN17_10200_C_REF_9,650_(NOV16)_DONGBU.pdf, lastModified=null], TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13232, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=200, hedge=64, reference=Seller - Dongbu Securities - Tae Kwang Han, fee=HK$5,280, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13232_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_DONGBU.pdf, lastModified=null], TradeDetail [id=null, date=11-Nov-16, tradeId=CELERAEQ-2016-13209, description=Listed HSCEI DEC17 8400 European Put REF 9,450 (NOV16), size=200, hedge=60, reference=Seller - Dongbu Securities - Tae Kwang Han, fee=HK$5,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13209_HSCEI_DEC17_8400_P_REF_9,450_(NOV16)_DONGBU.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,707 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Nomura International Plc, 25330.0, 25330.0
2016-11-30 18:18:56,774 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Nomura International Plc_HKD_1216.pdf in 42 ms
2016-11-30 18:18:56,774 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,774 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,774 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,775 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02073, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160184, invoice_date=09 December, 2016, account_number=CEL0001, due_date=09 January, 2017, amount_due=HK$25,330, description=October 2016 Brokerage Fee, amount=HK$25,330, key=CEL0001_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_1216.docx, size=2,900, hedge=333, total_fee=HK$25,330, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=200, hedge=62, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,620, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13226, description=Listed HSCEI DEC16 8200/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=750, hedge=84, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$5,340, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13226_HSCEI_DEC16_8200_9200_-1.5_1_PR_REF_9,350_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13225, description=Listed HSCEI DEC16 8600/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=500, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$3,360, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13225_HSCEI_DEC16_8600_9200_-1.5_1_PR_REF_9,350_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13219, description=Listed HSCEI DEC16 8400/9400 -2/1 European Put Ratio REF 9,475 (NOV16), size=600, hedge=52, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$4,520, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13219_HSCEI_DEC16_8400_9400_-2_1_PR_REF_9,475_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13215, description=Listed HSCEI DEC16 7000 European Put REF 9,350 (NOV16), size=150, hedge=0, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$1,500, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13215_HSCEI_DEC16_7000_P_REF_9,350_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13202, description=Listed HSCEI DEC17 8400 European Put REF 9,475 (NOV16), size=200, hedge=60, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,600, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13202_HSCEI_DEC17_8400_P_REF_9,475_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=300, hedge=24, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$3,240, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9,525_(NOV16)_NOMU.pdf, lastModified=null], TradeDetail [id=null, date=28-Nov-16, tradeId=CELERAEQ-2016-13242, description=Listed HSCEI MAR17 9800 European Straddle REF 9,925 (DEC16), size=200, hedge=15, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,150, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13242_HSCEI_MAR17_9800_SD_REF_9925_(DEC16)_NOMU.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,776 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== J.P. Morgan Securities PLC, 60456.0, 60456.0
2016-11-30 18:18:56,846 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_1216.pdf in 47 ms
2016-11-30 18:18:56,846 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,846 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,846 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,847 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02074, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160185, invoice_date=09 December, 2016, account_number=CEL0006, due_date=09 January, 2017, amount_due=HK$60,456, description=October 2016 Brokerage Fee, amount=HK$60,456, key=CEL0006_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_1216.docx, size=4,700, hedge=338, total_fee=HK$60,456, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13247, description=Listed HSCEI DEC17 9600 European Straddle REF 9,875 (DEC16), size=100, hedge=6, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,272, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13247_HSCEI_DEC17_9600_SD_REF_9,875_(DEC16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13233, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=300, hedge=96, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$4,752, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13233_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=18-Nov-16, tradeId=CELERAEQ-2016-13229, description=Listed HSCEI DEC16 9800/10400 European Call Spread REF 9,300 (NOV16), size=1200, hedge=102, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$15,624, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13229_HSCEI_DEC16_9800_10400_CS_REF_9,300_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13219, description=Listed HSCEI DEC16 8400/9400 -2/1 European Put Ratio REF 9,475 (NOV16), size=300, hedge=26, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,912, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13219_HSCEI_DEC16_8400_9400_-2_1_PR_REF_9,475_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13217, description=Listed HSCEI MAR17 6000/7800 -2/1 European Put Ratio REF 9,375 (NOV16), size=1500, hedge=35, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$18,420, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13217_HSCEI_MAR17_6000_7800_-2_1_PR_REF_9,375_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13211, description=Listed HSCEI SEP17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,325 (NOV16), size=800, hedge=12, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,744, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13211_HSCEI_SEP17_JUN18_9600_-1_1_SDTS_REF_9,325_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13206, description=Listed HSCEI JUN18 9600 European Straddle REF 9,575 (NOV16), size=200, hedge=1, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,412, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13206_HSCEI_JUN18_9600_SD_REF_9,575_(NOV16)_JPM_L.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13252, description=Listed HSCEI MAR17 11000 European Call REF 9,875 (DEC16), size=300, hedge=60, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$4,320, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13252_HSCEI_MAR17_11000_C_REF_9,875_(DEC16)_JPM_L.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,848 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== UBS AG London Branch, 30707.0, 30707.0
2016-11-30 18:18:56,895 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/UBS AG London Branch_HKD_1216.pdf in 29 ms
2016-11-30 18:18:56,896 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,896 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,896 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,897 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02075, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160186, invoice_date=09 December, 2016, account_number=CEL0007, due_date=09 January, 2017, amount_due=HK$30,707, description=October 2016 Brokerage Fee, amount=HK$30,707, key=CEL0007_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_1216.docx, size=1,800, hedge=333, total_fee=HK$30,707, tradeDetail=[TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13233, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=700, hedge=224, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$16,975, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13233_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_UBS.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=100, hedge=24, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$5,594, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_UBS.pdf, lastModified=null], TradeDetail [id=null, date=18-Nov-16, tradeId=CELERAEQ-2016-13229, description=Listed HSCEI DEC16 9800/10400 European Call Spread REF 9,300 (NOV16), size=1000, hedge=85, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$8,138, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13229_HSCEI_DEC16_9800_10400_CS_REF_9,300_(NOV16)_UBS.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,898 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 98030.0, 98030.0
2016-11-30 18:18:56,972 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_1216.pdf in 52 ms
2016-11-30 18:18:56,972 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:56,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:56,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:56,981 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea790bebc95fe10b02076, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160187, invoice_date=09 December, 2016, account_number=CEL0014, due_date=09 January, 2017, amount_due=HK$98,030, description=October 2016 Brokerage Fee, amount=HK$98,030, key=CEL0014_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_1216.docx, size=12,950, hedge=661, total_fee=HK$98,030, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=100, hedge=31, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13234, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=200, hedge=30, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13234_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=50, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$650, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=18-Nov-16, tradeId=CELERAEQ-2016-13229, description=Listed HSCEI DEC16 9800/10400 European Call Spread REF 9,300 (NOV16), size=400, hedge=34, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13229_HSCEI_DEC16_9800_10400_CS_REF_9,300_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13225, description=Listed HSCEI DEC16 8600/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=500, hedge=36, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$2,500, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13225_HSCEI_DEC16_8600_9200_-1.5_1_PR_REF_9,350_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13223, description=Listed HSCEI MAR17/DEC17 10000/10800 -1/1 European Call Diagonal REF 9,450 (NOV16), size=200, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13223_HSCEI_MAR17_DEC17_10000_10800_-1_1_CDIAG_REF_9,450_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13222, description=Listed HSCEI MAR17/JUN18 9600 -2/1 European Straddle Time Spread REF 9,475 (NOV16), size=3600, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$28,800, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13222_HSCEI_MAR17_JUN18_9600_-2_1_SDTS_REF_9,475_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13221, description=Listed HSCEI FEB17 8200/10600 1/-1 European Risk Reversal REF 9,425 (NOV16), size=1400, hedge=203, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$7,700, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13221_HSCEI_FEB17_8200_10600_1_-1_RR_REF_9,425_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13219, description=Listed HSCEI DEC16 8400/9400 -2/1 European Put Ratio REF 9,475 (NOV16), size=900, hedge=78, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$4,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13219_HSCEI_DEC16_8400_9400_-2_1_PR_REF_9,475_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13218, description=Listed HSI DEC17 22000 European Straddle REF 22,325 (NOV16), size=100, hedge=3, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Matthieu Barry, fee=HK$2,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13218_HSI_DEC17_22000_SD_REF_22,325_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13214, description=Listed HSCEI DEC17 7200/12000 1/-1 European Risk Reversal REF 9,350 (NOV16), size=100, hedge=16, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13214_HSCEI_DEC17_7200_12000_1_-1_RR_REF_9,350_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13211, description=Listed HSCEI SEP17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,325 (NOV16), size=3400, hedge=51, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$27,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13211_HSCEI_SEP17_JUN18_9600_-1_1_SDTS_REF_9,325_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13207, description=Listed HSCEI DEC16 10200/11000 European Call Spread REF 9,575 (NOV16), size=200, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13207_HSCEI_DEC16_10200_11000_CS_REF_9,575_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13206, description=Listed HSCEI JUN18 9600 European Straddle REF 9,575 (NOV16), size=400, hedge=2, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13206_HSCEI_JUN18_9600_SD_REF_9,575_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=08-Nov-16, tradeId=CELERAEQ-2016-13205, description=Listed HSCEI DEC17 9600 European Straddle REF 9,700 (NOV16), size=200, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Matthieu Barry, fee=HK$2,600, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13205_HSCEI_DEC17_9600_SD_REF_9,700_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13203, description=Listed HSCEI DEC17 8400 European Put REF 9,475 (NOV16), size=200, hedge=60, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$3,380, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13203_HSCEI_DEC17_8400_P_REF_9,475_(NOV16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13249, description=Listed HSCEI DEC16 10000/10600 1/-2 European Call Ratio REF 9,875 (DEC16), size=300, hedge=19, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$1,400, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13249_HSCEI_DEC16_10000_10600_1_-2_CR_REF_9,875_(DEC16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13250, description=Listed HSCEI DEC16 10000/10600 1/-2 European Call Ratio REF 9,875 (DEC16), size=600, hedge=38, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$2,800, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13250_HSCEI_DEC16_10000_10600_1_-2_CR_REF_9,875_(DEC16)_BNP_P.pdf, lastModified=null], TradeDetail [id=null, date=28-Nov-16, tradeId=CELERAEQ-2016-13241, description=Listed HSCEI MAR17 9800 European Straddle REF 9,925 (DEC16), size=100, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13241_HSCEI_MAR17_9800_SD_REF_9925_(DEC16)_BNP_P.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:56 HKT 2016]
2016-11-30 18:18:56,982 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== HMC Investment, 5560.0, 5560.0
2016-11-30 18:18:57,034 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/HMC Investment_HKD_1216.pdf in 34 ms
2016-11-30 18:18:57,035 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,035 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,036 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,036 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b02077, company=HMC Investment, address=, attn=, sentTo=0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com, invoice_number=CEL-160188, invoice_date=09 December, 2016, account_number=CEL0023, due_date=09 January, 2017, amount_due=HK$5,560, description=October 2016 Brokerage Fee, amount=HK$5,560, key=CEL0023_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/HMC Investment_HKD_1216.docx, size=250, hedge=28, total_fee=HK$5,560, tradeDetail=[TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13227, description=Listed HSCEI DEC16 8200/9200 -1.5/1 European Put Ratio REF 9,350 (NOV16), size=250, hedge=28, reference=Buyer - HMC Investment - JeongBon, Koo, fee=HK$5,560, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13227_HSCEI_DEC16_8200_9200_-1.5_1_PR_REF_9,350_(NOV16)_HMC.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,037 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Optiver Australia Pty Ltd, 7925.0, 7925.0
2016-11-30 18:18:57,093 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_1216.pdf in 34 ms
2016-11-30 18:18:57,093 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,093 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,094 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,094 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b02078, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160189, invoice_date=09 December, 2016, account_number=CEL0003, due_date=09 January, 2017, amount_due=US$7,925, description=October 2016 Brokerage Fee, amount=US$7,925, key=CEL0003_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_1216.docx, size=3,050, hedge=481, total_fee=US$7,925, tradeDetail=[TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13245, description=Listed KS200 DEC17 260 European Straddle REF 253 (DEC16), size=200, hedge=55, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13245_KS200_DEC17_260_SD_REF_253_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13244, description=Listed KS200 DEC17 220 European Put REF 253 (DEC16), size=100, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$541, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13244_KS200_DEC17_220_P_REF_253_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13224, description=Listed KS200 JUN17/DEC17 250/260 -1/1 European Put Diagonal REF 249.50 (DEC16), size=200, hedge=40, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$532, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13224_KS200_JUN17_DEC17_250_260_-1_1_PDIAG_REF_249.50_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13220, description=Listed KS200 MAR17 225 European Put REF 251 (DEC16), size=300, hedge=45, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$1,612, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13220_KS200_MAR17_225_P_REF_251_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=03-Nov-16, tradeId=CELERAEQ-2016-13201, description=Listed KS200 DEC16/JAN17 245/250 -2/1 European Put Time Ratio REF 253.50 (DEC16), size=750, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,378, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13201_KS200_DEC16_JAN17_245_250_-2_1_PTR_REF_253.50_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13199, description=Listed KS200 DEC16 245/260 1/-1 European Risk Reversal REF 253.50 (DEC16), size=1000, hedge=265, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$2,755, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13199_KS200_DEC16_245_260_1_-1_RR_REF_253.50_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13198, description=Listed KS200 JUN17/DEC17 250 1.5/-1 European Put Time Ratio REF 254.50 (DEC16), size=500, hedge=46, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,107, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13198_KS200_JUN17_DEC17_250_1.5_-1_PTR_REF_254.50_(DEC16)_OPTIVER.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,095 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== IMC Pacific Pty Ltd, 2568.0, 2568.0
2016-11-30 18:18:57,151 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/IMC Pacific Pty Ltd_HKD_1216.pdf in 36 ms
2016-11-30 18:18:57,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,153 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b02079, company=IMC Pacific Pty Ltd, address=, attn=, sentTo=, invoice_number=CEL-160190, invoice_date=09 December, 2016, account_number=CEL0037, due_date=09 January, 2017, amount_due=HK$2,568, description=October 2016 Brokerage Fee, amount=HK$2,568, key=CEL0037_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/IMC Pacific Pty Ltd_HKD_1216.docx, size=600, hedge=42, total_fee=HK$2,568, tradeDetail=[TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13238, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,750 (NOV16), size=600, hedge=42, reference=Buyer - IMC Pacific Pty Ltd - Karthik Vadivelu, fee=HK$2,568, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13238_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,750_(NOV16)_IMC.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,154 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Optiver Australia Pty Ltd, 226210.0, 226210.0
2016-11-30 18:18:57,228 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_1216.pdf in 49 ms
2016-11-30 18:18:57,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,230 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,231 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207a, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160191, invoice_date=09 December, 2016, account_number=CEL0003, due_date=09 January, 2017, amount_due=HK$226,210, description=October 2016 Brokerage Fee, amount=HK$226,210, key=CEL0003_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_1216.docx, size=13,407, hedge=845, total_fee=HK$226,210, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13247, description=Listed HSCEI DEC17 9600 European Straddle REF 9,875 (DEC16), size=50, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,193, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13247_HSCEI_DEC17_9600_SD_REF_9,875_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=100, hedge=31, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,965, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13243, description=Listed HSCEI DEC17 10800/13800 1/-2 European Call Ratio REF 9,825 (DEC16), size=150, hedge=9, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,385, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13243_HSCEI_DEC17_10800_13800_1_-2_CR_REF_9,825_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13240, description=Listed HSCEI DEC18 6600 European Put REF 9,775 (NOV16), size=300, hedge=42, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,695, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13240_HSCEI_DEC18_6600_P_REF_9,775_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=25-Nov-16, tradeId=CELERAEQ-2016-13238, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,725 (NOV16), size=1000, hedge=70, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$16,050, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13238_HSCEI_DEC16_8600_10600_-1_1_RR_REF_9,725_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13237, description=Listed HSCEI JUN17 10200 European Call REF 9,650 (NOV16), size=200, hedge=74, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,165, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13237_HSCEI_JUN17_10200_C_REF_9,650_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13234, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=100, hedge=15, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,588, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13234_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=23-Nov-16, tradeId=CELERAEQ-2016-13233, description=Listed HSCEI JUN17 9000 European Put REF 9,700 (NOV16), size=300, hedge=96, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$8,910, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13233_HSCEI_JUN17_9000_P_REF_9,700_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13231, description=Listed HSI JUN17 20000 European Put REF 22,375 (NOV16), size=100, hedge=24, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,790, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13231_HSI_JUN17_20000_P_REF_22,375_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=21-Nov-16, tradeId=CELERAEQ-2016-13230, description=Listed HSI SEP17 18800 European Put REF 22,250 (NOV16), size=100, hedge=20, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,700, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13230_HSI_SEP17_18800_P_REF_22,250_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=17-Nov-16, tradeId=CELERAEQ-2016-13228, description=Listed HSI SEP17 18800 European Put REF 22,125 (NOV16), size=157, hedge=33, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,850, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13228_HSI_SEP17_18800_P_REF_22,125_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13223, description=Listed HSCEI MAR17/DEC17 10000/10800 -1/1 European Call Diagonal REF 9,450 (NOV16), size=200, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,545, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13223_HSCEI_MAR17_DEC17_10000_10800_-1_1_CDIAG_REF_9,450_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13222, description=Listed HSCEI MAR17/JUN18 9600 -2/1 European Straddle Time Spread REF 9,475 (NOV16), size=4800, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$72,240, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13222_HSCEI_MAR17_JUN18_9600_-2_1_SDTS_REF_9,475_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=16-Nov-16, tradeId=CELERAEQ-2016-13221, description=Listed HSCEI FEB17 8200/10600 1/-1 European Risk Reversal REF 9,425 (NOV16), size=200, hedge=29, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,435, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13221_HSCEI_FEB17_8200_10600_1_-1_RR_REF_9,425_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13218, description=Listed HSI DEC17 22000 European Straddle REF 22,325 (NOV16), size=100, hedge=4, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,560, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13218_HSI_DEC17_22000_SD_REF_22,325_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13217, description=Listed HSCEI MAR17 6000/7800 -2/1 European Put Ratio REF 9,375 (NOV16), size=1500, hedge=35, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$23,025, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13217_HSCEI_MAR17_6000_7800_-2_1_PR_REF_9,375_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=15-Nov-16, tradeId=CELERAEQ-2016-13216, description=Listed HSCEI MAR17/JUN18 9600 -2/1 European Straddle Time Spread REF 9,375 (NOV16), size=1200, hedge=22, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$18,330, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13216_HSCEI_MAR17_JUN18_9600_-2_1_SDTS_REF_9,375_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13213, description=Listed HSI JUN18 22000 European Straddle REF 22,225 (NOV16), size=150, hedge=1, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,398, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13213_HSI_JUN18_22000_SD_REF_22,225_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13212, description=Listed HSCEI SEP17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,325 (NOV16), size=200, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,568, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13212_HSCEI_SEP17_JUN18_9600_-1_1_SDTS_REF_9,325_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13211, description=Listed HSCEI SEP17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,325 (NOV16), size=400, hedge=6, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$9,135, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13211_HSCEI_SEP17_JUN18_9600_-1_1_SDTS_REF_9,325_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=11-Nov-16, tradeId=CELERAEQ-2016-13209, description=Listed HSCEI DEC17 8400 European Put REF 9,450 (NOV16), size=200, hedge=60, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,900, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13209_HSCEI_DEC17_8400_P_REF_9,450_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=08-Nov-16, tradeId=CELERAEQ-2016-13205, description=Listed HSCEI DEC17 9600 European Straddle REF 9,700 (NOV16), size=400, hedge=14, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,210, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13205_HSCEI_DEC17_9600_SD_REF_9,700_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13204, description=Listed HSCEI MAR17 8000 European Put REF 9,500 (NOV16), size=300, hedge=36, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,040, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13204_HSCEI_MAR17_8000_P_REF_9,500_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13202, description=Listed HSCEI DEC17 8400 European Put REF 9,475 (NOV16), size=200, hedge=60, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,900, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13202_HSCEI_DEC17_8400_P_REF_9,475_(NOV16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13250, description=Listed HSCEI DEC16 10000/10600 1/-2 European Call Ratio REF 9,875 (DEC16), size=300, hedge=19, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,393, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13250_HSCEI_DEC16_10000_10600_1_-2_CR_REF_9,875_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13252, description=Listed HSCEI MAR17 11000 European Call REF 9,875 (DEC16), size=500, hedge=100, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$9,000, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13252_HSCEI_MAR17_11000_C_REF_9,875_(DEC16)_OPTIVER.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=200, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,240, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9525_(NOV16)_OPTIVER.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,234 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Kiwoom Securities, 7000.0, 7000.0
2016-11-30 18:18:57,284 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Kiwoom Securities_HKD_1216.pdf in 25 ms
2016-11-30 18:18:57,284 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,285 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,285 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,285 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207b, company=Kiwoom Securities, address=, attn=, sentTo=, invoice_number=CEL-160192, invoice_date=09 December, 2016, account_number=CEL0038, due_date=09 January, 2017, amount_due=HK$7,000, description=October 2016 Brokerage Fee, amount=HK$7,000, key=CEL0038_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Kiwoom Securities_HKD_1216.docx, size=350, hedge=0, total_fee=HK$7,000, tradeDetail=[TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13215, description=Listed HSCEI DEC16 7000 European Put REF 9,350 (NOV16), size=350, hedge=0, reference=Buyer - Kiwoom Securities - Juchul Kim, fee=HK$7,000, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13215_HSCEI_DEC16_7000_P_REF_9,350_(NOV16)_KIWOOM.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,286 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Samsung Securities Co., Ltd, 1082.0, 1082.0
2016-11-30 18:18:57,332 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Samsung Securities Co., Ltd_KRW_1216.pdf in 28 ms
2016-11-30 18:18:57,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,333 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207c, company=Samsung Securities Co., Ltd, address=, attn=82220208426, sentTo=youngja.yoon@samsung.com, invoice_number=CEL-160193, invoice_date=09 December, 2016, account_number=CEL0026, due_date=09 January, 2017, amount_due=US$1,082, description=October 2016 Brokerage Fee, amount=US$1,082, key=CEL0026_KRW_1216, isPaid=false, hasSent=false, currency=KRW, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Samsung Securities Co., Ltd_KRW_1216.docx, size=100, hedge=20, total_fee=US$1,082, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13244, description=Listed KS200 DEC17 220 European Put REF 253 (DEC16), size=100, hedge=20, reference=Seller - Samsung Securities Co., Ltd - Byunghoon Kim, fee=US$1,082, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13244_KS200_DEC17_220_P_REF_253_(DEC16)_SAMSUNG.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,334 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Celera Financial Limited, 150.0, 150.0
2016-11-30 18:18:57,376 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Celera Financial Limited_HKD_1216.pdf in 27 ms
2016-11-30 18:18:57,377 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,379 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207d, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160194, invoice_date=09 December, 2016, account_number=CEL0013, due_date=09 January, 2017, amount_due=HK$150, description=October 2016 Brokerage Fee, amount=HK$150, key=CEL0013_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_1216.docx, size=10, hedge=0, total_fee=HK$150, tradeDetail=[TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13210, description=Listed HSCEI DEC16 Future, size=5, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$75, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13210_HSCEI_DEC16_SPRD_REF_9,300_(NOV16)_CFL.pdf, lastModified=null], TradeDetail [id=null, date=11-Nov-16, tradeId=CELERAEQ-2016-13208, description=Listed HSCEI DEC16 Future, size=5, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$75, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13208_HSCEI_DEC16_SPRD_REF_9,350_(NOV16)_CFL.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,379 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Barclays Bank PLC, 13665.0, 13665.0
2016-11-30 18:18:57,430 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Barclays Bank PLC_HKD_1216.pdf in 28 ms
2016-11-30 18:18:57,430 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,431 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,431 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,432 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207e, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160195, invoice_date=09 December, 2016, account_number=CEL0021, due_date=09 January, 2017, amount_due=HK$13,665, description=October 2016 Brokerage Fee, amount=HK$13,665, key=CEL0021_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Barclays Bank PLC_HKD_1216.docx, size=800, hedge=111, total_fee=HK$13,665, tradeDetail=[TradeDetail [id=null, date=24-Nov-16, tradeId=CELERAEQ-2016-13234, description=Listed HSCEI JUN18 7000 European Put REF 9,675 (NOV16), size=500, hedge=75, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$8,625, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13234_HSCEI_JUN18_7000_P_REF_9,675_(NOV16)_BARC.pdf, lastModified=null], TradeDetail [id=null, date=04-Nov-16, tradeId=CELERAEQ-2016-13204, description=Listed HSCEI MAR17 8000 European Put REF 9,500 (NOV16), size=300, hedge=36, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$5,040, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13204_HSCEI_MAR17_8000_P_REF_9,500_(NOV16)_BARC.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,433 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== NH Investment & Securities Co Ltd, 1965.0, 1965.0
2016-11-30 18:18:57,476 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/NH Investment & Securities Co Ltd_HKD_1216.pdf in 23 ms
2016-11-30 18:18:57,476 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,476 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,476 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,477 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b0207f, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=CEL-160196, invoice_date=09 December, 2016, account_number=CEL0024, due_date=09 January, 2017, amount_due=HK$1,965, description=October 2016 Brokerage Fee, amount=HK$1,965, key=CEL0024_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/NH Investment & Securities Co Ltd_HKD_1216.docx, size=100, hedge=31, total_fee=HK$1,965, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=100, hedge=31, reference=Seller - NH Investment & Securities Co Ltd - Ki Hong Kim, fee=HK$1,965, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_NH.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,477 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:352) - =============same amount============== Liquid Capital Hong Kong Limited, 1958.0, 1958.0
2016-11-30 18:18:57,527 [main] INFO  com.celera.tools.Doc2Pdf.doGenerate(Doc2Pdf.java:96) - Generate /home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_1216.pdf in 32 ms
2016-11-30 18:18:57,527 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-30 18:18:57,527 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, currency, paymentBankName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, size, hedge, total_fee, tradeDetail, lastModified] in collection: invoice
2016-11-30 18:18:57,528 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-30 18:18:57,528 [main] INFO  com.celera.backoffice.DatabaseAdapter.create(DatabaseAdapter.java:281) - create Invoice [id=583ea791bebc95fe10b02080, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160197, invoice_date=09 December, 2016, account_number=CEL0012, due_date=09 January, 2017, amount_due=HK$1,958, description=October 2016 Brokerage Fee, amount=HK$1,958, key=CEL0012_HKD_1216, isPaid=false, hasSent=false, currency=HKD, paymentBankName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_1216.docx, size=387, hedge=38, total_fee=HK$1,958, tradeDetail=[TradeDetail [id=null, date=29-Nov-16, tradeId=CELERAEQ-2016-13246, description=Listed HSCEI MAR17 9400 European Put REF 9,875 (DEC16), size=50, hedge=15, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$910, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13246_HSCEI_MAR17_9400_P_REF_9,875_(DEC16)_LIQHK.pdf, lastModified=null], TradeDetail [id=null, date=14-Nov-16, tradeId=CELERAEQ-2016-13215, description=Listed HSCEI DEC16 7000 European Put REF 9,350 (NOV16), size=100, hedge=0, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$400, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13215_HSCEI_DEC16_7000_P_REF_9,350_(NOV16)_LIQHK.pdf, lastModified=null], TradeDetail [id=null, date=10-Nov-16, tradeId=CELERAEQ-2016-13207, description=Listed HSCEI DEC16 10200/11000 European Call Spread REF 9,575 (NOV16), size=100, hedge=8, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$432, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13207_HSCEI_DEC16_10200_11000_CS_REF_9,575_(NOV16)_LIQHK.pdf, lastModified=null], TradeDetail [id=null, date=02-Nov-16, tradeId=CELERAEQ-2016-13200, description=Listed HSCEI DEC16 10800 European Call REF 9,525 (NOV16), size=50, hedge=4, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$216, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13200_HSCEI_DEC16_10800_C_REF_9,525_(NOV16)_LIQHK.pdf, lastModified=null], TradeDetail [id=null, date=30-Nov-16, tradeId=CELERAEQ-2016-13248, description=Listed HSCEI DEC16 8600/10200 -2/1 European Risk Reversal REF 9,900 (DEC16), size=87, hedge=11, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, tradeConfoFile=/home/idbs/cmbos/tradeconfo/CELERAEQ-2016-13248_HSCEI_DEC16_8600_10200_-2_1_RR_REF_9,900_(DEC16)_LIQHK.pdf, lastModified=null]], lastModified=Wed Nov 30 18:18:57 HKT 2016]
2016-11-30 18:18:57,536 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0025_USD_1116
2016-11-30 18:18:57,537 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0020_HKD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_USD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_HKD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0516
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0916
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_1016
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_1016
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_0716
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0012_HKD_0316
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_USD_1016
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0024_HKD_0916
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_USD_0616
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0002_HKD_1116
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_0816
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_0416
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_HKD_0716
2016-11-30 18:18:57,544 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_0316
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_0616
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_USD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_1116
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_0516
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0021_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0516
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0002_HKD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_0516
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0616
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_0516
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_HKD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_USD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0616
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_0616
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0012_HKD_0616
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0020_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0019_USD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_USD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_USD_0916
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_HKD_0816
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0025_USD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_0816
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_1116
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_HKD_1116
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_0816
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_0716
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0016_HKD_0516
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_0816
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_1016
2016-11-30 18:18:57,545 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_USD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0012_HKD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_USD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_0416
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_USD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0026_USD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_USD_0416
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0025_HKD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0716
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_0816
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0022_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0012_HKD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_USD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_0616
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_USD_0816
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0027_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_0816
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_0716
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_1016
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0021_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0019_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0025_USD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_USD_0416
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0716
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_0516
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_0916
2016-11-30 18:18:57,546 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_0716
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0019_HKD_1116
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0009_USD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_USD_0716
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_USD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0026_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0416
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_USD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0017_HKD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0006_HKD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0003_HKD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_HKD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0015_USD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_USD_0716
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0002_HKD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0001_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_USD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0004_HKD_0516
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0013_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_USD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0019_HKD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0007_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0316
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0024_HKD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0002_HKD_0616
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0416
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0028_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0018_HKD_1016
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0011_HKD_0716
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_USD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0008_HKD_0816
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0005_HKD_0716
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0023_HKD_0916
2016-11-30 18:18:57,547 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:92) - =============recon error============ CEL0014_HKD_0816
