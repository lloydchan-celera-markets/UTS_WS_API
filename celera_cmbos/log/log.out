2016-11-09 12:15:39,928 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Eclipse Futures (HK) Limited - Traders <traders@eclipseoptions.com>
Cc: A <ops@hk.abnamroclearing.com>, accounts@eclipseoptions.com
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI MAY16 Futures
Eclipse Futures (HK) Limited - Traders
TRADE DATE 29-Apr-16
SIZE (PT VALUE) 1 (50 HKD/PT) TRADE ID CELERAEQ-2016-12855
NOTIONAL HKD
DETAILS
LEG B/S SIZE EXPIRY PRODUCT STRIKE
Leg 1 Buy 1 30-May-16 Future 8,900
Leg 2 Sell 1 30-May-16 Future 8,950
Settlement as per exchange rules
2016-11-09 12:15:40,151 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Eclipse Futures (HK) Limited - Traders <traders@eclipseoptions.com>
Cc: A <ops@hk.abnamroclearing.com>, accounts@eclipseoptions.com
***FINAL CONFIRMATION***
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16)
*** THIS TRADE WAS CROSSED ON 20-MAY-16***
PRICE HKD 138.00 TRADE DATE 19-May-16
REF 8,250 TRADE ID CELERAEQ-2016-12878
DELTA No delta
SIZE (PT VALUE) 50 (50 HKD/PT) PREMIUM PAYMENT As per exchange rules
NOTIONAL HKD 20,625,000
PREMIUM HKD 345,000.00
DETAILS
LEG B/S SIZE EXPIRY STRIKE PRODUCT PRICE (HKD) PREMIUM (HKD)
Leg 1 Sell 50 29-Sep-16 7,600 European Put 362.00 -905,000.00
Leg 2 Buy 50 29-Dec-16 7,600 European Put 500.00 +1,250,000.00
Settlement as per exchange rules
FEES
BROKERAGE FEE HKD 1,000
2016-11-09 12:15:40,155 [main] ERROR com.uts.tradeconfo.UtsTradeConfoDetail.parsePdf(UtsTradeConfoDetail.java:962) - buyer,seller=null sPdf=Celera Markets Limited
51 Man Yue Street, 11G,
Hung Hom, Kowloon, Hong Kong
Terms will be defined as per exchange rules and regulations/ISDA OTC equity index confirmation definitions unless otherwise
agreed between counterparties. Counterparties affirm possession of proper licensing rights.
An invoice for payment will be sent separately to you at month end. Thank you for this trade.
Please notify Celera Markets Limited within 24 hours if any of the details on this confirmation are incorrect.
1/1
To: Nomura International Plc - Nadjib Ezziane <nadjib.ezziane@nomura.com>
Cc: A <exoticsindex-hk@hk.nomura.com>, B <exoticsstocks-hk@hk.nomura.com>, C <flowindex-
hk@hk.nomura.com>, D <eqdmo-hkg@nomura.com>, E <equity_bc_india_hk-in@nomura.com>
***FINAL CONFIRMATION***
Listed Trade Confirmation - HANG SENG CHINA ENTERPRISES INDEX [HK]
SUMMARY
Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16)
*** THIS TRADE WAS CROSSED ON 20-MAY-16***
PRICE HKD 138.00 TRADE DATE 19-May-16
REF 8,250 TRADE ID CELERAEQ-2016-12878
DELTA No delta
SIZE (PT VALUE) 50 (50 HKD/PT) PREMIUM PAYMENT As per exchange rules
NOTIONAL HKD 20,625,000
PREMIUM HKD 345,000.00
DETAILS
LEG B/S SIZE EXPIRY STRIKE PRODUCT PRICE (HKD) PREMIUM (HKD)
Leg 1 Buy 50 29-Sep-16 7,600 European Put 362.00 +905,000.00
Leg 2 Sell 50 29-Dec-16 7,600 European Put 500.00 -1,250,000.00
Settlement as per exchange rules
FEES
BROKERAGE FEE HKD 1,200
2016-11-09 12:15:43,025 [main] DEBUG com.celera.adapter.DatabaseAdapter.<clinit>(DatabaseAdapter.java:96) - 01-Oct-16,31-Dec-99
2016-11-09 12:15:43,138 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,139 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,140 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,146 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [spring-config.xml]
2016-11-09 12:15:43,166 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 12:15:43,196 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141) - Loading schema mappings from [META-INF/spring.schemas]
2016-11-09 12:15:43,205 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147) - Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://cxf.apache.org/schemas/configuration/http-conf.xsd=schemas/configuration/http-conf.xsd, http://cxf.apache.org/configuration/parameterized-types=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd=schemas/xmldsig-core-schema.xsd, http://www.w3.org/2001/datatypes.dtd=schemas/datatypes.dtd, http://www.w3.org/2006/07/ws-policy.xsd=schemas/ws-policy-200607.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://schemas.xmlsoap.org/ws/2004/08/addressing=schemas/wsdl/addressing.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd=schemas/oasis-200401-wss-wssecurity-secext-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://schemas.xmlsoap.org/wsdl/=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://cxf.apache.org/schemas/configuration/http-jetty.xsd=schemas/configuration/http-jetty.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://schemas.xmlsoap.org/wsdl/http/=schemas/wsdl/http.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd=schemas/oasis-200401-wss-wssecurity-utility-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://cxf.apache.org/schemas/configuration/parameterized-types.xsd=schemas/configuration/parameterized-types.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://schemas.xmlsoap.org/wsdl/2003-02-11.xsd=schemas/wsdl/wsdl.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://cxf.apache.org/schemas/ws/addressing.xsd=schemas/ws-addr-conf.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://cxf.apache.org/schemas/wsdl/http-conf.xsd=schemas/wsdl/http-conf.xsd, http://www.w3.org/2001/xml.xsd=schemas/xml.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.w3.org/2007/02/ws-policy.xsd=schemas/ws-policy-200702.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://cxf.apache.org/schemas/policy.xsd=schemas/policy.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://schemas.xmlsoap.org/ws/2004/09/policy/ws-policy.xsd=schemas/ws-policy-200409.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://cxf.apache.org/schemas/configuration/cxf-beans.xsd=schemas/configuration/cxf-beans.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://cxf.apache.org/schemas/core.xsd=schemas/core.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.w3.org/2001/XMLSchema.dtd=schemas/XMLSchema.dtd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://cxf.apache.org/schemas/configuration/security.xsd=schemas/configuration/security.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://cxf.apache.org/schemas/configuration/soap.xsd=schemas/configuration/soap.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.8.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://cxf.apache.org/schemas/jaxws.xsd=schemas/jaxws.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://cxf.apache.org/schemas/simple.xsd=schemas/simple.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.1.xsd}
2016-11-09 12:15:43,206 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2016-11-09 12:15:43,254 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.0.xsd
2016-11-09 12:15:43,262 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2016-11-09 12:15:43,269 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2016-11-09 12:15:43,270 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2016-11-09 12:15:43,286 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:98) - Loading bean definitions
2016-11-09 12:15:43,295 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://cxf.apache.org/transports/http-jetty/configuration=org.apache.cxf.transport.http_jetty.spring.NamespaceHandler, http://www.w3.org/2006/07/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://cxf.apache.org/jaxws=org.apache.cxf.jaxws.spring.NamespaceHandler, http://cxf.apache.org/policy=org.apache.cxf.ws.policy.spring.NamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://cxf.apache.org/transports/http/configuration=org.apache.cxf.transport.http.spring.NamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://cxf.apache.org/ws/addressing=org.apache.cxf.ws.addressing.spring.NamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://cxf.apache.org/simple=org.apache.cxf.frontend.spring.NamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://cxf.apache.org/core=org.apache.cxf.bus.spring.NamespaceHandler, http://schemas.xmlsoap.org/ws/2004/09/policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.w3.org/ns/ws-policy=org.apache.cxf.ws.policy.spring.PolicyNamespaceHandler, http://cxf.apache.org/bindings/soap=org.apache.cxf.binding.soap.spring.NamespaceHandler}
2016-11-09 12:15:43,324 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,324 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,325 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,332 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar]
2016-11-09 12:15:43,359 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:545) - Looking for matching resources in jar file [file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar]
2016-11-09 12:15:43,364 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:org/springframework/data/**/repository/support/**/*.class] to resources [URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SimpleMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MappingMongoEntityInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QueryDslMongoRepository.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/SpringDataMongodbQuery.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory$MongoQueryLookupStrategy.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactoryBean.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/QuerydslRepositorySupport.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditor.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/CrudRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/QueryMethodParameterConversionException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories$EmptyRepositoryFactoryInformation.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$1.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassPropertyEditorRegistrar.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/AnnotationAttribute.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/Repositories.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ConversionMatchAbbreviationException.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/ReflectionRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DefaultRepositoryInvokerFactory.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/MethodParameters$AnnotationNamingMethodParameter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.class], URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-commons/1.11.2.RELEASE/spring-data-commons-1.11.2.RELEASE.jar!/org/springframework/data/repository/support/RepositoryInvocationInformation.class]]
2016-11-09 12:15:43,383 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbSerializer] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer]
2016-11-09 12:15:43,384 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:110) - Could not read interface [com.google.common.base.Function] for type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery$1]
2016-11-09 12:15:43,402 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.mongodb.MongodbQuery] of type-filtered class [org.springframework.data.mongodb.repository.support.SpringDataMongodbQuery]
2016-11-09 12:15:43,407 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: URL [jar:file:/home/idbs/.m2/repository/org/springframework/data/spring-data-mongodb/1.8.2.RELEASE/spring-data-mongodb-1.8.2.RELEASE.jar!/org/springframework/data/mongodb/repository/support/MongoRepositoryFactory.class]
2016-11-09 12:15:43,413 [main] DEBUG org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter.match(AbstractTypeHierarchyTraversingFilter.java:86) - Could not read super class [com.mysema.query.apt.AbstractQuerydslProcessor] of type-filtered class [org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor]
2016-11-09 12:15:43,435 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,436 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,436 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,440 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,440 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*.class]
2016-11-09 12:15:43,442 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*.class] to resources [file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class], file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]]
2016-11-09 12:15:43,443 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AccountRepo.class]
2016-11-09 12:15:43,444 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/AddressRepo.class]
2016-11-09 12:15:43,444 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/HedgeRepo.class]
2016-11-09 12:15:43,446 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/PersonRepo.class]
2016-11-09 12:15:43,447 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeConfoRepo.class]
2016-11-09 12:15:43,447 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/InvoiceRepo.class]
2016-11-09 12:15:43,448 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailRepo.class]
2016-11-09 12:15:43,448 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286) - Identified candidate component class: file [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/TradeDetailsRepo.class]
2016-11-09 12:15:43,452 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,453 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,453 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,455 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,455 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class]
2016-11-09 12:15:43,456 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailsRepoImpl.class] to resources []
2016-11-09 12:15:43,458 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailsRepo - Interface: com.celera.mongo.repo.TradeDetailsRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,459 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,459 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,459 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,460 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,460 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeConfoRepoImpl.class]
2016-11-09 12:15:43,460 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeConfoRepoImpl.class] to resources []
2016-11-09 12:15:43,461 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeConfoRepo - Interface: com.celera.mongo.repo.TradeConfoRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,462 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,462 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,462 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,463 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,463 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AccountRepoImpl.class]
2016-11-09 12:15:43,463 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AccountRepoImpl.class] to resources []
2016-11-09 12:15:43,464 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: accountRepo - Interface: com.celera.mongo.repo.AccountRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,464 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,464 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,465 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,465 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,465 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*AddressRepoImpl.class]
2016-11-09 12:15:43,465 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*AddressRepoImpl.class] to resources []
2016-11-09 12:15:43,466 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: addressRepo - Interface: com.celera.mongo.repo.AddressRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,466 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,467 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,467 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,467 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,467 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*TradeDetailRepoImpl.class]
2016-11-09 12:15:43,468 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*TradeDetailRepoImpl.class] to resources []
2016-11-09 12:15:43,468 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: tradeDetailRepo - Interface: com.celera.mongo.repo.TradeDetailRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,468 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,469 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,469 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,469 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,469 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*InvoiceRepoImpl.class]
2016-11-09 12:15:43,470 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*InvoiceRepoImpl.class] to resources []
2016-11-09 12:15:43,470 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: invoiceRepo - Interface: com.celera.mongo.repo.InvoiceRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,471 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,471 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,471 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,471 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,472 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*HedgeRepoImpl.class]
2016-11-09 12:15:43,472 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*HedgeRepoImpl.class] to resources []
2016-11-09 12:15:43,472 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: hedgeRepo - Interface: com.celera.mongo.repo.HedgeRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,473 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 12:15:43,473 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109) - Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 12:15:43,473 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:127) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 12:15:43,474 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631) - Looking for matching resources in directory tree [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo]
2016-11-09 12:15:43,474 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693) - Searching directory [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo] for files matching pattern [/home/idbs/workspace/uts/build/UTS_WS_API/celera_core/target/classes/com/celera/mongo/repo/**/*PersonRepoImpl.class]
2016-11-09 12:15:43,474 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424) - Resolved location pattern [classpath*:com/celera/mongo/repo/**/*PersonRepoImpl.class] to resources []
2016-11-09 12:15:43,475 [main] DEBUG org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:142) - Spring Data MongoDB - Registering repository: personRepo - Interface: com.celera.mongo.repo.PersonRepo - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
2016-11-09 12:15:43,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224) - Loaded 16 bean definitions from location pattern [spring-config.xml]
2016-11-09 12:15:43,478 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:514) - Refreshing org.springframework.context.support.GenericXmlApplicationContext@4f933fd1: startup date [Wed Nov 09 12:15:43 HKT 2016]; root of context hierarchy
2016-11-09 12:15:43,478 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:544) - Bean factory for org.springframework.context.support.GenericXmlApplicationContext@4f933fd1: org.springframework.beans.factory.support.DefaultListableBeanFactory@5ccddd20: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeDetailsRepo,tradeConfoRepo,accountRepo,addressRepo,tradeDetailRepo,invoiceRepo,hedgeRepo,personRepo]; root of factory hierarchy
2016-11-09 12:15:43,499 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 12:15:43,500 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 12:15:43,520 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2016-11-09 12:15:43,561 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 12:15:43,564 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 12:15:43,564 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 12:15:43,565 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1' to allow for resolving potential circular references
2016-11-09 12:15:43,566 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 12:15:43,579 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 12:15:43,579 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 12:15:43,580 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor' to allow for resolving potential circular references
2016-11-09 12:15:43,580 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 12:15:43,583 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:650) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@16d04d3d]
2016-11-09 12:15:43,585 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:674) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@158d2680]
2016-11-09 12:15:43,588 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:724) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ccddd20: defining beans [mongo,org.springframework.beans.factory.config.CustomEditorConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#1,mongoTemplate,mongoCredentials,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension#0,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor,mongoMappingContext,tradeDetailsRepo,tradeConfoRepo,accountRepo,addressRepo,tradeDetailRepo,invoiceRepo,hedgeRepo,personRepo]; root of factory hierarchy
2016-11-09 12:15:43,589 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongo'
2016-11-09 12:15:43,589 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongo'
2016-11-09 12:15:43,592 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongo' to allow for resolving potential circular references
2016-11-09 12:15:43,613 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongo'
2016-11-09 12:15:43,738 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongo'
2016-11-09 12:15:43,739 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2016-11-09 12:15:43,739 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#1'
2016-11-09 12:15:43,739 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:43,739 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoTemplate'
2016-11-09 12:15:43,741 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongo'
2016-11-09 12:15:43,742 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoCredentials'
2016-11-09 12:15:43,742 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoCredentials'
2016-11-09 12:15:43,756 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoCredentials' to allow for resolving potential circular references
2016-11-09 12:15:43,757 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoCredentials'
2016-11-09 12:15:43,852 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoTemplate'
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoCredentials'
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor'
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'mongoMappingContext'
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'mongoMappingContext'
2016-11-09 12:15:43,860 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'mongoMappingContext' to allow for resolving potential circular references
2016-11-09 12:15:43,868 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'mongoMappingContext'
2016-11-09 12:15:43,868 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'mongoMappingContext'
2016-11-09 12:15:43,869 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:43,869 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailsRepo'
2016-11-09 12:15:43,870 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailsRepo' to allow for resolving potential circular references
2016-11-09 12:15:43,884 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4681c175'
2016-11-09 12:15:43,885 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#57a78e3'
2016-11-09 12:15:43,891 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#57a78e3'
2016-11-09 12:15:43,891 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#57a78e3'
2016-11-09 12:15:43,894 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4681c175'
2016-11-09 12:15:43,894 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#5b247367'
2016-11-09 12:15:43,901 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#5b247367'
2016-11-09 12:15:43,902 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:43,903 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailsRepo'
2016-11-09 12:15:43,947 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetail for index information.
2016-11-09 12:15:43,957 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeDetails for index information.
2016-11-09 12:15:43,985 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@24105dc5]
2016-11-09 12:15:43,989 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailsRepo'
2016-11-09 12:15:43,989 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeConfoRepo'
2016-11-09 12:15:43,989 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeConfoRepo'
2016-11-09 12:15:43,989 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeConfoRepo' to allow for resolving potential circular references
2016-11-09 12:15:43,990 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7f2cfe3f'
2016-11-09 12:15:43,990 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#1a5b6f42'
2016-11-09 12:15:43,990 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#1a5b6f42'
2016-11-09 12:15:43,990 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#1a5b6f42'
2016-11-09 12:15:43,991 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7f2cfe3f'
2016-11-09 12:15:43,991 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#32115b28'
2016-11-09 12:15:43,991 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#32115b28'
2016-11-09 12:15:43,991 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:43,991 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeConfoRepo'
2016-11-09 12:15:44,019 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Hedge for index information.
2016-11-09 12:15:44,025 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Leg for index information.
2016-11-09 12:15:44,026 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.TradeConfo for index information.
2016-11-09 12:15:44,048 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@163370c2]
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeConfoRepo'
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'accountRepo'
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'accountRepo'
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'accountRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#7905a0b8'
2016-11-09 12:15:44,051 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#35a3d49f'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#35a3d49f'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#35a3d49f'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#7905a0b8'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#6ca18a14'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#6ca18a14'
2016-11-09 12:15:44,053 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'accountRepo'
2016-11-09 12:15:44,059 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Account for index information.
2016-11-09 12:15:44,060 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@1b410b60]
2016-11-09 12:15:44,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'accountRepo'
2016-11-09 12:15:44,063 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'addressRepo'
2016-11-09 12:15:44,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'addressRepo'
2016-11-09 12:15:44,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'addressRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,063 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#19b843ba'
2016-11-09 12:15:44,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#64ec96c6'
2016-11-09 12:15:44,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#64ec96c6'
2016-11-09 12:15:44,064 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#64ec96c6'
2016-11-09 12:15:44,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#19b843ba'
2016-11-09 12:15:44,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#456d6c1e'
2016-11-09 12:15:44,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#456d6c1e'
2016-11-09 12:15:44,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,065 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'addressRepo'
2016-11-09 12:15:44,073 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Address for index information.
2016-11-09 12:15:44,074 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@6b0d80ed]
2016-11-09 12:15:44,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'addressRepo'
2016-11-09 12:15:44,076 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:44,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'tradeDetailRepo'
2016-11-09 12:15:44,076 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'tradeDetailRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#3cfdd820'
2016-11-09 12:15:44,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#928763c'
2016-11-09 12:15:44,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#928763c'
2016-11-09 12:15:44,077 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#928763c'
2016-11-09 12:15:44,078 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#3cfdd820'
2016-11-09 12:15:44,078 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#15f47664'
2016-11-09 12:15:44,078 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#15f47664'
2016-11-09 12:15:44,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,079 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'tradeDetailRepo'
2016-11-09 12:15:44,081 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@471a9022]
2016-11-09 12:15:44,100 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'tradeDetailRepo'
2016-11-09 12:15:44,100 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:44,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'invoiceRepo'
2016-11-09 12:15:44,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'invoiceRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,101 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2f666ebb'
2016-11-09 12:15:44,102 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#19976a65'
2016-11-09 12:15:44,104 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#19976a65'
2016-11-09 12:15:44,104 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#19976a65'
2016-11-09 12:15:44,104 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2f666ebb'
2016-11-09 12:15:44,105 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4b2c5e02'
2016-11-09 12:15:44,105 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4b2c5e02'
2016-11-09 12:15:44,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,106 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'invoiceRepo'
2016-11-09 12:15:44,131 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Invoice for index information.
2016-11-09 12:15:44,137 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@3eb91815]
2016-11-09 12:15:44,139 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'invoiceRepo'
2016-11-09 12:15:44,140 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'hedgeRepo'
2016-11-09 12:15:44,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'hedgeRepo'
2016-11-09 12:15:44,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'hedgeRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,140 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#102cec62'
2016-11-09 12:15:44,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#74f6c5d8'
2016-11-09 12:15:44,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#74f6c5d8'
2016-11-09 12:15:44,141 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#74f6c5d8'
2016-11-09 12:15:44,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#102cec62'
2016-11-09 12:15:44,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#34b9f960'
2016-11-09 12:15:44,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#34b9f960'
2016-11-09 12:15:44,142 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'hedgeRepo'
2016-11-09 12:15:44,143 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@43015c69]
2016-11-09 12:15:44,145 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'hedgeRepo'
2016-11-09 12:15:44,145 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) - Creating shared instance of singleton bean 'personRepo'
2016-11-09 12:15:44,145 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean 'personRepo'
2016-11-09 12:15:44,146 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:523) - Eagerly caching bean 'personRepo' to allow for resolving potential circular references
2016-11-09 12:15:44,146 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#4bbf6d0e'
2016-11-09 12:15:44,146 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#30b6ffe0'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name '(inner bean)#30b6ffe0'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#30b6ffe0'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#4bbf6d0e'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450) - Creating instance of bean '(inner bean)#2415fc55'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean '(inner bean)#2415fc55'
2016-11-09 12:15:44,147 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'mongoTemplate'
2016-11-09 12:15:44,148 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1614) - Invoking afterPropertiesSet() on bean with name 'personRepo'
2016-11-09 12:15:44,152 [main] DEBUG org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:122) - Analyzing class class com.celera.mongo.entity.Person for index information.
2016-11-09 12:15:44,154 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:117) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.mongodb.repository.support.SimpleMongoRepository@7ba8c737]
2016-11-09 12:15:44,156 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:478) - Finished creating instance of bean 'personRepo'
2016-11-09 12:15:44,157 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:701) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c3fdb62]
2016-11-09 12:15:44,157 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'lifecycleProcessor'
2016-11-09 12:15:44,158 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-11-09 12:15:44,159 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81) - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-11-09 12:15:44,159 [main] DEBUG org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103) - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-11-09 12:15:44,159 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:44,173 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:44,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:45,518 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12910, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=532, hedge=191, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$8,935, lastModified=Wed Nov 09 12:15:44 HKT 2016]
2016-11-09 12:15:45,518 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:45,519 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:45,519 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:45,519 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jun-16, tradeId=CELERAEQ-2016-12926, description=Listed HSCEI DEC16 8600 European Straddle REF 8,525 (JUN16), size=400, hedge=8, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$8,040, lastModified=Wed Nov 09 12:15:45 HKT 2016]
2016-11-09 12:15:45,520 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:45,521 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:45,521 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:45,523 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2b175c00
2016-11-09 12:15:45,558 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 16975.0, 16975.0
2016-11-09 12:15:47,168 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,170 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,170 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,175 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafa8a, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160059, invoice_date=09 July, 2016, account_number=CEL0007, due_date=09 August, 2016, amount_due=HK$16,975, description=October 2016 Brokerage Fee, amount=HK$16,975, key=UBS AG London Branch_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2b175c00, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=100, hedge=32, reference=Buyer - Celera Financial Limited - Martin, fee=HK$1,980, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,178 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,178 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,179 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@21680803
2016-11-09 12:15:47,180 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 1980.0, 1980.0
2016-11-09 12:15:47,295 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,295 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,296 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,296 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafa8d, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160003, invoice_date=09 March, 2016, account_number=CEL0013, due_date=09 April, 2016, amount_due=HK$1,980, description=October 2016 Brokerage Fee, amount=HK$1,980, key=Celera Financial Limited_HKD_0316, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_0316.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@21680803, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,296 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,297 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,297 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,297 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13114, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=42, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$567, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,297 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,298 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,298 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,298 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@26f143ed
2016-11-09 12:15:47,299 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 567.0, 567.0
2016-11-09 12:15:47,423 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,424 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,424 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,425 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafa90, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160141, invoice_date=09 October, 2016, account_number=CEL0009, due_date=09 November, 2016, amount_due=US$567, description=October 2016 Brokerage Fee, amount=US$567, key=Citigroup Global Markets Hong Kong Limited_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@26f143ed, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,425 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,425 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,425 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,426 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12875, description=Listed HSCEI JUN17 6000 European Put REF 8,250 (MAY16), size=100, hedge=14, reference=Seller - Celera Financial Limited - Martin, fee=HK$1,710, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,426 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,426 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,426 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,427 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1e34c607
2016-11-09 12:15:47,427 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 1710.0, 1710.0
2016-11-09 12:15:47,550 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,554 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafa93, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160048, invoice_date=09 June, 2016, account_number=CEL0013, due_date=09 July, 2016, amount_due=HK$1,710, description=October 2016 Brokerage Fee, amount=HK$1,710, key=Celera Financial Limited_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1e34c607, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,554 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,555 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,555 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,555 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=200, hedge=40, reference=Buyer - Thierry, fee=HK$3,600, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,556 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,556 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,556 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,556 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13093, description=Listed HSCEI SEP16 10000 European Call REF 10,075 (SEP16), size=200, hedge=116, reference=Seller - Thierry, fee=HK$4,740, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,558 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,558 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,561 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=200, hedge=36, reference=Seller - Thierry, fee=HK$3,540, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,561 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,570 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,570 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,572 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=500, hedge=85, reference=Seller - Thierry, fee=HK$8,775, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,572 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,572 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,573 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,573 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=300, hedge=78, reference=Seller - Thierry, fee=HK$5,670, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,574 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,574 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,575 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=300, hedge=84, reference=Seller - Thierry, fee=HK$5,760, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,575 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,575 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,575 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,576 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Buyer - Thierry, fee=HK$17,250, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,576 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,576 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,576 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,577 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13138, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Buyer - Thierry, fee=HK$17,250, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,577 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,577 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,577 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,578 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13139, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Buyer - Thierry, fee=HK$10,350, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,581 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,582 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,582 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,583 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=1200, hedge=3, reference=Seller - Thierry, fee=HK$18,045, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,583 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,583 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,584 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,584 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=1200, hedge=3, reference=Seller - Thierry, fee=HK$18,045, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,584 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,586 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,586 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,587 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4e406694
2016-11-09 12:15:47,587 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== THIERRY_HKD_OCT16, 94980.0, 113025.0
2016-11-09 12:15:47,628 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,629 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,629 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,630 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafaa0, company=Thierry, address=, attn=, sentTo=, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0030, due_date=09 November, 2016, amount_due=HK$113,025, description=October 2016 Brokerage Fee, amount=HK$113,025, key=Thierry_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4e406694, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,630 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,630 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,630 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,631 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=1600, hedge=40, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$19,680, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,631 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,631 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,631 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,632 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=400, hedge=56, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$5,472, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,632 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,632 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,632 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,633 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=200, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,520, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,633 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,633 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,633 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=300, hedge=4, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,648, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,634 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,634 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=500, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,000, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,648, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@26f1249d
2016-11-09 12:15:47,637 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 40968.0, 40968.0
2016-11-09 12:15:47,749 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,749 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,749 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,750 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafaa8, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160031, invoice_date=09 June, 2016, account_number=CEL0006, due_date=09 July, 2016, amount_due=HK$40,968, description=October 2016 Brokerage Fee, amount=HK$40,968, key=J.P. Morgan Securities PLC_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@26f1249d, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,750 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,750 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,750 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,751 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12804, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$421, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,751 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,751 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,751 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,751 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12814, description=Listed KS200 SEP16 215/270 1/-1 European Risk Reversal REF 248 (JUN16), size=400, hedge=48, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$859, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,752 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,752 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,756 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12815, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=600, hedge=50, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$868, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,756 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,756 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,756 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,757 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12816, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=25, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$434, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,757 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,757 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,757 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,758 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12847, description=Listed KS200 SEP16 220/270 1/-1 European Risk Reversal REF 248.50 (JUN16), size=200, hedge=28, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$432, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,758 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,759 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,759 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,759 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@19542407
2016-11-09 12:15:47,760 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 3014.0, 3014.0
2016-11-09 12:15:47,879 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,879 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,880 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,880 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafaaf, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160026, invoice_date=09 May, 2016, account_number=CEL0015, due_date=09 June, 2016, amount_due=US$3,014, description=October 2016 Brokerage Fee, amount=US$3,014, key=Morgan Stanley & Co. International PLC_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@19542407, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,881 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,881 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,881 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,881 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13151, description=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), size=300, hedge=50, reference=Seller - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$0, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,881 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,882 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,882 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,882 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13155, description=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), size=480, hedge=24, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$740, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,882 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,882 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,882 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,883 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13175, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=400, hedge=40, reference=Seller - Morgan Stanley & Co. International PLC - Sirus Pishvaie, fee=US$907, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,883 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,883 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,883 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,884 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13193, description=Listed KS200 DEC17 200 European Put REF 257 (DEC16), size=100, hedge=50, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$449, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,884 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,884 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,884 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,885 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4fcc529
2016-11-09 12:15:47,885 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 2096.0, 2096.0
2016-11-09 12:15:47,956 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:47,957 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:47,957 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,957 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f3327cb279e0bafab5, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160157, invoice_date=09 November, 2016, account_number=CEL0015, due_date=09 December, 2016, amount_due=US$2,096, description=October 2016 Brokerage Fee, amount=US$2,096, key=Morgan Stanley & Co. International PLC_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4fcc529, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,957 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,958 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,958 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=800, hedge=20, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$9,840, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,958 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,958 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,958 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,959 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=600, hedge=33, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$7,596, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,959 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,959 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,959 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,960 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=400, hedge=18, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$5,016, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,960 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,961 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=400, hedge=0, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$4,800, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,961 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:47,961 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:47,961 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,961 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12878, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$1,200, lastModified=Wed Nov 09 12:15:47 HKT 2016]
2016-11-09 12:15:47,961 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:47,962 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:47,962 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:47,962 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@381cad29
2016-11-09 12:15:47,963 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 28452.0, 28452.0
2016-11-09 12:15:48,064 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,065 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,065 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,065 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafabc, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160037, invoice_date=09 June, 2016, account_number=CEL0001, due_date=09 July, 2016, amount_due=HK$28,452, description=October 2016 Brokerage Fee, amount=HK$28,452, key=Nomura International Plc_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@381cad29, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,066 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,066 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,066 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,066 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13171, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=1000, hedge=40, reference=Seller - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$15,600, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,066 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,066 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,067 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,067 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=1000, hedge=410, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$21,150, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,067 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,067 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,067 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,068 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13181, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=300, hedge=123, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$6,345, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,068 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,068 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,068 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,069 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5bb3131b
2016-11-09 12:15:48,069 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== NH Investment & Securities Co Ltd, 43095.0, 43095.0
2016-11-09 12:15:48,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafac1, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=CEL-160158, invoice_date=09 November, 2016, account_number=CEL0024, due_date=09 December, 2016, amount_due=HK$43,095, description=October 2016 Brokerage Fee, amount=HK$43,095, key=NH Investment & Securities Co Ltd_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/NH Investment & Securities Co Ltd_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5bb3131b, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,158 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,158 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,159 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13019, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=465, hedge=85, reference=Buyer - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$1,814, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,159 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,159 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,159 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,160 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@11653e3b
2016-11-09 12:15:48,160 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 1814.0, 1814.0
2016-11-09 12:15:48,225 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafac4, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160087, invoice_date=09 September, 2016, account_number=CEL0011, due_date=09 October, 2016, amount_due=US$1,814, description=October 2016 Brokerage Fee, amount=US$1,814, key=Korea Investment & Securities Co Ltd_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@11653e3b, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,226 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,226 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12912, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$510, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,227 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,227 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,227 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,505, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,228 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,228 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12920, description=Listed HSCEI SEP16 8400 European Straddle REF 8,300 (JUN16), size=66, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$335, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,229 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,229 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=200, hedge=31, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,310, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,230 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,230 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12930, description=Listed HSI JUN16 21400/21600 European Call Spread REF 20,775 (JUN16), size=200, hedge=11, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,035, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,230 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,230 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,230 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,231 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12931, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=200, hedge=10, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,050, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,231 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,231 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,231 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,232 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=14, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,140, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,232 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,232 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,232 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,232 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12943, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=25, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$280, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,232 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1917d90f
2016-11-09 12:15:48,236 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Eclipse Futures (HK) Limited, 8165.0, 8165.0
2016-11-09 12:15:48,315 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,316 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,316 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,316 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0baface, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160056, invoice_date=09 July, 2016, account_number=CEL0008, due_date=09 August, 2016, amount_due=HK$8,165, description=October 2016 Brokerage Fee, amount=HK$8,165, key=Eclipse Futures (HK) Limited_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1917d90f, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,317 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,317 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=200, hedge=11, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,110, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,318 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,318 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=100, hedge=12, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,120, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,318 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,318 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,318 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,319 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=100, hedge=20, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,400, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,319 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,319 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,319 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,319 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13100, description=Listed HSCEI MAR17 7000/8000 2/-1 European Put Ratio REF 9,700 (SEP16), size=75, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$700, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,320 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,320 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,320 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,320 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=53, hedge=9, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,150, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,320 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,320 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,321 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,321 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=99, hedge=1, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$874, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,321 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,321 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,349 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=50, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,000, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,349 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,350 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,350 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,351 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4078695f
2016-11-09 12:15:48,351 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== VIVIENNE COURT TRADING PTY LTD_HKD_OCT16, 11414.0, 11354.0
2016-11-09 12:15:48,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafad7, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0004, due_date=09 November, 2016, amount_due=HK$11,354, description=October 2016 Brokerage Fee, amount=HK$11,354, key=Vivienne Court Trading Pty Ltd_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4078695f, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12955, description=Listed KS200 DEC17 260/290 1/-2 European Call Ratio REF 245 (SEP16), size=300, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$426, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@48c4245d
2016-11-09 12:15:48,385 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 426.0, 426.0
2016-11-09 12:15:48,495 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,495 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,496 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,497 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafada, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160068, invoice_date=09 August, 2016, account_number=CEL0006, due_date=09 September, 2016, amount_due=US$426, description=October 2016 Brokerage Fee, amount=US$426, key=J.P. Morgan Securities PLC_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@48c4245d, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,497 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,497 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,498 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,275, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,499 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,499 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,499 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,500 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=400, hedge=116, reference=Seller - Société Générale (HK) Limited - David Bruchet, fee=HK$2,498, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,500 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,501 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,501 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,502 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@529cfee5
2016-11-09 12:15:48,503 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 3773.0, 3773.0
2016-11-09 12:15:48,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafade, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160046, invoice_date=09 June, 2016, account_number=CEL0018, due_date=09 July, 2016, amount_due=HK$3,773, description=October 2016 Brokerage Fee, amount=HK$3,773, key=Société Générale (HK) Limited_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@529cfee5, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12891, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=US$610, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,601 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,601 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@77bd7fe7
2016-11-09 12:15:48,602 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 610.0, 610.0
2016-11-09 12:15:48,659 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,659 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,660 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,660 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafae1, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160045, invoice_date=09 June, 2016, account_number=CEL0018, due_date=09 July, 2016, amount_due=US$610, description=October 2016 Brokerage Fee, amount=US$610, key=Société Générale (HK) Limited_KRW_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@77bd7fe7, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,660 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,661 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,661 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,661 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=1000, hedge=50, reference=Seller - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$21,000, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,661 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,661 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,662 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,662 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=1000, hedge=40, reference=Seller - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$20,800, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,662 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,662 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,663 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,663 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$2,000, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,663 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,663 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,664 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,664 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=1000, hedge=0, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$20,000, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,664 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,664 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,664 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,665 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=3200, hedge=32, reference=Buyer - Daishin Securities Co., Ltd. - Jongwon Lee, fee=HK$64,640, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,665 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,666 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,666 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,666 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@51b1a8f6
2016-11-09 12:15:48,667 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Daishin Securities Co., Ltd., 128440.0, 128440.0
2016-11-09 12:15:48,742 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,743 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,743 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,744 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafae8, company=Daishin Securities Co., Ltd., address=, attn=, sentTo=leejw81@daishin.com;songjy@daishin.com, invoice_number=CEL-160108, invoice_date=09 September, 2016, account_number=CEL0022, due_date=09 October, 2016, amount_due=HK$128,440, description=October 2016 Brokerage Fee, amount=HK$128,440, key=Daishin Securities Co., Ltd._HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Daishin Securities Co., Ltd._HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@51b1a8f6, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,744 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,745 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,745 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,746 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=50, hedge=8, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$870, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,746 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,746 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,746 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@476a736d
2016-11-09 12:15:48,748 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 870.0, 870.0
2016-11-09 12:15:48,810 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,811 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,811 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,812 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafaeb, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160001, invoice_date=09 March, 2016, account_number=CEL0005, due_date=09 April, 2016, amount_due=HK$870, description=October 2016 Brokerage Fee, amount=HK$870, key=Liquid Capital Australia Pty Ltd._HKD_0316, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0316.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@476a736d, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,812 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,812 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,812 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,813 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12799, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=600, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$472, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,814 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,814 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,814 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,815 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12801, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 243.50 (JUN16), size=600, hedge=56, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$474, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,815 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,815 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,816 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,816 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12808, description=Listed KS200 JUL16 245 European Call REF 243 (JUN16), size=100, hedge=46, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=US$239, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,816 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,817 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,817 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,818 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12813, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248 (JUN16), size=300, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$350, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,818 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,818 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,818 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,819 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12816, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=25, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$244, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,819 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,819 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,819 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,819 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12824, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$359, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,820 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,820 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,820 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,820 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Apr-16, tradeId=CELERAEQ-2016-12849, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$352, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,820 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,821 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,821 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,822 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@b18c4
2016-11-09 12:15:48,822 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 2490.0, 2490.0
2016-11-09 12:15:48,888 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:48,888 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:48,888 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,889 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f4327cb279e0bafaf4, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160023, invoice_date=09 May, 2016, account_number=CEL0014, due_date=09 June, 2016, amount_due=US$2,490, description=October 2016 Brokerage Fee, amount=US$2,490, key=BNP Paribas Arbitrage S.N.C_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@b18c4, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,889 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,889 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,889 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,890 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=125, hedge=7, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,980, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,890 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,890 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,890 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,890 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=200, hedge=10, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,150, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,893 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,893 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,893 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,894 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12869, description=Listed HSCEI DEC17 6400/8400 -2/1 European Put Ratio REF 8,400 (MAY16), size=171, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,625, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,894 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,894 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,894 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,895 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12872, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=200, hedge=14, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,210, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,895 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,895 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,895 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,896 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=150, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,280, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,896 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,896 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,896 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,897 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12881, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,275 (MAY16), size=75, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,155, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,897 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:48,897 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:48,897 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,898 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=150, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,128, lastModified=Wed Nov 09 12:15:48 HKT 2016]
2016-11-09 12:15:48,898 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:48,899 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:48,899 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:48,900 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3c6aa04a
2016-11-09 12:15:48,900 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 16528.0, 16528.0
2016-11-09 12:15:49,001 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,001 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,001 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,002 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafafd, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160032, invoice_date=09 June, 2016, account_number=CEL0005, due_date=09 July, 2016, amount_due=HK$16,528, description=October 2016 Brokerage Fee, amount=HK$16,528, key=Liquid Capital Australia Pty Ltd._HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3c6aa04a, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,002 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,002 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,002 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,004 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=100, hedge=24, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,860, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,005 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,005 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,005 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,006 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=300, hedge=13, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$4,695, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,006 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,006 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,007 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,007 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=300, hedge=72, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$5,580, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,007 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,008 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,008 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,008 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=300, hedge=15, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$4,725, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,008 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,009 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,009 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,009 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13025, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=16, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,240, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,010 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,010 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,010 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,011 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13029, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=16, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,240, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,011 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,011 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,011 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,012 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=17, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,255, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,012 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,012 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,012 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,013 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=200, hedge=38, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,570, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,013 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,014 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,014 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,015 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4bb003e9
2016-11-09 12:15:49,016 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== KOREA INVESTMENT & SECURITIES CO LTD_HKD_SEP16, 33885.0, 30165.0
2016-11-09 12:15:49,036 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,037 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,037 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,037 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb07, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0011, due_date=09 October, 2016, amount_due=HK$30,165, description=October 2016 Brokerage Fee, amount=HK$30,165, key=Korea Investment & Securities Co Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4bb003e9, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,037 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,038 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,038 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,038 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12838, description=Listed HSCEI DEC16/JUN17 6000 European Put Time Spread REF 9,275 (APR16), size=200, hedge=8, reference=Buyer - Celera Financial Limited - Martin, fee=HK$3,060, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,038 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,038 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,038 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,039 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Apr-16, tradeId=CELERAEQ-2016-12850, description=Listed HSCEI MAY16 Futures, size=4, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$60, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,039 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,039 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,039 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12856, description=Listed HSCEI MAY16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$150, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,039 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,039 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,040 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,040 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12856, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=8, hedge=0, reference=Buyer - Celera Financial Limited - Martin, fee=HK$150, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,040 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,040 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,040 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,041 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@359ff4d9
2016-11-09 12:15:49,041 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== CELERA FINANCIAL LIMITED_HKD_MAY16, 3270.0, 3420.0
2016-11-09 12:15:49,060 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,061 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,061 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,062 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb0d, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0013, due_date=09 June, 2016, amount_due=HK$3,420, description=October 2016 Brokerage Fee, amount=HK$3,420, key=Celera Financial Limited_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@359ff4d9, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,062 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,062 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,063 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,063 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=300, hedge=9, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$5,119, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,063 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,064 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,064 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,064 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Buyer - UBS AG London Branch - David Best, fee=HK$3,636, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,064 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,064 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,065 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,065 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=400, hedge=164, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$9,825, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,065 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,066 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,066 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=200, hedge=12, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,500, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,066 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,066 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,066 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,067 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13195, description=Listed HSCEI DEC17 9600 European Straddle REF 9,575 (NOV16), size=66, hedge=1, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$995, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,067 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,068 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,068 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,068 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@41b0ae4c
2016-11-09 12:15:49,069 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 31075.0, 31075.0
2016-11-09 12:15:49,123 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,123 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,123 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,124 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb14, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160165, invoice_date=09 November, 2016, account_number=CEL0007, due_date=09 December, 2016, amount_due=HK$31,075, description=October 2016 Brokerage Fee, amount=HK$31,075, key=UBS AG London Branch_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@41b0ae4c, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,124 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,124 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,124 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Jun-16, tradeId=CELERAEQ-2016-12937, description=Listed KS200 DEC16 220 European Put REF 240 (SEP16), size=100, hedge=22, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$769, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,125 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,125 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,125 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2875b016
2016-11-09 12:15:49,125 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 769.0, 769.0
2016-11-09 12:15:49,222 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,223 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,223 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,224 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb17, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160058, invoice_date=09 July, 2016, account_number=CEL0007, due_date=09 August, 2016, amount_due=US$769, description=October 2016 Brokerage Fee, amount=US$769, key=UBS AG London Branch_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2875b016, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,224 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12886, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$1,535, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,226 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,226 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1eb2d371
2016-11-09 12:15:49,228 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 1535.0, 1535.0
2016-11-09 12:15:49,279 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,279 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,279 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,280 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb1a, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160038, invoice_date=09 June, 2016, account_number=CEL0007, due_date=09 July, 2016, amount_due=US$1,535, description=October 2016 Brokerage Fee, amount=US$1,535, key=UBS AG London Branch_KRW_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1eb2d371, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,280 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,280 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,280 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,281 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Jun-16, tradeId=CELERAEQ-2016-12892, description=Listed KS200 DEC17 190/220 -2/1 European Put Ratio REF 242.50 (JUN16), size=300, hedge=0, reference=Seller - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,281 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,281 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,281 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,281 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@664e5dee
2016-11-09 12:15:49,298 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,298 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,299 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,299 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb1d, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0015, due_date=09 August, 2016, amount_due=US$0, description=October 2016 Brokerage Fee, amount=US$0, key=Morgan Stanley & Co. International PLC_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@664e5dee, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,299 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,300 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,300 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,300 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12886, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$819, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,300 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,300 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,301 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,301 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12887, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$819, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,301 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,301 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,301 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,302 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12890, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$407, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,302 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,303 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,303 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,304 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3d6a6bee
2016-11-09 12:15:49,304 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== MORGAN STANLEY & CO. INTERNATIONAL PLC_USD_JUN16, 2451.0, 2045.0
2016-11-09 12:15:49,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,321 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,322 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb22, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0015, due_date=09 July, 2016, amount_due=US$2,045, description=October 2016 Brokerage Fee, amount=US$2,045, key=Morgan Stanley & Co. International PLC_KRW_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3d6a6bee, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12798, description=Listed HSCEI SEP16 8800 European Straddle REF 8,625 (APR16), size=100, hedge=8, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$1,370, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12807, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=200, hedge=78, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$4,390, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12812, description=Listed HSCEI SEP16 7000/8400 -2/1 European Put Ratio REF 9,200 (APR16), size=300, hedge=10, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$6,050, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,280, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$8,280, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4e73b552
2016-11-09 12:15:49,327 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== UBS AG LONDON BRANCH_HKD_MAY16, 17760.0, 31370.0
2016-11-09 12:15:49,344 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,345 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,345 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,346 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb29, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0007, due_date=09 June, 2016, amount_due=HK$31,370, description=October 2016 Brokerage Fee, amount=HK$31,370, key=UBS AG London Branch_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4e73b552, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,346 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,346 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,346 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,347 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13089, description=Listed KS200 MAR17 210 European Put REF 263 (DEC16), size=200, hedge=20, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,203, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,347 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,347 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,347 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,348 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13091, description=Listed KS200 DEC16 260 European Straddle REF 262.50 (DEC16), size=800, hedge=48, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$2,402, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,348 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,348 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,348 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,348 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13106, description=Listed KS200 NOV16/MAR17 260 -1/1 European Straddle Time Spread REF 253.50 (DEC16), size=400, hedge=65, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,348 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,349 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,349 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,349 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13117, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$567, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,349 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,350 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,350 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,350 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13120, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=400, hedge=84, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,350 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,350 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,350 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,350 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13122, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=200, hedge=42, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$573, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,351 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13124, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=300, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,723, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,351 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,352 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13128, description=Listed KS200 NOV16 235/255 -2/1 European Put Ratio REF 260 (DEC16), size=600, hedge=48, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,352 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,354 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,354 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,355 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7afb1741
2016-11-09 12:15:49,356 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 6468.0, 6468.0
2016-11-09 12:15:49,419 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,419 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,419 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,420 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb33, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160127, invoice_date=09 October, 2016, account_number=CEL0003, due_date=09 November, 2016, amount_due=US$6,468, description=October 2016 Brokerage Fee, amount=US$6,468, key=Optiver Australia Pty Ltd_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7afb1741, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,420 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,420 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,420 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,420 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13190, description=Listed HSCEI DEC16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$150, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,421 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13194, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=100, hedge=24, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$1,860, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,421 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,422 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@71d8cfe7
2016-11-09 12:15:49,422 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 2010.0, 2010.0
2016-11-09 12:15:49,462 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,462 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,462 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,463 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb37, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160148, invoice_date=09 November, 2016, account_number=CEL0013, due_date=09 December, 2016, amount_due=HK$2,010, description=October 2016 Brokerage Fee, amount=HK$2,010, key=Celera Financial Limited_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@71d8cfe7, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,463 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,463 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,463 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,464 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Feb-16, tradeId=CELERAEQ-2016-12787, description=Listed SPX JUN16 2150 European Call REF 2,115 (MAR16), size=200, hedge=80, reference=Seller - Thierry, fee=US$2, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,464 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,464 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,464 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,465 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@62db0521
2016-11-09 12:15:49,484 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,484 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,484 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,485 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb3a, company=Thierry, address=, attn=, sentTo=, invoice_number=, invoice_date=09 March, 2016, account_number=CEL0030, due_date=09 April, 2016, amount_due=US$2, description=October 2016 Brokerage Fee, amount=US$2, key=Thierry_USD_0316, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_USD_0316.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@62db0521, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,485 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,485 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,485 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,485 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=100, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$408, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,485 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,486 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,486 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,486 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=500, hedge=15, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,725, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,486 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,487 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,487 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,487 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=232, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,585, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,487 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,487 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12950, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=134, hedge=4, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,070, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,488 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,488 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12959, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,775 (JUL16), size=625, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$9,450, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,488 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,489 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,489 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=875, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$13,125, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,489 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,489 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,489 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12974, description=Listed HSCEI DEC17 7200/10800 1/-1 European Risk Reversal REF 9,025 (JUL16), size=50, hedge=12, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$930, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=77, hedge=17, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,410, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=100, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,575, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,491 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=200, hedge=18, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,270, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,492 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,492 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=100, hedge=26, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,890, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,492 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,493 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,493 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=50, hedge=2, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$780, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,493 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,493 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,493 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,494 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1d540566
2016-11-09 12:15:49,494 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 46218.0, 46218.0
2016-11-09 12:15:49,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,548 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb48, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160072, invoice_date=09 August, 2016, account_number=CEL0003, due_date=09 September, 2016, amount_due=HK$46,218, description=October 2016 Brokerage Fee, amount=HK$46,218, key=Optiver Australia Pty Ltd_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1d540566, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,548 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=100, hedge=39, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,085, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,549 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,549 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,549 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,550 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=49, hedge=19, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,020, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,550 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=150, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,250, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,550 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,551 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=150, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,250, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,551 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12837, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Seller - Liquid Capital Australia Pty Ltd. - Rami Sadi, fee=HK$3,840, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,551 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,552 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12838, description=Listed HSCEI DEC16/JUN17 6000 European Put Time Spread REF 9,275 (APR16), size=200, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,060, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,552 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12840, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,340, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,552 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12841, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,340, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,553 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12844, description=Listed HSCEI SEP16 8800/9600 1/-1 European Risk Reversal REF 9,075 (APR16), size=104, hedge=41, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,175, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,553 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12851, description=Listed HSCEI DEC17 12000/13800 European Call Spread REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$780, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,553 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,554 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,554 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$780, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,554 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,554 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,554 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,554 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12853, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,554 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,555 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,555 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,555 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@53a9fcfd
2016-11-09 12:15:49,555 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== LIQUID CAPITAL AUSTRALIA PTY LTD._HKD_MAY16, 19890.0, 22920.0
2016-11-09 12:15:49,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,574 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,574 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,575 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb56, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0005, due_date=09 June, 2016, amount_due=HK$22,920, description=October 2016 Brokerage Fee, amount=HK$22,920, key=Liquid Capital Australia Pty Ltd._HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@53a9fcfd, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,575 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,575 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,575 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,576 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=200, hedge=28, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,420, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,576 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=500, hedge=28, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,112, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,576 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,577 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=90, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$1,425, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,577 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,577 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,577 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,577 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12866, description=Listed HSCEI DEC17 8800/11200/13800 1/-2/1 European Call Butterfly REF 8,375 (MAY16), size=400, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$6,300, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,577 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,577 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,578 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,578 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12873, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=400, hedge=28, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,712, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,578 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,578 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,578 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,578 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12874, description=Listed HSCEI JUN17 6000 European Put REF 8,250 (MAY16), size=100, hedge=14, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,420, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,579 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,000, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,579 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,579 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=450, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$6,840, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,580 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12882, description=Listed HSCEI SEP16 8200 European Straddle REF 8,275 (MAY16), size=50, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$780, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,580 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,581 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12884, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=750, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$11,400, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,581 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,581 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,581 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,581 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=200, hedge=88, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,320, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,582 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,582 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,582 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,582 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12889, description=Listed HSCEI JUN16/DEC16 8000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=8, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,120, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,582 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,583 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,583 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,583 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@62573c86
2016-11-09 12:15:49,584 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 47849.0, 47849.0
2016-11-09 12:15:49,659 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,659 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,660 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,660 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb64, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160034, invoice_date=09 June, 2016, account_number=CEL0003, due_date=09 July, 2016, amount_due=HK$47,849, description=October 2016 Brokerage Fee, amount=HK$47,849, key=Optiver Australia Pty Ltd_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@62573c86, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,660 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,660 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,660 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,661 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12961, description=Listed KS200 MAR17 210/280 1/-1 European Risk Reversal REF 250 (SEP16), size=500, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,365, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,661 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,661 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,661 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,662 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@687e4c93
2016-11-09 12:15:49,662 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 1365.0, 1365.0
2016-11-09 12:15:49,703 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,704 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,704 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,704 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb67, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160071, invoice_date=09 August, 2016, account_number=CEL0003, due_date=09 September, 2016, amount_due=US$1,365, description=October 2016 Brokerage Fee, amount=US$1,365, key=Optiver Australia Pty Ltd_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@687e4c93, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,704 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,705 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,705 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,705 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=800, hedge=32, reference=Buyer - Thierry, fee=HK$12,480, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,705 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,705 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,705 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,706 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=460, hedge=23, reference=Buyer - Thierry, fee=HK$7,245, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,706 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,706 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,706 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,707 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=800, hedge=20, reference=Buyer - Thierry, fee=HK$12,300, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,707 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,707 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,707 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13035, description=Listed HSCEI JUN17 9600 European Straddle REF 9,725 (AUG16), size=200, hedge=8, reference=Buyer - Thierry, fee=HK$3,120, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,707 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,708 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,708 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=800, hedge=0, reference=Buyer - Thierry, fee=HK$12,000, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,708 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,708 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,708 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,708 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=400, hedge=4, reference=Seller - Thierry, fee=HK$6,060, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,709 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,709 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,709 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,709 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@73d4066e
2016-11-09 12:15:49,709 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 53205.0, 53205.0
2016-11-09 12:15:49,765 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,766 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb6f, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160104, invoice_date=09 September, 2016, account_number=CEL0030, due_date=09 October, 2016, amount_due=HK$53,205, description=October 2016 Brokerage Fee, amount=HK$53,205, key=Thierry_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@73d4066e, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,767 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=96, hedge=11, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=51, hedge=19, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=150, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=94, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=200, hedge=71, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=200, hedge=68, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,771 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=96, hedge=12, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,771 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,772 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12935, description=Listed HSCEI DEC16 9000/10400 European Call Spread REF 8,325 (JUN16), size=120, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,772 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,772 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,772 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,772 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=31, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,772 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,772 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,773 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,773 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@65c33b92
2016-11-09 12:15:49,787 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,788 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,788 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,789 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb7a, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0012, due_date=09 August, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, key=Liquid Capital Hong Kong Limited_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@65c33b92, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,789 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,790 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,790 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,790 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=125, hedge=6, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,834, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,790 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,791 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,791 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,791 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13170, description=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,792 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,792 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,792 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13195, description=Listed HSCEI DEC17 9600 European Straddle REF 9,575 (NOV16), size=66, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$938, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,793 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,793 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,793 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13197, description=Listed HSCEI DEC16 8800/9600 -1.5/1 European Put Ratio REF 9,575 (NOV16), size=250, hedge=20, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,780, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,794 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,794 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,794 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,794 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@30e9ca13
2016-11-09 12:15:49,795 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 7266.0, 7266.0
2016-11-09 12:15:49,835 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,836 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,836 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,836 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb80, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160155, invoice_date=09 November, 2016, account_number=CEL0005, due_date=09 December, 2016, amount_due=HK$7,266, description=October 2016 Brokerage Fee, amount=HK$7,266, key=Liquid Capital Australia Pty Ltd._HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@30e9ca13, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,837 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,837 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,837 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,837 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12805, description=Listed HSCEI DEC17 9600/11600 1/-2 European Call Ratio REF 8,600 (APR16), size=165, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,052, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,838 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,838 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,838 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,838 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=459, hedge=179, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,656, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,838 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,839 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,839 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,839 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Apr-16, tradeId=CELERAEQ-2016-12817, description=Listed HSCEI JUN16 8600/10000 1/1 European Strangle REF 9,100 (APR16), size=52, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$696, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,839 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,839 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,839 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,840 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=340, hedge=17, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$4,284, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,840 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,840 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,840 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,840 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,072, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,841 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,841 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,841 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,841 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,841 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,841 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,842 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,842 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=600, hedge=168, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$5,789, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,842 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,842 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,842 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,843 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,144, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,843 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,843 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,844 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,844 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@66273da0
2016-11-09 12:15:49,845 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 35693.0, 35693.0
2016-11-09 12:15:49,887 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,887 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,887 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,888 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb8a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160018, invoice_date=09 May, 2016, account_number=CEL0006, due_date=09 June, 2016, amount_due=HK$35,693, description=October 2016 Brokerage Fee, amount=HK$35,693, key=J.P. Morgan Securities PLC_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@66273da0, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,888 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,888 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,888 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,889 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12794, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$238, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,889 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,889 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,889 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,890 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4d95a72e
2016-11-09 12:15:49,890 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 238.0, 238.0
2016-11-09 12:15:49,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb8d, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160007, invoice_date=09 April, 2016, account_number=CEL0014, due_date=09 May, 2016, amount_due=US$238, description=October 2016 Brokerage Fee, amount=US$238, key=BNP Paribas Arbitrage S.N.C_KRW_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4d95a72e, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,927 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,927 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,927 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13033, description=Listed HSCEI MAR17 7800 European Put REF 9,725 (AUG16), size=100, hedge=13, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$2,260, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,928 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13070, description=Listed HSCEI DEC17 5000 European Put REF 9,550 (SEP16), size=200, hedge=10, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$4,200, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,928 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,929 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@350d3f4d
2016-11-09 12:15:49,929 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== HMC Investment, 6460.0, 6460.0
2016-11-09 12:15:49,982 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:49,982 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:49,983 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,983 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f5327cb279e0bafb91, company=HMC Investment, address=, attn=, sentTo=0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com, invoice_number=CEL-160109, invoice_date=09 September, 2016, account_number=CEL0023, due_date=09 October, 2016, amount_due=HK$6,460, description=October 2016 Brokerage Fee, amount=HK$6,460, key=HMC Investment_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/HMC Investment_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@350d3f4d, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,984 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,984 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,984 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,986 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=450, hedge=3, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$6,795, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,996 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,997 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,997 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,997 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13167, description=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), size=300, hedge=33, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$4,995, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,997 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:49,997 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:49,997 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,998 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13182, description=Listed HSCEI JUN17 9600/10400 European Call Spread REF 9,850 (OCT16), size=400, hedge=36, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$6,540, lastModified=Wed Nov 09 12:15:49 HKT 2016]
2016-11-09 12:15:49,998 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:49,998 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:49,998 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:49,999 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@52f57666
2016-11-09 12:15:49,999 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Mirae Asset Securities Co. Ltd, 18330.0, 18330.0
2016-11-09 12:15:50,051 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,051 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,051 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,052 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafb96, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160156, invoice_date=09 November, 2016, account_number=CEL0019, due_date=09 December, 2016, amount_due=HK$18,330, description=October 2016 Brokerage Fee, amount=HK$18,330, key=Mirae Asset Securities Co. Ltd_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Mirae Asset Securities Co. Ltd_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@52f57666, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,052 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,052 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,052 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,052 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12833, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$825, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,052 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,052 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,053 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,053 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12847, description=Listed KS200 SEP16 220/270 1/-1 European Risk Reversal REF 248.50 (JUN16), size=200, hedge=28, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$810, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,053 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,053 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,053 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,053 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@29a98d9f
2016-11-09 12:15:50,054 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 1635.0, 1635.0
2016-11-09 12:15:50,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,108 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,108 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,109 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafb9a, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160019, invoice_date=09 May, 2016, account_number=CEL0007, due_date=09 June, 2016, amount_due=US$1,635, description=October 2016 Brokerage Fee, amount=US$1,635, key=UBS AG London Branch_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@29a98d9f, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,109 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Oct-16, tradeId=CELERAEQ-2016-13162, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=300, hedge=120, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$2,553, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,110 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Oct-16, tradeId=CELERAEQ-2016-13161, description=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), size=200, hedge=30, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$1,708, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,110 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,110 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,110 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,110 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13173, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=600, hedge=93, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$2,561, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,111 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13174, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=400, hedge=62, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$1,708, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,111 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,111 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13179, description=Listed KS200 DEC17 240/260 European Put Spread REF 258.50 (DEC16), size=224, hedge=20, reference=Buyer - UBS AG London Branch - Suhail Patel, fee=US$957, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,112 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13187, description=Listed KS200 JUN17 240/270 1/-1 European Risk Reversal REF 255 (DEC16), size=600, hedge=174, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$2,534, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,112 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,112 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4d18b73a
2016-11-09 12:15:50,113 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 12021.0, 12021.0
2016-11-09 12:15:50,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafba2, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160164, invoice_date=09 November, 2016, account_number=CEL0007, due_date=09 December, 2016, amount_due=US$12,021, description=October 2016 Brokerage Fee, amount=US$12,021, key=UBS AG London Branch_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4d18b73a, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=1000, hedge=95, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$13,140, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13153, description=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=27, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,724, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=1500, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$18,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=1000, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$12,060, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=60, hedge=3, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$756, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=500, hedge=30, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$6,360, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,155 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@54db056b
2016-11-09 12:15:50,155 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 53280.0, 53280.0
2016-11-09 12:15:50,195 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,196 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,196 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,197 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbaa, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160154, invoice_date=09 November, 2016, account_number=CEL0006, due_date=09 December, 2016, amount_due=HK$53,280, description=October 2016 Brokerage Fee, amount=HK$53,280, key=J.P. Morgan Securities PLC_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@54db056b, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,197 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,198 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,198 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,198 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=200, hedge=2, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,030, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,199 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,199 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,199 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,199 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,575, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,200 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,200 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,200 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,200 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=100, hedge=18, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,770, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,201 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,201 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,201 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13006, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,250 (AUG16), size=108, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,725, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,201 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,201 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,202 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,202 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=100, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,055, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,202 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,202 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,202 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=300, hedge=72, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,580, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,203 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=200, hedge=38, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,570, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,203 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=304, hedge=38, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,130, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,204 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,204 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,204 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=780, hedge=13, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$11,895, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,205 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=400, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,300, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,205 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=158, hedge=30, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,820, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,206 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,150, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13025, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=320, hedge=8, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,312, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13029, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=100, hedge=8, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,620, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=306, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,980, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,210 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,210 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,210 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=100, hedge=19, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,785, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,210 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,210 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,210 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,211 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13033, description=Listed HSCEI MAR17 7800 European Put REF 9,725 (AUG16), size=100, hedge=13, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,695, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,211 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=400, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,211 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,212 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=100, hedge=39, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,085, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,212 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,212 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=1000, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$15,150, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,212 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,213 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13069, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,115, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,213 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13070, description=Listed HSCEI DEC17 5000 European Put REF 9,550 (SEP16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,150, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,213 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,214 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,214 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,214 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@600f5704
2016-11-09 12:15:50,215 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== OPTIVER AUSTRALIA PTY LTD_HKD_SEP16, 98287.0, 96712.0
2016-11-09 12:15:50,232 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbc5, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0003, due_date=09 October, 2016, amount_due=HK$96,712, description=October 2016 Brokerage Fee, amount=HK$96,712, key=Optiver Australia Pty Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@600f5704, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=300, hedge=36, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$5,040, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13140, description=Listed HSCEI SEP16 9600/9800 European Put Spread REF 9,625 (SEP16), size=200, hedge=34, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$3,510, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,236 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Sep-16, tradeId=CELERAEQ-2016-13141, description=Listed HSCEI SEP16 9600/9800 European Call Spread REF 9,600 (SEP16), size=200, hedge=37, reference=Seller - Mirae Asset Securities Co. Ltd - Sungwon Hwang, fee=HK$3,555, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,238 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2149594a
2016-11-09 12:15:50,253 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,253 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,253 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,254 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbca, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0019, due_date=09 November, 2016, amount_due=HK$12,105, description=October 2016 Brokerage Fee, amount=HK$12,105, key=Mirae Asset Securities Co. Ltd_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Mirae Asset Securities Co. Ltd_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2149594a, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,254 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,254 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,254 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,254 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=200, hedge=6, reference=Seller - Deutsche Bank AG London Branch - Payton Ong, fee=HK$3,090, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,254 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,255 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,255 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,255 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5a50d9fc
2016-11-09 12:15:50,255 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Deutsche Bank AG London Branch, 3090.0, 3090.0
2016-11-09 12:15:50,289 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,290 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbcd, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160150, invoice_date=09 November, 2016, account_number=CEL0002, due_date=09 December, 2016, amount_due=HK$3,090, description=October 2016 Brokerage Fee, amount=HK$3,090, key=Deutsche Bank AG London Branch_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Deutsche Bank AG London Branch_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5a50d9fc, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,290 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13076, description=Listed HSI JUN17 25000 European Call REF 23,175 (SEP16), size=100, hedge=31, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$1,965, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,290 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,291 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=300, hedge=0, reference=Buyer - Deutsche Bank AG London Branch - James Quinn, fee=HK$4,500, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,291 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=1000, hedge=150, reference=Seller - Deutsche Bank AG London Branch - James Quinn, fee=HK$17,250, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,291 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,292 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,292 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@414f13fc
2016-11-09 12:15:50,292 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Deutsche Bank AG London Branch, 23715.0, 23715.0
2016-11-09 12:15:50,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbd2, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160145, invoice_date=09 October, 2016, account_number=CEL0002, due_date=09 November, 2016, amount_due=HK$23,715, description=October 2016 Brokerage Fee, amount=HK$23,715, key=Deutsche Bank AG London Branch_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Deutsche Bank AG London Branch_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@414f13fc, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13003, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=112, hedge=5, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=33, hedge=6, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=100, hedge=5, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=50, hedge=11, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=26, hedge=10, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,334 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,335 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4b31a708
2016-11-09 12:15:50,350 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,351 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,351 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,351 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbda, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0012, due_date=09 October, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, key=Liquid Capital Hong Kong Limited_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4b31a708, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,351 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,352 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,352 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,352 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13026, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=10, reference=Seller - Samsung Securities Co., Ltd - Jiman Park, fee=HK$4,400, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,352 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,352 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,352 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,352 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3ebe4ccc
2016-11-09 12:15:50,353 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== SAMSUNG SECURITIES CO., LTD_HKD_SEP16, 4200.0, 4400.0
2016-11-09 12:15:50,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,366 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,367 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbdd, company=Samsung Securities Co., Ltd, address=, attn=82220208426, sentTo=youngja.yoon@samsung.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0026, due_date=09 October, 2016, amount_due=HK$4,400, description=October 2016 Brokerage Fee, amount=HK$4,400, key=Samsung Securities Co., Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Samsung Securities Co., Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3ebe4ccc, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12893, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=1000, hedge=100, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,533, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12894, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=400, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$613, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12895, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=600, hedge=60, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$920, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,370 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@28237492
2016-11-09 12:15:50,370 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 3066.0, 3066.0
2016-11-09 12:15:50,411 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,411 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbe2, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160064, invoice_date=09 July, 2016, account_number=CEL0018, due_date=09 August, 2016, amount_due=US$3,066, description=October 2016 Brokerage Fee, amount=US$3,066, key=Société Générale (HK) Limited_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@28237492, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,412 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,412 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,413 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=51, hedge=19, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,413 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,413 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,413 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,413 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13100, description=Listed HSCEI MAR17 7000/8000 2/-1 European Put Ratio REF 9,700 (SEP16), size=75, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,050, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,414 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13102, description=Listed HSCEI SEP16/DEC16 Future Spread REF 9,713 (SEP16), size=28, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$112, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,414 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,415 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=100, hedge=17, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,638, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,415 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=28, hedge=7, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$490, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,415 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,416 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=100, hedge=15, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,610, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,416 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,416 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,416 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,417 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7f9fc8bd
2016-11-09 12:15:50,417 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Hong Kong Limited, 4900.0, 4900.0
2016-11-09 12:15:50,454 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,454 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,455 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,455 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbea, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160126, invoice_date=09 October, 2016, account_number=CEL0012, due_date=09 November, 2016, amount_due=HK$4,900, description=October 2016 Brokerage Fee, amount=HK$4,900, key=Liquid Capital Hong Kong Limited_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7f9fc8bd, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,455 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,455 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,455 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,455 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=104, hedge=12, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,368, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,456 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=81, hedge=30, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,920, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,456 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=160, hedge=2, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,300, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,456 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,457 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12935, description=Listed HSCEI DEC16 9000/10400 European Call Spread REF 8,325 (JUN16), size=120, hedge=15, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,590, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,457 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=28, hedge=4, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$600, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,457 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,457 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12943, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=25, hedge=3, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$530, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,458 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,458 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,458 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,458 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@56382bc9
2016-11-09 12:15:50,458 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Vivienne Court Trading Pty Ltd, 7308.0, 7308.0
2016-11-09 12:15:50,495 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,495 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,495 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,496 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbf2, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160055, invoice_date=09 July, 2016, account_number=CEL0004, due_date=09 August, 2016, amount_due=HK$7,308, description=October 2016 Brokerage Fee, amount=HK$7,308, key=Vivienne Court Trading Pty Ltd_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@56382bc9, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,496 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,496 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,496 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,497 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13007, description=Listed KS200 JUN17 210/280 -1/1 European Risk Reversal REF 254 (SEP16), size=400, hedge=70, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$913, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,497 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,497 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,497 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13058, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256 (SEP16), size=1000, hedge=215, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$2,298, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,498 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,498 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,498 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6cd98a05
2016-11-09 12:15:50,498 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 3211.0, 3211.0
2016-11-09 12:15:50,544 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,544 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,545 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,545 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbf6, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160089, invoice_date=09 September, 2016, account_number=CEL0006, due_date=09 October, 2016, amount_due=US$3,211, description=October 2016 Brokerage Fee, amount=US$3,211, key=J.P. Morgan Securities PLC_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6cd98a05, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,545 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,546 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=400, hedge=40, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$5,280, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,546 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,546 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,546 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jun-16, tradeId=CELERAEQ-2016-12926, description=Listed HSCEI DEC16 8600 European Straddle REF 8,525 (JUN16), size=400, hedge=8, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$4,896, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,547 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,547 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,547 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,547 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=200, hedge=68, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$3,216, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,548 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=71, hedge=35, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$1,272, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,548 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,549 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12941, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=100, hedge=18, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$1,416, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,549 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,549 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,549 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,550 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3667faa8
2016-11-09 12:15:50,550 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 16080.0, 16080.0
2016-11-09 12:15:50,587 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,587 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,588 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,588 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafbfd, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160057, invoice_date=09 July, 2016, account_number=CEL0001, due_date=09 August, 2016, amount_due=HK$16,080, description=October 2016 Brokerage Fee, amount=HK$16,080, key=Nomura International Plc_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3667faa8, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,588 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,589 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,589 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,589 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13076, description=Listed HSI JUN17 25000 European Call REF 23,175 (SEP16), size=100, hedge=31, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,965, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,589 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,589 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,589 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,590 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=400, hedge=22, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,330, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,590 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,590 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,590 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,591 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=200, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,000, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,591 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13080, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=500, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,890, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,591 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,592 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13081, description=Listed HSI DEC17 14400 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$795, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,592 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$795, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,592 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,593 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13083, description=Listed HSCEI DEC18 10000/12000 1/-2 European Call Ratio REF 9,850 (SEP16), size=150, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,593 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,593 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,593 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,594 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13084, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,594 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13085, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13093, description=Listed HSCEI SEP16 10000 European Call REF 10,075 (SEP16), size=200, hedge=116, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,695, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=100, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,055, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=300, hedge=42, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,130, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13103, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,750 (SEP16), size=200, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,075, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,596 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=400, hedge=20, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,300, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=200, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,045, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,597 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13109, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,550 (SEP16), size=200, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,075, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=100, hedge=19, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,785, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=100, hedge=17, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,755, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13112, description=Listed HSI SEP16 22600/23200 -2/1 European Put Ratio REF 23,200 (SEP16), size=450, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,750, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=300, hedge=6, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,590, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13125, description=Listed HSCEI DEC18 10800/12600 -1/2 European Call Ratio REF 10,000 (SEP16), size=450, hedge=18, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$7,020, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13134, description=Listed HSI DEC17 24000 European Straddle REF 23,750 (SEP16), size=200, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,045, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,600 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13135, description=Listed HSCEI DEC18 9600 European Straddle REF 9,750 (SEP16), size=200, hedge=11, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,165, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,600 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,601 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Sep-16, tradeId=CELERAEQ-2016-13141, description=Listed HSCEI SEP16 9600/9800 European Call Spread REF 9,600 (SEP16), size=200, hedge=37, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,601 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=800, hedge=2, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,601 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,602 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=100, hedge=1, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,515, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,602 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$750, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,602 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,603 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=100, hedge=0, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,500, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,603 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,603 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,603 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,603 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13149, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=50, hedge=25, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,125, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,603 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,603 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,604 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,604 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@670f2466
2016-11-09 12:15:50,604 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 79650.0, 79650.0
2016-11-09 12:15:50,666 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,666 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,666 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,667 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc1d, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160128, invoice_date=09 October, 2016, account_number=CEL0003, due_date=09 November, 2016, amount_due=HK$79,650, description=October 2016 Brokerage Fee, amount=HK$79,650, key=Optiver Australia Pty Ltd_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@670f2466, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,667 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,667 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,667 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,667 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12945, description=Listed HSCEI DEC17 6600 European Put REF 8,700 (JUL16), size=230, hedge=37, reference=Buyer - Celera Financial Limited - Martin, fee=HK$4,560, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,667 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,667 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,668 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,668 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@40c2ce52
2016-11-09 12:15:50,668 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 4560.0, 4560.0
2016-11-09 12:15:50,705 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,705 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,705 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,706 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc20, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160084, invoice_date=09 August, 2016, account_number=CEL0013, due_date=09 September, 2016, amount_due=HK$4,560, description=October 2016 Brokerage Fee, amount=HK$4,560, key=Celera Financial Limited_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@40c2ce52, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,706 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,706 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,706 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,707 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=4000, hedge=13, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$60,195, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,707 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,707 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,707 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=400, hedge=24, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$6,360, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,707 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,708 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,708 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,708 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13194, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=100, hedge=7, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$1,605, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,708 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,708 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,708 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,709 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@23cbbd07
2016-11-09 12:15:50,709 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Barclays Bank PLC, 68160.0, 68160.0
2016-11-09 12:15:50,746 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,747 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,747 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc25, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160146, invoice_date=09 November, 2016, account_number=CEL0021, due_date=09 December, 2016, amount_due=HK$68,160, description=October 2016 Brokerage Fee, amount=HK$68,160, key=Barclays Bank PLC_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Barclays Bank PLC_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@23cbbd07, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,747 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,747 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,747 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,748 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=100, hedge=24, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$2,104, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,748 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=1, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$1,606, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,748 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=200, hedge=36, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$4,513, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,748 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,749 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=400, hedge=96, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$9,275, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,749 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=440, hedge=11, reference=Buyer - UBS AG London Branch - David Best, fee=HK$1,858, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,749 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,750 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7a3269f5
2016-11-09 12:15:50,750 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== UBS AG LONDON BRANCH_HKD_SEP16, 19643.0, 19356.0
2016-11-09 12:15:50,764 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,764 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,764 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,765 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc2c, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0007, due_date=09 October, 2016, amount_due=HK$19,356, description=October 2016 Brokerage Fee, amount=HK$19,356, key=UBS AG London Branch_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7a3269f5, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,765 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,765 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,765 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,765 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=306, hedge=29, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,766 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13156, description=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), size=58, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=100, hedge=16, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=400, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=900, hedge=93, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$0, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13168, description=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), size=200, hedge=41, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,547, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=200, hedge=17, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,255, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13170, description=Listed HSCEI MAR17 9800 European Straddle REF 9,725 (OCT16), size=50, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$765, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13180, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=600, hedge=246, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$12,690, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13182, description=Listed HSCEI JUN17 9600/10400 European Call Spread REF 9,850 (OCT16), size=400, hedge=36, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,540, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=60, hedge=3, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$945, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,771 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13188, description=Listed HSI NOV16 23200 European Straddle REF 23,300 (OCT16), size=200, hedge=8, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,120, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,771 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13189, description=Listed HSI NOV16 23200 European Straddle REF 23,050 (NOV16), size=50, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$765, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,771 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13196, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=200, hedge=14, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,210, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,772 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,772 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,772 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@399ca607
2016-11-09 12:15:50,772 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 33837.0, 33837.0
2016-11-09 12:15:50,843 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,844 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,844 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,845 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc3d, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160160, invoice_date=09 November, 2016, account_number=CEL0003, due_date=09 December, 2016, amount_due=HK$33,837, description=October 2016 Brokerage Fee, amount=HK$33,837, key=Optiver Australia Pty Ltd_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@399ca607, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,845 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,845 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,845 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,846 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=100, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,112, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,846 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,846 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,846 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,847 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$480, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,847 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,847 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,847 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,857 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12811, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$480, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,857 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,857 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,857 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,857 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=1000, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,857 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,858 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12819, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,048, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,858 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,858 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,858 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12820, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,175 (APR16), size=600, hedge=156, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,048, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,859 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12827, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,050 (APR16), size=300, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,528, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,859 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,860 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,860 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,860 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,860 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,861 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,400, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,861 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12831, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,712, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,861 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,862 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=1000, hedge=280, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,862 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=334, hedge=23, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,856, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,862 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,863 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=HK$4,096, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,863 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12837, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=HK$2,048, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,863 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12851, description=Listed HSCEI DEC17 12000/13800 European Call Spread REF 8,950 (MAY16), size=50, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$416, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,863 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,864 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,864 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=100, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$832, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,864 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,864 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,864 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,865 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6f5bd362
2016-11-09 12:15:50,865 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== BNP PARIBAS ARBITRAGE S.N.C.*_HKD_MAY16, 52072.0, 64096.0
2016-11-09 12:15:50,879 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,879 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,879 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,880 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc4f, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0014, due_date=09 June, 2016, amount_due=HK$64,096, description=October 2016 Brokerage Fee, amount=HK$64,096, key=BNP Paribas Arbitrage S.N.C_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6f5bd362, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,880 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,880 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,880 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,881 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=150, hedge=6, reference=Seller - IBK Securities Co. Ltd - Park Jeong-Hyeon, fee=HK$2,340, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,881 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,881 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,881 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,881 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6f5e16cf
2016-11-09 12:15:50,882 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== IBK Securities Co. Ltd, 2340.0, 2340.0
2016-11-09 12:15:50,915 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,916 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,916 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,916 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc52, company=IBK Securities Co. Ltd, address=, attn=82269155823, sentTo=twklem@ibks.com , invoice_number=CEL-160115, invoice_date=09 September, 2016, account_number=CEL0027, due_date=09 October, 2016, amount_due=HK$2,340, description=October 2016 Brokerage Fee, amount=HK$2,340, key=IBK Securities Co. Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/IBK Securities Co. Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6f5e16cf, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,917 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Jun-16, tradeId=CELERAEQ-2016-12896, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,550 (JUN16), size=150, hedge=3, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,836, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,917 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,918 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12903, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=3000, hedge=80, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$36,960, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,918 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,918 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,918 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,918 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12904, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=750, hedge=20, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,240, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,919 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,919 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,919 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,919 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12939, description=Listed HSCEI DEC16 9200 European Call REF 8,500 (JUL16), size=52, hedge=16, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,919 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,920 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,920 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,920 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=700, hedge=119, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$9,828, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,920 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,920 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,921 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,921 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@468e8565
2016-11-09 12:15:50,921 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 58680.0, 58680.0
2016-11-09 12:15:50,960 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,960 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,960 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,961 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc59, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160051, invoice_date=09 July, 2016, account_number=CEL0006, due_date=09 August, 2016, amount_due=HK$58,680, description=October 2016 Brokerage Fee, amount=HK$58,680, key=J.P. Morgan Securities PLC_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@468e8565, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,961 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,961 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,961 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,962 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12909, description=Listed HSCEI SEP16 8800 European Call REF 8,350 (JUN16), size=200, hedge=72, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$2,505, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,962 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,962 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,962 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,963 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12912, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=250, hedge=5, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,570, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,963 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=200, hedge=71, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$1,264, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,963 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,964 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12928, description=Listed HSCEI DEC17 10000/10800 European Call Spread REF 8,625 (JUN16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,588, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,964 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=100, hedge=5, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$1,511, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,964 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,965 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=13, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$3,116, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,965 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,965 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,965 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,965 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3d620a1
2016-11-09 12:15:50,965 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== SOCIÉTÉ GÉNÉRALE (HK) LIMITED_HKD_JUL16, 15059.0, 12554.0
2016-11-09 12:15:50,979 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:50,979 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:50,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,980 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f6327cb279e0bafc61, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 July, 2016, account_number=CEL0018, due_date=09 August, 2016, amount_due=HK$12,554, description=October 2016 Brokerage Fee, amount=HK$12,554, key=Société Générale (HK) Limited_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3d620a1, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,980 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,980 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,980 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,981 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13031, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=200, hedge=17, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$3,255, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,981 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:50,981 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:50,981 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,982 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=50, hedge=1, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$765, lastModified=Wed Nov 09 12:15:50 HKT 2016]
2016-11-09 12:15:50,982 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:50,982 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:50,982 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:50,982 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@500051c5
2016-11-09 12:15:50,983 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Barclays Bank PLC, 4020.0, 4020.0
2016-11-09 12:15:51,020 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,021 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc65, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160107, invoice_date=09 September, 2016, account_number=CEL0021, due_date=09 October, 2016, amount_due=HK$4,020, description=October 2016 Brokerage Fee, amount=HK$4,020, key=Barclays Bank PLC_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Barclays Bank PLC_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@500051c5, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,021 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Jun-16, tradeId=CELERAEQ-2016-12896, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,550 (JUN16), size=150, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=100, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,540, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jun-16, tradeId=CELERAEQ-2016-12908, description=Listed HSCEI DEC17 7000/8400 2/-1 European Put Ratio REF 8,400 (JUN16), size=180, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,562, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,204, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=106, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,624, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,024 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=120, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,722, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,024 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=110, hedge=39, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,086, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,024 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,024 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=240, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,402, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,025 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,025 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=104, hedge=13, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,638, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=49, hedge=24, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,022, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,026 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=28, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$448, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@41f4039e
2016-11-09 12:15:51,027 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 18130.0, 18130.0
2016-11-09 12:15:51,071 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,072 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,072 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc73, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160052, invoice_date=09 July, 2016, account_number=CEL0005, due_date=09 August, 2016, amount_due=HK$18,130, description=October 2016 Brokerage Fee, amount=HK$18,130, key=Liquid Capital Australia Pty Ltd._HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@41f4039e, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,072 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,072 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=50, hedge=22, reference=Seller - Deutsche Bank AG London Branch - Payton Ong, fee=HK$1,080, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,073 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,073 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@28279a49
2016-11-09 12:15:51,074 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Deutsche Bank AG London Branch, 1080.0, 1080.0
2016-11-09 12:15:51,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,108 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,108 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,108 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc76, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160044, invoice_date=09 June, 2016, account_number=CEL0002, due_date=09 July, 2016, amount_due=HK$1,080, description=October 2016 Brokerage Fee, amount=HK$1,080, key=Deutsche Bank AG London Branch_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Deutsche Bank AG London Branch_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@28279a49, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,108 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,109 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13107, description=Listed N225 DEC16 14500/18500 1/-1 European Risk Reversal REF 16,600 (DEC16), size=600, hedge=81, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=JPY498,000, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,109 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,109 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,109 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,109 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@69cd7630
2016-11-09 12:15:51,110 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== YUANTA SECURITIES KOREA CO., LTD_USD_OCT16, 5675.0, 498000.0
2016-11-09 12:15:51,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,124 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,125 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,125 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc79, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0025, due_date=09 November, 2016, amount_due=JPY498,000, description=October 2016 Brokerage Fee, amount=JPY498,000, key=Yuanta Securities Korea Co., Ltd_JPY_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_JPY_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@69cd7630, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,125 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,126 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,126 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12795, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=US$423, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,126 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,127 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,127 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@77cb452c
2016-11-09 12:15:51,127 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 423.0, 423.0
2016-11-09 12:15:51,165 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,165 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,165 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,165 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc7c, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160008, invoice_date=09 April, 2016, account_number=CEL0015, due_date=09 May, 2016, amount_due=US$423, description=October 2016 Brokerage Fee, amount=US$423, key=Morgan Stanley & Co. International PLC_KRW_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@77cb452c, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,166 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13122, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=200, hedge=42, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$1,147, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,166 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,167 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13123, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=200, hedge=36, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=US$2,298, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,167 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,167 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,167 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,167 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2c0c4c0a
2016-11-09 12:15:51,168 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 3445.0, 3445.0
2016-11-09 12:15:51,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,206 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,206 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc80, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160118, invoice_date=09 October, 2016, account_number=CEL0011, due_date=09 November, 2016, amount_due=US$3,445, description=October 2016 Brokerage Fee, amount=US$3,445, key=Korea Investment & Securities Co Ltd_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2c0c4c0a, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,207 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,207 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,207 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - Woori Bank - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,207 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,208 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@69a024a0
2016-11-09 12:15:51,208 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Woori Bank
2016-11-09 12:15:51,208 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,208 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,208 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,209 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=800, hedge=124, reference=Buyer - Thierry, fee=HK$13,860, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,209 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,209 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,209 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,210 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jun-16, tradeId=CELERAEQ-2016-12925, description=Listed HSCEI SEP16 6500 European Put REF 8,525 (JUN16), size=750, hedge=45, reference=Seller - Thierry, fee=HK$11,925, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,210 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,210 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,210 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,210 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12927, description=Listed HSCEI DEC16 7600/9000 -1/1 European Risk Reversal REF 8,675 (JUN16), size=400, hedge=136, reference=Buyer - Thierry, fee=HK$8,040, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,211 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,211 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,211 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,211 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4bf80c29
2016-11-09 12:15:51,211 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 33825.0, 33825.0
2016-11-09 12:15:51,258 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,259 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,259 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,259 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc87, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160066, invoice_date=09 July, 2016, account_number=CEL0030, due_date=09 August, 2016, amount_due=HK$33,825, description=October 2016 Brokerage Fee, amount=HK$33,825, key=Thierry_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4bf80c29, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,259 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,259 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,260 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,260 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12799, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=600, hedge=50, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,260 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,260 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,260 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,261 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12800, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=300, hedge=25, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,261 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,261 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,261 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,262 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12801, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 243.50 (JUN16), size=600, hedge=56, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,262 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,262 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,262 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,263 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2b6c7012
2016-11-09 12:15:51,279 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,279 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,279 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,280 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc8c, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 May, 2016, account_number=CEL0018, due_date=09 June, 2016, amount_due=US$0, description=October 2016 Brokerage Fee, amount=US$0, key=Société Générale (HK) Limited_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2b6c7012, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,280 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,281 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,281 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,281 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12812, description=Listed HSCEI SEP16 7000/8400 -2/1 European Put Ratio REF 9,200 (APR16), size=300, hedge=10, reference=Seller - Vivienne Court Trading Pty Ltd - Ernst Stillebroer, fee=HK$4,650, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,281 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,281 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,281 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,281 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=60, hedge=3, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen, fee=HK$1,230, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,282 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=150, hedge=0, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,400, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,282 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,283 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@19b07407
2016-11-09 12:15:51,283 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Vivienne Court Trading Pty Ltd, 7280.0, 7280.0
2016-11-09 12:15:51,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc91, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160014, invoice_date=09 May, 2016, account_number=CEL0004, due_date=09 June, 2016, amount_due=HK$7,280, description=October 2016 Brokerage Fee, amount=HK$7,280, key=Vivienne Court Trading Pty Ltd_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@19b07407, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12978, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=200, hedge=36, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,540, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12984, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$3,585, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3434a4f0
2016-11-09 12:15:51,330 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 7125.0, 7125.0
2016-11-09 12:15:51,367 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,367 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,367 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc95, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160067, invoice_date=09 August, 2016, account_number=CEL0011, due_date=09 September, 2016, amount_due=HK$7,125, description=October 2016 Brokerage Fee, amount=HK$7,125, key=Korea Investment & Securities Co Ltd_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3434a4f0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,368 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,368 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,368 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13061, description=Listed KS200 MAR17 210 European Put REF 255.50 (SEP16), size=120, hedge=48, reference=Seller - Samsung Securities Co., Ltd - Byunghoon Kim, fee=US$1,365, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,368 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,369 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,369 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,369 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@61f377d1
2016-11-09 12:15:51,369 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Samsung Securities Co., Ltd, 1365.0, 1365.0
2016-11-09 12:15:51,409 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,411 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,411 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc98, company=Samsung Securities Co., Ltd, address=, attn=82220208426, sentTo=youngja.yoon@samsung.com, invoice_number=CEL-160113, invoice_date=09 September, 2016, account_number=CEL0026, due_date=09 October, 2016, amount_due=US$1,365, description=October 2016 Brokerage Fee, amount=US$1,365, key=Samsung Securities Co., Ltd_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Samsung Securities Co., Ltd_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@61f377d1, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12793, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=150, hedge=38, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Julien Petit-Pasquier, fee=US$1,190, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12794, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Julien Petit-Pasquier, fee=US$793, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,413 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,413 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,413 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,413 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1f84327b
2016-11-09 12:15:51,413 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 1983.0, 1983.0
2016-11-09 12:15:51,449 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,449 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,449 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,450 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc9c, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160004, invoice_date=09 April, 2016, account_number=CEL0009, due_date=09 May, 2016, amount_due=US$1,983, description=October 2016 Brokerage Fee, amount=US$1,983, key=Citigroup Global Markets Hong Kong Limited_KRW_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_KRW_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1f84327b, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,450 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,450 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,451 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,451 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=274, hedge=107, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$4,572, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,451 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,451 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,451 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,452 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4fecf308
2016-11-09 12:15:51,452 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 4572.0, 4572.0
2016-11-09 12:15:51,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,489 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,489 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafc9f, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160011, invoice_date=09 May, 2016, account_number=CEL0001, due_date=09 June, 2016, amount_due=HK$4,572, description=October 2016 Brokerage Fee, amount=HK$4,572, key=Nomura International Plc_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4fecf308, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12861, description=Listed MEA JUN16 Forward REF 396 (JUN16), size=500, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,491 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12862, description=MEA JUN16 Forward REF 396 (JUN16), size=5000, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,492 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6839203b
2016-11-09 12:15:51,492 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 12:15:51,492 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,492 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13017, description=Listed KS200 JUN18 210 European Put REF 257.50 (SEP16), size=200, hedge=36, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,170, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,509 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,509 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,509 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,509 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Aug-16, tradeId=CELERAEQ-2016-13038, description=Listed KS200 JUN17/JUN18 250 -1/1 European Straddle Time Spread REF 256.50 (SEP16), size=1000, hedge=25, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,448, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,509 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,509 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,510 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13040, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=600, hedge=26, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,155, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,510 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13041, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=65, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,510 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,511 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2d28fb02
2016-11-09 12:15:51,511 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 3773.0, 3773.0
2016-11-09 12:15:51,558 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,563 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,563 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,564 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafca8, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160092, invoice_date=09 September, 2016, account_number=CEL0003, due_date=09 October, 2016, amount_due=US$3,773, description=October 2016 Brokerage Fee, amount=US$3,773, key=Optiver Australia Pty Ltd_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2d28fb02, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,564 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,564 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,564 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,564 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=400, hedge=112, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$7,680, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,564 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,565 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,565 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,565 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@691541bc
2016-11-09 12:15:51,566 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 7680.0, 7680.0
2016-11-09 12:15:51,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,611 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,611 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcab, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160029, invoice_date=09 June, 2016, account_number=CEL0011, due_date=09 July, 2016, amount_due=HK$7,680, description=October 2016 Brokerage Fee, amount=HK$7,680, key=Korea Investment & Securities Co Ltd_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@691541bc, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,611 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,611 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,612 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=2000, hedge=100, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$31,500, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,612 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,612 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,612 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,613 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@250d440
2016-11-09 12:15:51,613 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== NH Investment & Securities Co Ltd, 31500.0, 31500.0
2016-11-09 12:15:51,646 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,646 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,646 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,647 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcae, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=CEL-160121, invoice_date=09 October, 2016, account_number=CEL0024, due_date=09 November, 2016, amount_due=HK$31,500, description=October 2016 Brokerage Fee, amount=HK$31,500, key=NH Investment & Securities Co Ltd_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/NH Investment & Securities Co Ltd_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@250d440, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,647 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,647 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,647 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,647 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12792, description=Listed HSCEI DEC16 6000 European Put REF 7,950 (MAR16), size=50, hedge=8, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$870, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,648 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,648 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,648 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,649 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@39266403
2016-11-09 12:15:51,649 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Hong Kong Limited, 870.0, 870.0
2016-11-09 12:15:51,683 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,683 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,684 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,684 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcb1, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160002, invoice_date=09 March, 2016, account_number=CEL0012, due_date=09 April, 2016, amount_due=HK$870, description=October 2016 Brokerage Fee, amount=HK$870, key=Liquid Capital Hong Kong Limited_HKD_0316, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0316.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@39266403, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,684 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,684 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,684 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,684 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=31, hedge=12, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$430, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,685 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12809, description=Listed HSCEI SEP16 9000 European Call REF 8,825 (APR16), size=51, hedge=20, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$710, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,685 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=150, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,500, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,685 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,686 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,686 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,686 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12852, description=Listed HSCEI DEC17 13800 European Call REF 8,950 (MAY16), size=50, hedge=2, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,686 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,686 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,686 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,686 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12854, description=Listed HSCEI MAY16 Futures, size=2, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,687 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,687 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,687 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,687 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12854, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=2, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,688 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,688 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, lastModified] in collection: tradedetail
2016-11-09 12:15:51,688 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,688 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Apr-16, tradeId=CELERAEQ-2016-12855, description=Listed HSCEI MAY16/JUN16 Future Spread REF (MAY16), size=2, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=null, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,688 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,689 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,689 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,689 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6f38f084
2016-11-09 12:15:51,689 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Eclipse Futures (HK) Limited, 3160.0, 3160.0
2016-11-09 12:15:51,750 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,751 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,751 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,752 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcba, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160021, invoice_date=09 May, 2016, account_number=CEL0008, due_date=09 June, 2016, amount_due=HK$3,160, description=October 2016 Brokerage Fee, amount=HK$3,160, key=Eclipse Futures (HK) Limited_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6f38f084, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,752 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,752 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,752 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,772 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12906, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=700, hedge=80, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,248, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,773 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jun-16, tradeId=CELERAEQ-2016-12911, description=Listed HSCEI JUN17 8400 European Straddle REF 8,375 (JUN16), size=200, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,632, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,773 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,774 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12913, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,408, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,774 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12914, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,408, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,774 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,774 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12915, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=750, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,016, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,775 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12918, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,350 (JUN16), size=400, hedge=12, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,296, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,775 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12919, description=Listed HSCEI AUG16/JUN17 7000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,696, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,775 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,776 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12920, description=Listed HSCEI SEP16 8400 European Straddle REF 8,300 (JUN16), size=66, hedge=1, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$536, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,776 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=520, hedge=13, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,264, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,776 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,777 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12922, description=Listed HSCEI MAR17 8800/10600 European Call Spread REF 8,250 (JUN16), size=600, hedge=93, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,544, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,777 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=306, hedge=29, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,680, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,777 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jun-16, tradeId=CELERAEQ-2016-12925, description=Listed HSCEI SEP16 6500 European Put REF 8,525 (JUN16), size=750, hedge=45, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,360, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,777 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,778 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12928, description=Listed HSCEI DEC17 10000/10800 European Call Spread REF 8,625 (JUN16), size=400, hedge=20, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,360, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,778 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=800, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,530, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,778 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,779 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,779 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12930, description=Listed HSI JUN16 21400/21600 European Call Spread REF 20,775 (JUN16), size=200, hedge=7, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,691, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,779 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,779 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,779 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,780 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12931, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=200, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,730, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,780 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=100, hedge=5, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,365, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,780 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,781 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=400, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,600, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,781 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12936, description=Listed HSI JUL16 21000 European Call REF 20,200 (JUN16), size=200, hedge=48, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,224, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,781 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=200, hedge=98, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,384, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=1000, hedge=160, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,280, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12941, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=100, hedge=18, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$944, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=100, hedge=14, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,482, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,783 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,783 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@bbb6f0
2016-11-09 12:15:51,783 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 84678.0, 84678.0
2016-11-09 12:15:51,837 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,837 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,837 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,838 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcd3, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160061, invoice_date=09 July, 2016, account_number=CEL0014, due_date=09 August, 2016, amount_due=HK$84,678, description=October 2016 Brokerage Fee, amount=HK$84,678, key=BNP Paribas Arbitrage S.N.C_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@bbb6f0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,838 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,838 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,838 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,838 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=336, hedge=15, reference=Seller - Barclays Bank PLC - Jean-Guy Renard, fee=HK$5,265, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,838 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,839 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,839 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,839 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=300, hedge=1, reference=Buyer - Barclays Bank PLC - Jean-Guy Renard, fee=HK$4,515, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,839 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,839 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,839 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,839 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@60591e1b
2016-11-09 12:15:51,840 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Barclays Bank PLC, 9780.0, 9780.0
2016-11-09 12:15:51,871 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,872 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcd7, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=CEL-160142, invoice_date=09 October, 2016, account_number=CEL0021, due_date=09 November, 2016, amount_due=HK$9,780, description=October 2016 Brokerage Fee, amount=HK$9,780, key=Barclays Bank PLC_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Barclays Bank PLC_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@60591e1b, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,872 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,872 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,872 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,873 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12803, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Buyer - Nomura International Plc - Mathieu Bonhomme, fee=US$790, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,873 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12823, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=200, hedge=26, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$830, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,873 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,874 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@624b3544
2016-11-09 12:15:51,874 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 1620.0, 1620.0
2016-11-09 12:15:51,905 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,905 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,905 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,906 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafcdb, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160010, invoice_date=09 May, 2016, account_number=CEL0001, due_date=09 June, 2016, amount_due=US$1,620, description=October 2016 Brokerage Fee, amount=US$1,620, key=Nomura International Plc_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@624b3544, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,906 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,906 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,906 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,907 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12897, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=400, hedge=35, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$476, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,907 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12898, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=800, hedge=70, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$955, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,907 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,908 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12899, description=Listed KS200 DEC16 200 European Put REF 247 (JUN16), size=200, hedge=60, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$478, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,908 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,908 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,908 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,908 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1bee0085
2016-11-09 12:15:51,908 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== BNP PARIBAS ARBITRAGE S.N.C.*_USD_JUL16, 2880.0, 1909.0
2016-11-09 12:15:51,923 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,923 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,924 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,924 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafce0, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0014, due_date=09 August, 2016, amount_due=US$1,909, description=October 2016 Brokerage Fee, amount=US$1,909, key=BNP Paribas Arbitrage S.N.C_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1bee0085, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,924 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,925 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,925 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13078, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=2, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,530, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,925 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,925 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,926 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=72, hedge=18, reference=Seller - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$1,350, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,926 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,926 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,926 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,927 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1ea930eb
2016-11-09 12:15:51,927 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 2880.0, 2880.0
2016-11-09 12:15:51,961 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,961 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,961 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,962 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafce4, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160119, invoice_date=09 October, 2016, account_number=CEL0011, due_date=09 November, 2016, amount_due=HK$2,880, description=October 2016 Brokerage Fee, amount=HK$2,880, key=Korea Investment & Securities Co Ltd_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1ea930eb, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,962 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,962 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,962 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,962 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12845, description=***THIS IS A PRE-CONFIRMATION ONLY***Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=1050, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=HK$0, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,962 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,963 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@62cf6a84
2016-11-09 12:15:51,963 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,963 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12798, description=Listed HSCEI SEP16 8800 European Straddle REF 8,625 (APR16), size=100, hedge=8, reference=Seller - Thierry, fee=HK$1,620, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,963 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,964 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=1600, hedge=80, reference=Seller - Thierry, fee=HK$25,200, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,964 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=300, hedge=0, reference=Buyer - Thierry, fee=HK$4,500, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:51,964 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,965 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@204d9edf
2016-11-09 12:15:51,965 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 31320.0, 31320.0
2016-11-09 12:15:51,998 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:51,998 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:51,998 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,998 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f7327cb279e0bafceb, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160028, invoice_date=09 May, 2016, account_number=CEL0030, due_date=09 June, 2016, amount_due=HK$31,320, description=October 2016 Brokerage Fee, amount=HK$31,320, key=Thierry_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@204d9edf, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:51,999 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$3,250, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:51,999 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,000 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12969, description=Listed HSCEI DEC17 10000 European Call REF 9,050 (JUL16), size=200, hedge=78, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$3,590, lastModified=Wed Nov 09 12:15:51 HKT 2016]
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,000 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=200, hedge=44, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,420, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,000 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,000 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12979, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=167, hedge=30, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$2,822, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,001 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=400, hedge=78, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,434, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,001 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=200, hedge=16, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$3,280, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,001 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,002 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,002 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,002 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@407b8435
2016-11-09 12:15:52,002 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 19796.0, 19796.0
2016-11-09 12:15:52,047 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,047 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,047 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,048 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafcf3, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160077, invoice_date=09 August, 2016, account_number=CEL0007, due_date=09 September, 2016, amount_due=HK$19,796, description=October 2016 Brokerage Fee, amount=HK$19,796, key=UBS AG London Branch_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@407b8435, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,048 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,048 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,049 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13089, description=Listed KS200 MAR17 210 European Put REF 263 (DEC16), size=200, hedge=20, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$1,805, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,049 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13090, description=Listed KS200 JAN17/MAR17 220 European Put Time Spread REF 262.50 (DEC16), size=200, hedge=6, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$901, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,049 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,050 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13114, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=42, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$851, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,050 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13129, description=Listed KS200 NOV16 235/250 -2/1 European Put Ratio REF 259 (DEC16), size=900, hedge=36, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$2,642, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,050 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,051 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13136, description=Listed KS200 DEC16 260/275 1/-2 European Call Ratio REF 258.50 (DEC16), size=600, hedge=48, reference=Seller - UBS AG London Branch - Jingshu Li, fee=US$1,750, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,051 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,051 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,051 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,051 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@20216016
2016-11-09 12:15:52,052 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 7949.0, 7949.0
2016-11-09 12:15:52,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,085 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafcfa, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160132, invoice_date=09 October, 2016, account_number=CEL0007, due_date=09 November, 2016, amount_due=US$7,949, description=October 2016 Brokerage Fee, amount=US$7,949, key=UBS AG London Branch_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@20216016, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,085 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,085 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,086 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13086, description=Listed KS200 NOV16 270 European Call REF 260.50 (SEP16), size=200, hedge=44, reference=Seller - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$945, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,086 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13106, description=Listed KS200 NOV16/MAR17 260 -1/1 European Straddle Time Spread REF 253.50 (DEC16), size=400, hedge=65, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$910, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,086 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,087 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13121, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=1000, hedge=210, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$2,293, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,087 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13123, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=200, hedge=36, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$919, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,087 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,088 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13124, description=Listed KS200 MAR17 230 European Put REF 255.50 (DEC16), size=300, hedge=60, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$1,379, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,088 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,088 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,088 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,089 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13136, description=Listed KS200 DEC16 260/275 1/-2 European Call Ratio REF 258.50 (DEC16), size=600, hedge=48, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$933, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,089 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,089 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,089 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,090 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6d969330
2016-11-09 12:15:52,090 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 7379.0, 7379.0
2016-11-09 12:15:52,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,125 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,125 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,125 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd02, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160136, invoice_date=09 October, 2016, account_number=CEL0015, due_date=09 November, 2016, amount_due=US$7,379, description=October 2016 Brokerage Fee, amount=US$7,379, key=Morgan Stanley & Co. International PLC_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6d969330, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,126 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Sep-16, tradeId=CELERAEQ-2016-13073, description=Listed HSCEI DEC17 11600/14400 1/-2 European Call Ratio REF 9,525 (SEP16), size=300, hedge=10, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,429, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,126 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,126 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=600, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$10,440, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,127 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13081, description=Listed HSI DEC17 14400 European Put REF 23,600 (SEP16), size=50, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,770, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,127 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,128 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=150, hedge=9, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,310, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,129 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=150, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,394, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,129 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,130 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13095, description=Listed HSCEI DEC17 10000 European Straddle REF 10,075 (SEP16), size=200, hedge=8, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,023, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,130 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,130 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,130 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,130 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13098, description=Listed HSCEI DEC17 6600 European Put REF 10,075 (SEP16), size=100, hedge=7, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,511, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,130 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,131 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=600, hedge=30, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,388, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,131 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=266, hedge=4, reference=Seller - Société Générale (HK) Limited - Jacinto Ferreira, fee=HK$9,386, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,131 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,132 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=100, hedge=26, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,470, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,132 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=200, hedge=38, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,489, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,132 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=500, hedge=140, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,388, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,133 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13133, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=100, hedge=28, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,478, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,133 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=300, hedge=3, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,474, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=200, hedge=2, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,005, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=200, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,013, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13147, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=100, hedge=50, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,499, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13148, description=Listed HSI DEC16 23400 European Straddle REF 23,275 (OCT16), size=200, hedge=1, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,983, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13149, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=50, hedge=25, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,749, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@781dac73
2016-11-09 12:15:52,136 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 82199.0, 82199.0
2016-11-09 12:15:52,186 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,186 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,187 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,187 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd17, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160138, invoice_date=09 October, 2016, account_number=CEL0018, due_date=09 November, 2016, amount_due=HK$82,199, description=October 2016 Brokerage Fee, amount=HK$82,199, key=Société Générale (HK) Limited_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@781dac73, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,187 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,187 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,188 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,188 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12802, description=Listed KS200 JUN16 245 European Straddle REF 243.50 (JUN16), size=200, hedge=50, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$527, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,188 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,188 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,189 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,189 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Apr-16, tradeId=CELERAEQ-2016-12815, description=Listed KS200 DEC16 260/290 1/-2 European Call Ratio REF 249.50 (JUN16), size=600, hedge=50, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$1,085, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,190 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,190 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,190 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5cce40d7
2016-11-09 12:15:52,190 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 1612.0, 1612.0
2016-11-09 12:15:52,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,230 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,230 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,231 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd1b, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160022, invoice_date=09 May, 2016, account_number=CEL0009, due_date=09 June, 2016, amount_due=US$1,612, description=October 2016 Brokerage Fee, amount=US$1,612, key=Citigroup Global Markets Hong Kong Limited_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5cce40d7, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,231 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,231 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,231 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,232 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=625, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,441, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,232 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,232 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,232 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,232 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=200, hedge=48, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,525, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,232 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,233 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=100, hedge=37, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,360, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,233 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,233 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,233 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,233 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=1080, hedge=18, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,022, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,234 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,858, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,234 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=58, hedge=11, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$990, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,235 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=5, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,895, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,235 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=400, hedge=20, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,835, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,236 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,236 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,236 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,236 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13037, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=60, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$875, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=300, hedge=12, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$4,320, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,237 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13047, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,775 (AUG16), size=104, hedge=11, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,776, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,237 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,238 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,238 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,238 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=1100, hedge=11, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,858, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,238 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,238 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,239 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,239 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=200, hedge=0, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,850, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,239 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,239 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,239 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,240 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13065, description=Listed HSI JUN17 22000 European Put REF 22,750 (SEP16), size=100, hedge=43, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,413, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,240 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,240 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,240 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,240 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=250, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,553, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,241 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13067, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,439, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,241 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,242 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=2500, hedge=110, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$14,325, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,242 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,242 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,242 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,242 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13071, description=Listed HSCEI DEC17 7400/10800 -1/1 European Risk Reversal REF 9,550 (SEP16), size=600, hedge=150, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,298, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,242 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,242 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,243 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,243 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=100, hedge=3, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,716, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,243 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,244 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,244 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,244 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@184afb78
2016-11-09 12:15:52,244 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 79349.0, 79349.0
2016-11-09 12:15:52,315 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,315 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,315 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,316 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd30, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160103, invoice_date=09 September, 2016, account_number=CEL0018, due_date=09 October, 2016, amount_due=HK$79,349, description=October 2016 Brokerage Fee, amount=HK$79,349, key=Société Générale (HK) Limited_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@184afb78, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,316 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,316 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,316 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,317 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12954, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Seller - Hyundai Securities - Juhyun Jeong, fee=HK$6,250, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,317 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,317 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,317 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,318 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@77ccded4
2016-11-09 12:15:52,318 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Hyundai Securities, 6250.0, 6250.0
2016-11-09 12:15:52,369 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,370 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,370 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,370 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd33, company=Hyundai Securities, address=, attn=82261141866, sentTo=syshin09@stockmarket.co.kr, invoice_number=CEL-160086, invoice_date=09 August, 2016, account_number=CEL0020, due_date=09 September, 2016, amount_due=HK$6,250, description=October 2016 Brokerage Fee, amount=HK$6,250, key=Hyundai Securities_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Hyundai Securities_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@77ccded4, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,371 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,371 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,371 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,371 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Feb-16, tradeId=CELERAEQ-2016-12790, description=Listed N225 SEP16 14000/15000/16000 1/-2/1 European Put Butterfly REF 16,025 (MAR16), size=400, hedge=4, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=JPY33, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,371 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,372 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,372 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@c758a2d
2016-11-09 12:15:52,372 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 12:15:52,372 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,372 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,373 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=166, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$855, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,373 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,373 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,373 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,374 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12949, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=100, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$515, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,374 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,374 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,374 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,374 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=46, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$510, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,375 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12973, description=Listed HSCEI SEP16 8200 European Put REF 9,075 (JUL16), size=100, hedge=16, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$580, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,375 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=27, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$330, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,376 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,376 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,376 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=100, hedge=5, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,050, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,377 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12980, description=Listed HSI DEC16 18000/25200 1/-1 European Risk Reversal REF 21,800 (JUL16), size=50, hedge=10, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$560, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,377 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,377 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,377 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,378 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=28, hedge=7, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$175, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,378 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,378 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,378 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,378 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=43, hedge=13, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$460, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,379 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,379 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,379 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,379 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=50, hedge=3, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$530, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,380 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,380 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,380 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=200, hedge=38, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,380, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,380 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,381 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12988, description=Listed HSI DEC16 22400/25200 1/-2 European Call Ratio REF 22,200 (JUL16), size=81, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$870, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,381 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,381 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,381 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12990, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=50, hedge=2, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,382 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,382 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,382 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=50, hedge=2, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$520, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,382 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,383 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@d0b814d
2016-11-09 12:15:52,383 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== ECLIPSE FUTURES (HK) LIMITED_HKD_AUG16, 10375.0, 9855.0
2016-11-09 12:15:52,400 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,400 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,400 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,400 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd45, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0008, due_date=09 September, 2016, amount_due=HK$9,855, description=October 2016 Brokerage Fee, amount=HK$9,855, key=Eclipse Futures (HK) Limited_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@d0b814d, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,401 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13015, description=Listed HSCEI DEC16 Future (DEC16), size=10, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$40, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,401 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,402 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13020, description=Listed HSCEI DEC16 Future (DEC16), size=10, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$40, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,402 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,402 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,402 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,402 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@489f62a3
2016-11-09 12:15:52,402 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 80.0, 80.0
2016-11-09 12:15:52,434 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,434 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,434 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,435 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd49, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160105, invoice_date=09 September, 2016, account_number=CEL0013, due_date=09 October, 2016, amount_due=HK$80, description=October 2016 Brokerage Fee, amount=HK$80, key=Celera Financial Limited_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@489f62a3, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,435 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,435 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,436 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,436 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13086, description=Listed KS200 NOV16 270 European Call REF 260.50 (SEP16), size=200, hedge=44, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$472, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,436 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,436 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,436 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,437 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13090, description=Listed KS200 JAN17/MAR17 220 European Put Time Spread REF 262.50 (DEC16), size=200, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$240, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,437 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13115, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=600, hedge=126, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$681, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,437 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13120, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=400, hedge=84, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$458, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,437 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,438 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Sep-16, tradeId=CELERAEQ-2016-13121, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 255 (DEC16), size=1000, hedge=210, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$1,147, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,438 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13128, description=Listed KS200 NOV16 235/255 -2/1 European Put Ratio REF 260 (DEC16), size=600, hedge=48, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$471, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,438 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,439 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@85ab964
2016-11-09 12:15:52,439 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 3469.0, 3469.0
2016-11-09 12:15:52,472 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd51, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160134, invoice_date=09 October, 2016, account_number=CEL0014, due_date=09 November, 2016, amount_due=US$3,469, description=October 2016 Brokerage Fee, amount=US$3,469, key=BNP Paribas Arbitrage S.N.C_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@85ab964, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13151, description=Listed KS200 DEC17 200/240 -2/1 European Put Ratio REF 259.50 (DEC16), size=300, hedge=50, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,473 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,474 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13155, description=Listed KS200 DEC16 270/290 1/-2 European Call Ratio REF 257.50 (DEC16), size=480, hedge=24, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,474 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Oct-16, tradeId=CELERAEQ-2016-13161, description=Listed KS200 DEC16 240 European Put REF 256.50 (DEC16), size=200, hedge=30, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,474 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13173, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=600, hedge=93, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,708, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,474 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13175, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=400, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,134, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13176, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=200, hedge=20, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$567, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13179, description=Listed KS200 DEC17 240/260 European Put Spread REF 258.50 (DEC16), size=224, hedge=20, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$638, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13185, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=200, hedge=78, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,131, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,476 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,476 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,476 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13193, description=Listed KS200 DEC17 200 European Put REF 257 (DEC16), size=100, hedge=50, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$561, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,476 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,476 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,476 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,476 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3ee6dc82
2016-11-09 12:15:52,476 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 5739.0, 5739.0
2016-11-09 12:15:52,522 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,522 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,522 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,523 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd5c, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160161, invoice_date=09 November, 2016, account_number=CEL0003, due_date=09 December, 2016, amount_due=US$5,739, description=October 2016 Brokerage Fee, amount=US$5,739, key=Optiver Australia Pty Ltd_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3ee6dc82, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,523 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,523 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,524 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13007, description=Listed KS200 JUN17 210/280 -1/1 European Risk Reversal REF 254 (SEP16), size=400, hedge=70, reference=Seller - UBS AG London Branch - Suhail Patel, fee=US$1,712, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,524 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,524 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,524 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@62cd562d
2016-11-09 12:15:52,525 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 1712.0, 1712.0
2016-11-09 12:15:52,558 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,558 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,558 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,559 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd5f, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160097, invoice_date=09 September, 2016, account_number=CEL0007, due_date=09 October, 2016, amount_due=US$1,712, description=October 2016 Brokerage Fee, amount=US$1,712, key=UBS AG London Branch_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@62cd562d, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,559 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13061, description=Listed KS200 MAR17 210 European Put REF 255.50 (SEP16), size=120, hedge=48, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$546, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,559 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,560 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@76af34b5
2016-11-09 12:15:52,560 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 546.0, 546.0
2016-11-09 12:15:52,594 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,594 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,594 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,595 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd62, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160101, invoice_date=09 September, 2016, account_number=CEL0015, due_date=09 October, 2016, amount_due=US$546, description=October 2016 Brokerage Fee, amount=US$546, key=Morgan Stanley & Co. International PLC_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@76af34b5, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,595 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,595 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,595 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,596 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12863, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=125, hedge=7, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,370, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,597 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,597 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,597 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,598 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=310, hedge=17, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$3,890, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,598 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,598 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,598 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12868, description=Listed HSCEI JUN16 8600 European Call REF 8,450 (MAY16), size=100, hedge=32, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,320, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12889, description=Listed HSCEI JUN16/DEC16 8000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=8, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,480, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,599 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,599 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7bfa1eb5
2016-11-09 12:15:52,600 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Vivienne Court Trading Pty Ltd, 10060.0, 10060.0
2016-11-09 12:15:52,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd68, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160035, invoice_date=09 June, 2016, account_number=CEL0004, due_date=09 July, 2016, amount_due=HK$10,060, description=October 2016 Brokerage Fee, amount=HK$10,060, key=Vivienne Court Trading Pty Ltd_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7bfa1eb5, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,637 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,637 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,637 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=500, hedge=125, reference=Seller - Mirae Asset Securities Co. Ltd - Wonjun Hwang, fee=HK$9,375, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,638 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12956, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=200, hedge=42, reference=Seller - Mirae Asset Securities Co. Ltd - Wonjun Hwang, fee=HK$3,630, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,638 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,638 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2b936b04
2016-11-09 12:15:52,639 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Mirae Asset Securities Co. Ltd, 13005.0, 13005.0
2016-11-09 12:15:52,674 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,675 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,675 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,675 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd6c, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160085, invoice_date=09 August, 2016, account_number=CEL0019, due_date=09 September, 2016, amount_due=HK$13,005, description=October 2016 Brokerage Fee, amount=HK$13,005, key=Mirae Asset Securities Co. Ltd_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Mirae Asset Securities Co. Ltd_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2b936b04, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,675 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,676 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Apr-16, tradeId=CELERAEQ-2016-12800, description=Listed KS200 DEC16 250/280 1/-2 European Call Ratio REF 242 (JUN16), size=300, hedge=25, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$524, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,676 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12802, description=Listed KS200 JUN16 245 European Straddle REF 243.50 (JUN16), size=200, hedge=50, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$527, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,676 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,677 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12803, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,677 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12804, description=Listed KS200 JUN16/JUL16 230 European Put Time Spread REF 243.50 (JUN16), size=200, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Apr-16, tradeId=CELERAEQ-2016-12808, description=Listed KS200 JUL16 245 European Call REF 243 (JUN16), size=100, hedge=46, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$531, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12813, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248 (JUN16), size=300, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$538, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Apr-16, tradeId=CELERAEQ-2016-12814, description=Listed KS200 SEP16 215/270 1/-1 European Risk Reversal REF 248 (JUN16), size=400, hedge=48, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$0, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12821, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=800, hedge=104, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$2,212, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12823, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=200, hedge=26, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$553, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12825, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$552, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12829, description=Listed KS200 SEP16 270 European Call REF 249.50 (JUN16), size=200, hedge=32, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$1,097, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12832, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$550, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,680 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,681 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12839, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$546, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,681 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12842, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=US$540, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,681 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,681 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5c839677
2016-11-09 12:15:52,682 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 8170.0, 8170.0
2016-11-09 12:15:52,740 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,741 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,741 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,742 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd7c, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160012, invoice_date=09 May, 2016, account_number=CEL0003, due_date=09 June, 2016, amount_due=US$8,170, description=October 2016 Brokerage Fee, amount=US$8,170, key=Optiver Australia Pty Ltd_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5c839677, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,742 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,742 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,742 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,743 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=150, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,232, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,743 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13016, description=Listed HSCEI SEP16/DEC16 8800 European Put Time Spread REF 9,525 (AUG16), size=600, hedge=30, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$7,560, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,743 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,744 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13035, description=Listed HSCEI JUN17 9600 European Straddle REF 9,725 (AUG16), size=200, hedge=8, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,496, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,744 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,744 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,744 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,744 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Seller - Nomura International Plc - Mathieu Bonhomme, fee=HK$2,400, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,744 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,744 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,745 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,745 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=200, hedge=3, reference=Seller - Nomura International Plc - Mathieu Bonhomme, fee=HK$2,436, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,745 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,745 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,745 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,746 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@63c99f7
2016-11-09 12:15:52,746 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 17124.0, 17124.0
2016-11-09 12:15:52,787 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,788 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,788 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,788 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd83, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160096, invoice_date=09 September, 2016, account_number=CEL0001, due_date=09 October, 2016, amount_due=HK$17,124, description=October 2016 Brokerage Fee, amount=HK$17,124, key=Nomura International Plc_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@63c99f7, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,788 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,789 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,789 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,789 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12893, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=1000, hedge=100, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$2,045, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,790 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,790 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,790 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,790 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12895, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=600, hedge=60, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$1,227, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,790 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,790 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,791 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12901, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=400, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$863, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,791 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Jun-16, tradeId=CELERAEQ-2016-12902, description=Listed KS200 JUL16/SEP16 247.50 -1/1 European Straddle Time Spread REF 252 (SEP16), size=400, hedge=50, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$873, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,791 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,792 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Jun-16, tradeId=CELERAEQ-2016-12937, description=Listed KS200 DEC16 220 European Put REF 240 (SEP16), size=100, hedge=22, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$410, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,792 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,792 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,792 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,792 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1c92a549
2016-11-09 12:15:52,792 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 5418.0, 5418.0
2016-11-09 12:15:52,836 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,836 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,836 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,836 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd8a, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160050, invoice_date=09 July, 2016, account_number=CEL0006, due_date=09 August, 2016, amount_due=US$5,418, description=October 2016 Brokerage Fee, amount=US$5,418, key=J.P. Morgan Securities PLC_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1c92a549, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,837 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=2250, hedge=30, reference=Seller - Thierry, fee=HK$34,200, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,837 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,838 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@31006a75
2016-11-09 12:15:52,838 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 34200.0, 34200.0
2016-11-09 12:15:52,884 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,884 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,884 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,885 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd8d, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160169, invoice_date=09 November, 2016, account_number=CEL0030, due_date=09 December, 2016, amount_due=HK$34,200, description=October 2016 Brokerage Fee, amount=HK$34,200, key=Thierry_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@31006a75, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,885 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,885 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,885 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,886 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13087, description=Listed HSCEI DEC16 Future Spread, size=20, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$600, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,886 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13096, description=Listed HSCEI DEC17 7400 European Put REF 10,150 (DEC16), size=100, hedge=14, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$1,710, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,886 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,886 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13098, description=Listed HSCEI DEC17 6600 European Put REF 10,075 (SEP16), size=100, hedge=7, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$1,605, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,887 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13101, description=Listed HSCEI DEC17 7400 European Put REF 9,675 (SEP16), size=100, hedge=14, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$1,710, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,887 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13102, description=Listed HSCEI SEP16/DEC16 Future Spread REF 9,713 (SEP16), size=28, hedge=0, reference=Seller - Celera Financial Limited - Xinli Song, fee=HK$420, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,887 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,887 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13105, description=Listed HSCEI SEP16Future, size=7, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$105, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,888 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13127, description=Listed HSCEI DEC16 Future, size=10, hedge=0, reference=Buyer - Celera Financial Limited - Xinli Song, fee=HK$150, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,888 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,888 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7a3643e3
2016-11-09 12:15:52,889 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Celera Financial Limited, 6300.0, 6300.0
2016-11-09 12:15:52,938 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,938 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,938 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,939 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd96, company=Celera Financial Limited, address=11G, 51 Man Yue Street, Hunghom, Hong Kong, attn=, sentTo=cflbrokerage@celera-group.com, invoice_number=CEL-160140, invoice_date=09 October, 2016, account_number=CEL0013, due_date=09 November, 2016, amount_due=HK$6,300, description=October 2016 Brokerage Fee, amount=HK$6,300, key=Celera Financial Limited_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Celera Financial Limited_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7a3643e3, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,939 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12955, description=Listed KS200 DEC17 260/290 1/-2 European Call Ratio REF 245 (SEP16), size=300, hedge=10, reference=Buyer - Morgan Stanley & Co. International PLC - Andre Pinto, fee=US$426, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,939 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,940 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@28fa541
2016-11-09 12:15:52,940 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 426.0, 426.0
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,971 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f8327cb279e0bafd99, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160080, invoice_date=09 August, 2016, account_number=CEL0015, due_date=09 September, 2016, amount_due=US$426, description=October 2016 Brokerage Fee, amount=US$426, key=Morgan Stanley & Co. International PLC_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@28fa541, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:52,971 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,972 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12958, description=Listed KS200 SEP16/DEC16 220 European Put Time Spread REF 247 (SEP16), size=200, hedge=14, reference=Buyer - UBS AG London Branch - Jingshu Li, fee=US$808, lastModified=Wed Nov 09 12:15:52 HKT 2016]
2016-11-09 12:15:52,972 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:52,972 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:52,972 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:52,972 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@794cb26b
2016-11-09 12:15:52,972 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 808.0, 808.0
2016-11-09 12:15:53,004 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,004 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,005 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,005 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafd9c, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160076, invoice_date=09 August, 2016, account_number=CEL0007, due_date=09 September, 2016, amount_due=US$808, description=October 2016 Brokerage Fee, amount=US$808, key=UBS AG London Branch_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@794cb26b, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,005 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,005 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,005 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,006 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13056, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,006 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13057, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=200, hedge=0, reference=Buyer - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$3,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,006 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,006 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=800, hedge=0, reference=Seller - NH Investment & Securities Co Ltd - Daehyuk Yoo, fee=HK$12,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,007 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,007 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,007 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,007 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@213012a0
2016-11-09 12:15:53,007 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== NH INVESTMENT & SECURITIES CO LTD_HKD_SEP16, 15000.0, 18000.0
2016-11-09 12:15:53,020 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafda1, company=NH Investment & Securities Co Ltd, address=, attn=8227687681, sentTo=jackie5@nhwm.com , invoice_number=, invoice_date=09 September, 2016, account_number=CEL0024, due_date=09 October, 2016, amount_due=HK$18,000, description=October 2016 Brokerage Fee, amount=HK$18,000, key=NH Investment & Securities Co Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/NH Investment & Securities Co Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@213012a0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12997, description=Listed HSCEI MAR17 7600 European Put REF 9,075 (AUG16), size=200, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,784, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=500, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,384, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=450, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$5,640, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,024 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,024 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,024 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=200, hedge=36, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,832, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,024 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,024 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,025 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13006, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,250 (AUG16), size=108, hedge=7, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,380, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,025 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=100, hedge=19, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,428, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,025 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=200, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,496, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=504, hedge=63, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$6,804, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,026 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13014, description=Listed HSCEI DEC18 6600/8400 -2/1 European Put Ratio REF 9,300 (AUG16), size=300, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,660, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,026 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,460, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,027 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=100, hedge=9, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,308, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,027 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,028 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=200, hedge=38, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,856, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,028 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,028 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,028 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,028 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$6,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,028 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,029 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,029 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,029 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6cc8da1c
2016-11-09 12:15:53,029 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 46032.0, 46032.0
2016-11-09 12:15:53,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,077 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdb0, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160090, invoice_date=09 September, 2016, account_number=CEL0006, due_date=09 October, 2016, amount_due=HK$46,032, description=October 2016 Brokerage Fee, amount=HK$46,032, key=J.P. Morgan Securities PLC_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6cc8da1c, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13074, description=Listed HSCEI DEC16 8000/9000 -2/1 European Put Ratio REF 9,575 (SEP16), size=300, hedge=8, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,696, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13078, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=400, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$4,896, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,080 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,200, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,081 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13082, description=Listed HSI DEC17 15000 European Put REF 23,600 (SEP16), size=100, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,272, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,081 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,081 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,081 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,082 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13083, description=Listed HSCEI DEC18 10000/12000 1/-2 European Call Ratio REF 9,850 (SEP16), size=150, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,860, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,082 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,082 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,082 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13103, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,750 (SEP16), size=200, hedge=5, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,460, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,083 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=253, hedge=43, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,552, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,083 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,084 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Sep-16, tradeId=CELERAEQ-2016-13113, description=Listed HSCEI DEC17 8400 European Put REF 9,800 (SEP16), size=200, hedge=52, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$3,024, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,084 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13118, description=Listed HSCEI MAR17 8800 European Put REF 9,750 (SEP16), size=100, hedge=25, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,500, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,084 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,085 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=600, hedge=12, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,344, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,085 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13125, description=Listed HSCEI DEC18 10800/12600 -1/2 European Call Ratio REF 10,000 (SEP16), size=450, hedge=18, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$5,616, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,085 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,086 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3451fc88
2016-11-09 12:15:53,086 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 36420.0, 36420.0
2016-11-09 12:15:53,130 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,131 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,131 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,131 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdbd, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160117, invoice_date=09 October, 2016, account_number=CEL0006, due_date=09 November, 2016, amount_due=HK$36,420, description=October 2016 Brokerage Fee, amount=HK$36,420, key=J.P. Morgan Securities PLC_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3451fc88, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,132 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,132 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,133 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=306, hedge=26, reference=Buyer - Citigroup Global Markets Hong Kong Limited - Mohamed Lemsitef, fee=HK$4,980, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,133 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,133 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,133 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,134 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@717a8a76
2016-11-09 12:15:53,134 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 4980.0, 4980.0
2016-11-09 12:15:53,168 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,168 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,169 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,169 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdc0, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160149, invoice_date=09 November, 2016, account_number=CEL0009, due_date=09 December, 2016, amount_due=HK$4,980, description=October 2016 Brokerage Fee, amount=HK$4,980, key=Citigroup Global Markets Hong Kong Limited_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@717a8a76, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,170 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13017, description=Listed KS200 JUN18 210 European Put REF 257.50 (SEP16), size=200, hedge=36, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$761, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,170 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,171 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13019, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=465, hedge=85, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$590, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,171 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,171 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,171 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,172 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13040, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=13, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$375, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,172 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,174 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,174 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,175 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13041, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258.50 (SEP16), size=300, hedge=13, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Patrice Rageau, fee=US$375, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,175 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,175 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,176 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Aug-16, tradeId=CELERAEQ-2016-13043, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258 (SEP16), size=900, hedge=36, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=US$1,128, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13044, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=400, hedge=86, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$747, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13045, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=500, hedge=107, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$934, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,178 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,178 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@35536760
2016-11-09 12:15:53,178 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== BNP PARIBAS ARBITRAGE S.N.C.*_USD_SEP16, 6051.0, 4910.0
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,194 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdc9, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0014, due_date=09 October, 2016, amount_due=US$4,910, description=October 2016 Brokerage Fee, amount=US$4,910, key=BNP Paribas Arbitrage S.N.C_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@35536760, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,194 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,195 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12998, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,175 (AUG16), size=125, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,862, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,195 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=50, hedge=12, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$868, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,195 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13001, description=Listed HSCEI MAR17 9000 European Straddle REF 8,975 (AUG16), size=50, hedge=2, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$728, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,195 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,196 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=67, hedge=12, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,106, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,196 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=50, hedge=2, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$728, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,196 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=58, hedge=11, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$966, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,196 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,197 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,197 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=50, hedge=11, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$854, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,197 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,197 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13027, description=Listed HSCEI DEC16 7000/8800 -3/1 European Put Ratio REF 9,650 (AUG16), size=120, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,722, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,198 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,904, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,198 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13037, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,198 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,199 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=74, hedge=29, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,442, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,199 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,199 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,200 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13066, description=Listed HSCEI MAR17 9600 European Straddle REF 9,475 (SEP16), size=50, hedge=1, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$714, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,200 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=250, hedge=11, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,654, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,200 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,201 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5f3f57ff
2016-11-09 12:15:53,201 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 19026.0, 19026.0
2016-11-09 12:15:53,250 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,250 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,250 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,251 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdda, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160091, invoice_date=09 September, 2016, account_number=CEL0005, due_date=09 October, 2016, amount_due=HK$19,026, description=October 2016 Brokerage Fee, amount=HK$19,026, key=Liquid Capital Australia Pty Ltd._HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5f3f57ff, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,251 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,251 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,251 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,251 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Jun-16, tradeId=CELERAEQ-2016-12902, description=Listed KS200 JUL16/SEP16 247.50 -1/1 European Straddle Time Spread REF 252 (SEP16), size=400, hedge=50, reference=Seller - Citigroup Global Markets Hong Kong Limited - Robert Gasper, fee=US$1,091, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,251 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,252 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,252 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,252 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5503c7d
2016-11-09 12:15:53,252 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 1091.0, 1091.0
2016-11-09 12:15:53,288 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,288 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,288 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,289 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafddd, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160062, invoice_date=09 July, 2016, account_number=CEL0009, due_date=09 August, 2016, amount_due=US$1,091, description=October 2016 Brokerage Fee, amount=US$1,091, key=Citigroup Global Markets Hong Kong Limited_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5503c7d, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,289 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=500, hedge=85, reference=Seller - Hyundai Securities - Sangyeop Shin, fee=HK$14,625, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,289 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,290 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4491eaeb
2016-11-09 12:15:53,290 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Hyundai Securities, 14625.0, 14625.0
2016-11-09 12:15:53,320 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,320 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,320 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,321 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafde0, company=Hyundai Securities, address=, attn=82261141866, sentTo=syshin09@stockmarket.co.kr, invoice_number=CEL-160144, invoice_date=09 October, 2016, account_number=CEL0020, due_date=09 November, 2016, amount_due=HK$14,625, description=October 2016 Brokerage Fee, amount=HK$14,625, key=Hyundai Securities_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Hyundai Securities_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4491eaeb, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,321 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=125, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,321 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,322 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=46, hedge=5, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,322 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12975, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=33, hedge=6, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,322 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=60, hedge=3, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=200, hedge=38, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=100, hedge=8, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=54, hedge=3, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5df7a065
2016-11-09 12:15:53,338 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,338 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,338 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,339 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafde9, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0012, due_date=09 September, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, key=Liquid Capital Hong Kong Limited_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5df7a065, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,339 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12865, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=110, hedge=6, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$1,740, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,339 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-May-16, tradeId=CELERAEQ-2016-12872, description=Listed HSCEI JUN16 8600/9000 European Call Spread REF 8,350 (MAY16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=9, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,340 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12882, description=Listed HSCEI SEP16 8200 European Straddle REF 8,275 (MAY16), size=50, hedge=8, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,340 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,341 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,341 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,341 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@16029e2f
2016-11-09 12:15:53,341 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Hong Kong Limited, 1740.0, 1740.0
2016-11-09 12:15:53,383 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,383 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,383 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdf0, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160033, invoice_date=09 June, 2016, account_number=CEL0012, due_date=09 July, 2016, amount_due=HK$1,740, description=October 2016 Brokerage Fee, amount=HK$1,740, key=Liquid Capital Hong Kong Limited_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@16029e2f, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,384 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,384 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,384 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Jun-16, tradeId=CELERAEQ-2016-12892, description=Listed KS200 DEC17 190/220 -2/1 European Put Ratio REF 242.50 (JUN16), size=300, hedge=0, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,384 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,385 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Jun-16, tradeId=CELERAEQ-2016-12894, description=Listed KS200 JUN17 200/290 1/-1 European Risk Reversal REF 243.50 (JUN16), size=400, hedge=40, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,022, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12897, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=400, hedge=35, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$529, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12898, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 246.50 (JUN16), size=800, hedge=70, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,061, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jun-16, tradeId=CELERAEQ-2016-12899, description=Listed KS200 DEC16 200 European Put REF 247 (JUN16), size=200, hedge=60, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$531, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,388 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12900, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=800, hedge=4, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,079, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,388 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,388 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,388 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,388 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12900, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=800, hedge=4, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$1,079, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,388 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,388 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,389 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,389 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jun-16, tradeId=CELERAEQ-2016-12901, description=Listed KS200 JUL16/SEP16 247.5 -1/1 European Straddle Time Spread REF 249 (SEP16), size=400, hedge=2, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=US$539, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,389 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,389 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,390 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@57fce8b
2016-11-09 12:15:53,390 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== OPTIVER AUSTRALIA PTY LTD_USD_JUL16, 4761.0, 5840.0
2016-11-09 12:15:53,407 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,407 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,407 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,408 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdfa, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 July, 2016, account_number=CEL0003, due_date=09 August, 2016, amount_due=US$5,840, description=October 2016 Brokerage Fee, amount=US$5,840, key=Optiver Australia Pty Ltd_KRW_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@57fce8b, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,408 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,408 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,408 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,408 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13186, description=Listed KS200 DEC17 200 European Put REF 256 (DEC16), size=250, hedge=20, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=US$1,131, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,408 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,409 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,409 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,409 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4ab9d160
2016-11-09 12:15:53,409 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 1131.0, 1131.0
2016-11-09 12:15:53,446 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,446 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,446 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,447 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafdfd, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160153, invoice_date=09 November, 2016, account_number=CEL0006, due_date=09 December, 2016, amount_due=US$1,131, description=October 2016 Brokerage Fee, amount=US$1,131, key=J.P. Morgan Securities PLC_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4ab9d160, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,447 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,447 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,447 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13095, description=Listed HSCEI DEC17 10000 European Straddle REF 10,075 (SEP16), size=200, hedge=8, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$5,038, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,447 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,447 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,448 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,448 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13134, description=Listed HSI DEC17 24000 European Straddle REF 23,750 (SEP16), size=200, hedge=3, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$11,875, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,448 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,448 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,448 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,448 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@42dd7d82
2016-11-09 12:15:53,449 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 16913.0, 16913.0
2016-11-09 12:15:53,486 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,486 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,486 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,487 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe01, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160133, invoice_date=09 October, 2016, account_number=CEL0007, due_date=09 November, 2016, amount_due=HK$16,913, description=October 2016 Brokerage Fee, amount=HK$16,913, key=UBS AG London Branch_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@42dd7d82, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,487 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,487 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,487 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12859, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=750, hedge=42, reference=Buyer - Morgan Stanley & Co. International PLC - Schenken Wong, fee=HK$11,754, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,488 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12885, description=Listed HSCEI DEC17 8800 European Call REF 8,500 (MAY16), size=150, hedge=66, reference=Seller - Morgan Stanley & Co. International PLC - Louis Fortin, fee=HK$3,042, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,488 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,489 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@cb318ac
2016-11-09 12:15:53,489 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Morgan Stanley & Co. International PLC, 14796.0, 14796.0
2016-11-09 12:15:53,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe05, company=Morgan Stanley & Co. International PLC, address= 25 Cabot Square,  Canary Wharf, London, E14 4QA, attn=, sentTo=brokerage.payables@morganstanley.com, invoice_number=CEL-160043, invoice_date=09 June, 2016, account_number=CEL0015, due_date=09 July, 2016, amount_due=HK$14,796, description=October 2016 Brokerage Fee, amount=HK$14,796, key=Morgan Stanley & Co. International PLC_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Morgan Stanley & Co. International PLC_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@cb318ac, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,527 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,527 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,527 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=100, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,650, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,528 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,528 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,528 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,528 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jun-16, tradeId=CELERAEQ-2016-12908, description=Listed HSCEI DEC17 7000/8400 2/-1 European Put Ratio REF 8,400 (JUN16), size=180, hedge=3, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,745, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,528 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,528 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,529 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,529 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12916, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$4,515, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,529 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,529 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,529 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,529 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12917, description=Listed HSCEI JUN16 8800/9000 -1/2 European Call Ratio REF 8,400 (JUN16), size=300, hedge=1, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,204, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,529 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,530 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,530 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,530 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jun-16, tradeId=CELERAEQ-2016-12918, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,350 (JUN16), size=400, hedge=12, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,180, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,530 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,530 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,530 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,531 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12919, description=Listed HSCEI AUG16/JUN17 7000 European Put Time Spread REF 8,275 (JUN16), size=200, hedge=12, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,180, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,531 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Jun-16, tradeId=CELERAEQ-2016-12921, description=Listed HSCEI DEC16/JUN17 7000 European Put Time Spread REF 8,300 (JUN16), size=400, hedge=10, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,150, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,531 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,532 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Jun-16, tradeId=CELERAEQ-2016-12923, description=Listed HSCEI JUN16 8400/8600 European Call Spread REF 8,325 (JUN16), size=106, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,740, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,532 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,532 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,532 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,532 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Jun-16, tradeId=CELERAEQ-2016-12929, description=Listed HSI JUL16 22000/23200 1/-3 European Call Ratio REF 20,800 (JUN16), size=400, hedge=5, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$6,075, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,532 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,533 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,533 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,533 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12933, description=Listed HSI JUL16 20000 European Straddle REF 20,150 (JUN16), size=140, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,205, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,533 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,533 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,533 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,533 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Jun-16, tradeId=CELERAEQ-2016-12934, description=Listed HSCEI MAR17 9000/10400 European Call Spread REF 8,250 (JUN16), size=200, hedge=25, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,375, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,534 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jun-16, tradeId=CELERAEQ-2016-12936, description=Listed HSI JUL16 21000 European Call REF 20,200 (JUN16), size=200, hedge=48, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$3,720, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,534 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12938, description=Listed HSCEI DEC16 8600 European Call REF 8,475 (JUL16), size=49, hedge=24, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$1,095, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,534 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,535 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jun-16, tradeId=CELERAEQ-2016-12939, description=Listed HSCEI DEC16 9200 European Call REF 8,500 (JUL16), size=52, hedge=16, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$272, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,535 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12940, description=Listed HSCEI JUN18 11600 European Call REF 8,650 (JUL16), size=300, hedge=48, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$5,220, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,535 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,536 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Jun-16, tradeId=CELERAEQ-2016-12942, description=Listed HSI DEC16 24000 European Call REF 20,775 (JUL16), size=50, hedge=7, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=HK$855, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,536 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,536 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,536 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,536 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@64eeddd8
2016-11-09 12:15:53,537 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 50181.0, 50181.0
2016-11-09 12:15:53,583 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,583 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,584 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,584 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe17, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160054, invoice_date=09 July, 2016, account_number=CEL0003, due_date=09 August, 2016, amount_due=HK$50,181, description=October 2016 Brokerage Fee, amount=HK$50,181, key=Optiver Australia Pty Ltd_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@64eeddd8, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,584 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,584 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,584 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,584 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12821, description=Listed KS200 SEP16 215/270 -1/1 European Risk Reversal REF 250 (JUN16), size=800, hedge=104, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$1,770, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,585 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12824, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=10, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$442, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,585 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12825, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$441, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,585 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,586 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,586 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12829, description=Listed KS200 SEP16 270 European Call REF 249.50 (JUN16), size=200, hedge=32, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,586 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,586 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,586 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,586 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12832, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,586 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,587 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,587 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,587 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12833, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249.50 (JUN16), size=300, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=US$0, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,587 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,587 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,587 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,587 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12839, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$437, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,588 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12842, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 248.50 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$432, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,588 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,588 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Apr-16, tradeId=CELERAEQ-2016-12849, description=Listed KS200 DEC17 270/300 1/-2 European Call Ratio REF 249 (JUN16), size=300, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$434, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,589 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,589 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,589 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,589 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@621392ea
2016-11-09 12:15:53,589 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 3956.0, 3956.0
2016-11-09 12:15:53,633 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,634 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,634 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,634 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe22, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160017, invoice_date=09 May, 2016, account_number=CEL0006, due_date=09 June, 2016, amount_due=US$3,956, description=October 2016 Brokerage Fee, amount=US$3,956, key=J.P. Morgan Securities PLC_KRW_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@621392ea, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,634 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,635 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12869, description=Listed HSCEI DEC17 6400/8400 -2/1 European Put Ratio REF 8,400 (MAY16), size=171, hedge=4, reference=Seller - UBS AG London Branch - Adrien Bordat, fee=HK$1,750, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,635 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,635 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,635 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,636 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12888, description=Listed HSCEI DEC17 7200/10000 1/-1 European Risk Reversal REF 8,325 (JUN16), size=800, hedge=224, reference=Buyer - UBS AG London Branch - Adrien Bordat, fee=HK$11,120, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,636 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,636 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,636 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,637 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4e51eda7
2016-11-09 12:15:53,637 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== UBS AG London Branch, 12870.0, 12870.0
2016-11-09 12:15:53,675 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,676 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,676 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,677 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe26, company=UBS AG London Branch, address=1 Broadgate, London, ECEM 2BS, United Kingdom, attn=SH-UBS-invoices@ubs.com, sentTo=SH-UBS-invoices@ubs.com, invoice_number=CEL-160039, invoice_date=09 June, 2016, account_number=CEL0007, due_date=09 July, 2016, amount_due=HK$12,870, description=October 2016 Brokerage Fee, amount=HK$12,870, key=UBS AG London Branch_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/UBS AG London Branch_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4e51eda7, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=500, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$6,432, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=200, hedge=12, reference=Buyer - Nomura International Plc - Sudhanshu Kajbaje, fee=HK$2,544, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=167, hedge=15, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,184, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@24e1e90a
2016-11-09 12:15:53,680 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 11160.0, 11160.0
2016-11-09 12:15:53,734 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,744 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,745 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,745 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe2b, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160075, invoice_date=09 August, 2016, account_number=CEL0001, due_date=09 September, 2016, amount_due=HK$11,160, description=October 2016 Brokerage Fee, amount=HK$11,160, key=Nomura International Plc_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@24e1e90a, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,745 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,746 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,746 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,746 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12846, description=Listed HSCEI APR16/MAY16 8800/9000 -1/1 European Call Diagonal REF 9,000 (APR16), size=40, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C* - Matthieu Barry, fee=HK$376, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,746 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,746 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,746 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1a3c4b3e
2016-11-09 12:15:53,747 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: BNP Paribas Arbitrage S.N.C*
2016-11-09 12:15:53,747 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,747 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,747 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,747 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13046, description=HSCEI DEC18 Forward (OTC-Like) REF 9,530 (AUG16), size=200, hedge=200, reference=Buyer - Shinhan Investment Corp. - JaeSeong Yun, fee=HK$9,530, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,748 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,748 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,748 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,748 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4746fb8c
2016-11-09 12:15:53,748 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== SHINHAN INVESTMENT CORP._HKD_SEP16, 4766.0, 9530.0
2016-11-09 12:15:53,762 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,762 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe30, company=Shinhan Investment Corp., address=, attn=82837722249, sentTo=global_fo@shinhan.com, invoice_number=, invoice_date=09 September, 2016, account_number=CEL0028, due_date=09 October, 2016, amount_due=HK$9,530, description=October 2016 Brokerage Fee, amount=HK$9,530, key=Shinhan Investment Corp._HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Shinhan Investment Corp._HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4746fb8c, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,763 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,763 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,763 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Aug-16, tradeId=CELERAEQ-2016-12997, description=Listed HSCEI MAR17 7600 European Put REF 9,075 (AUG16), size=200, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,763 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,764 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-13000, description=Listed HSCEI JUN17 9000 European Straddle REF 8,975 (AUG16), size=100, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,764 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13002, description=Listed HSCEI JUN18 11600 European Call REF 9,025 (AUG16), size=300, hedge=54, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,900, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,764 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,765 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13003, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=112, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$896, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,765 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Aug-16, tradeId=CELERAEQ-2016-13004, description=Listed HSCEI MAR17 7600 European Put REF 9,000 (AUG16), size=300, hedge=54, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,400, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,765 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Aug-16, tradeId=CELERAEQ-2016-13005, description=Listed HSCEI DEC16 8600/8800 European Put Spread REF 9,100 (AUG16), size=200, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,765 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,766 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Aug-16, tradeId=CELERAEQ-2016-13009, description=Listed HSI JUN17 21000 European Put REF 22,400 (AUG16), size=200, hedge=74, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,766 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Aug-16, tradeId=CELERAEQ-2016-13010, description=Listed HSCEI DEC18 7400 European Put REF 9,275 (AUG16), size=1200, hedge=288, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$15,600, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,766 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Aug-16, tradeId=CELERAEQ-2016-13011, description=Listed HSCEI JUN18 7000 European Put REF 9,325 (AUG16), size=100, hedge=19, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,766 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13012, description=Listed HSCEI JUN17 9200 European Straddle REF 9,325 (AUG16), size=400, hedge=16, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13022, description=Listed HSCEI JUN17 9400 European Straddle REF 9,575 (AUG16), size=300, hedge=15, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$2,400, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,767 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,767 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13024, description=Listed HSCEI JUN17 9600 European Straddle REF 9,650 (AUG16), size=400, hedge=10, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13026, description=Listed HSCEI MAR17 9600 European Straddle REF 9,650 (AUG16), size=200, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13030, description=Listed HSCEI MAR17 9600 European Straddle REF 9,750 (AUG16), size=506, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,048, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,768 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,768 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Aug-16, tradeId=CELERAEQ-2016-13032, description=Listed HSI MAR17 20000 European Put REF 22,925 (AUG16), size=100, hedge=19, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13036, description=Listed HSCEI DEC17 9600 European Straddle REF 9,725 (AUG16), size=600, hedge=30, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$7,800, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,769 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,769 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Aug-16, tradeId=CELERAEQ-2016-13039, description=Listed HSCEI DEC17 9600 European Straddle REF 9,600 (AUG16), size=300, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$3,900, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13047, description=Listed HSI DEC17 21000/22000 1/1 European Strangle REF 22,775 (AUG16), size=104, hedge=11, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$2,288, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,770 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Karim Frahi, fee=HK$4,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,770 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,771 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=HK$4,000, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,771 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,771 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,771 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,779 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13059, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=400, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,780 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13060, description=Listed HSCEI JUN17 9600 European Straddle REF 9,525 (SEP16), size=650, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,780 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13064, description=Listed HSCEI SEP16 9400/9600 1/1 European Strangle REF 9,500 (SEP16), size=600, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$4,800, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,780 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,781 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Aug-16, tradeId=CELERAEQ-2016-13065, description=Listed HSI JUN17 22000 European Put REF 22,750 (SEP16), size=100, hedge=43, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,781 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13067, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,781 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=1500, hedge=66, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,500, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,782 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13068, description=Listed HSCEI DEC17 7400/8800 -1.5/1 European Put Ratio REF 9,550 (SEP16), size=1250, hedge=55, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$8,750, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,782 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Aug-16, tradeId=CELERAEQ-2016-13069, description=Listed HSI JUN17 22000 European Put REF 22,925 (SEP16), size=100, hedge=41, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,783 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13071, description=Listed HSCEI DEC17 7400/10800 -1/1 European Risk Reversal REF 9,550 (SEP16), size=600, hedge=150, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Sylvain Colon, fee=HK$4,800, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,783 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,784 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=200, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,784 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,784 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,784 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,785 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3a988299
2016-11-09 12:15:53,785 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 112482.0, 112482.0
2016-11-09 12:15:53,842 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,843 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,843 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,843 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe51, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160100, invoice_date=09 September, 2016, account_number=CEL0014, due_date=09 October, 2016, amount_due=HK$112,482, description=October 2016 Brokerage Fee, amount=HK$112,482, key=BNP Paribas Arbitrage S.N.C_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3a988299, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,843 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,844 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,844 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,844 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12961, description=Listed KS200 MAR17 210/280 1/-1 European Risk Reversal REF 250 (SEP16), size=500, hedge=60, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$818, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,844 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,844 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,844 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,845 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@66a8751a
2016-11-09 12:15:53,845 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 818.0, 818.0
2016-11-09 12:15:53,875 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,875 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,875 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,876 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe54, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160081, invoice_date=09 August, 2016, account_number=CEL0018, due_date=09 September, 2016, amount_due=US$818, description=October 2016 Brokerage Fee, amount=US$818, key=Société Générale (HK) Limited_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@66a8751a, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,876 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=132, hedge=4, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,020, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,876 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12965, description=Listed HSCEI JUL16/AUG16 8600/8800 1/-1 European Call Diagonal REF 8,925 (JUL16), size=100, hedge=11, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,310, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,876 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,876 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=54, hedge=6, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,140, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,877 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=23, hedge=5, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$510, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,877 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=100, hedge=19, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$1,990, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,877 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,877 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2e4b5da1
2016-11-09 12:15:53,878 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== VIVIENNE COURT TRADING PTY LTD_HKD_AUG16, 8370.0, 8970.0
2016-11-09 12:15:53,889 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,889 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,890 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,890 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe5b, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=, invoice_date=09 August, 2016, account_number=CEL0004, due_date=09 September, 2016, amount_due=HK$8,970, description=October 2016 Brokerage Fee, amount=HK$8,970, key=Vivienne Court Trading Pty Ltd_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2e4b5da1, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,890 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,890 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,891 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-Aug-16, tradeId=CELERAEQ-2016-12999, description=Listed HSI DEC16 19800 European Put REF 21,750 (AUG16), size=200, hedge=48, reference=Seller - Mirae Asset Securities Co. Ltd - Sanghyun Lee, fee=HK$3,720, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,891 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=300, hedge=108, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$6,120, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,891 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,892 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,892 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=300, hedge=117, reference=Buyer - Mirae Asset Securities Co. Ltd - EunHee Choi, fee=HK$6,255, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,892 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,892 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,892 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,892 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@33f2eb04
2016-11-09 12:15:53,892 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Mirae Asset Securities Co. Ltd, 16095.0, 16095.0
2016-11-09 12:15:53,927 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,927 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,927 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,928 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe60, company=Mirae Asset Securities Co. Ltd, address=, attn=822 3774 6986, sentTo=wonjun.hwand@miraeasset.com , invoice_number=CEL-160110, invoice_date=09 September, 2016, account_number=CEL0019, due_date=09 October, 2016, amount_due=HK$16,095, description=October 2016 Brokerage Fee, amount=HK$16,095, key=Mirae Asset Securities Co. Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Mirae Asset Securities Co. Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@33f2eb04, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,928 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=01-Sep-16, tradeId=CELERAEQ-2016-13073, description=Listed HSCEI DEC17 11600/14400 1/-2 European Call Ratio REF 9,525 (SEP16), size=300, hedge=10, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$4,340, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,928 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13088, description=Listed HSCEI OCT16 11000 European Call REF 10,000 (SEP16), size=200, hedge=24, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,136, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,928 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,929 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13096, description=Listed HSCEI DEC17 7400 European Put REF 10,150 (DEC16), size=100, hedge=14, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,596, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,929 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13097, description=Listed HSCEI SEP16 10000 European Put REF 10,150 (SEP16), size=49, hedge=18, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$938, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,929 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=25, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$434, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,929 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,930 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13126, description=Listed HSCEI DEC17 8000/12000 1/-1 European Risk Reversal REF 10,000 (SEP16), size=200, hedge=46, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,444, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,930 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=300, hedge=45, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$4,830, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,930 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Sep-16, tradeId=CELERAEQ-2016-13144, description=Listed HSCEI DEC16 9800/10600 1/-2 European Call Ratio REF 9,825 (OCT16), size=201, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,463, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,930 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,931 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,931 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@74badf19
2016-11-09 12:15:53,931 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 20181.0, 20181.0
2016-11-09 12:15:53,974 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:53,974 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:53,974 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,975 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2f9327cb279e0bafe6a, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160125, invoice_date=09 October, 2016, account_number=CEL0005, due_date=09 November, 2016, amount_due=HK$20,181, description=October 2016 Brokerage Fee, amount=HK$20,181, key=Liquid Capital Australia Pty Ltd._HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@74badf19, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,975 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:53,975 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:53,975 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,976 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Mar-16, tradeId=CELERAEQ-2016-12796, description=Listed HSCEI DEC16 9000/10800 European Call Spread REF 8,900 (APR16), size=50, hedge=8, reference=Seller - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$696, lastModified=Wed Nov 09 12:15:53 HKT 2016]
2016-11-09 12:15:53,976 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:53,976 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:53,976 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:53,977 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@41f23499
2016-11-09 12:15:53,977 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 696.0, 696.0
2016-11-09 12:15:54,010 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,011 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,011 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,011 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe6d, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160009, invoice_date=09 April, 2016, account_number=CEL0006, due_date=09 May, 2016, amount_due=HK$696, description=October 2016 Brokerage Fee, amount=HK$696, key=J.P. Morgan Securities PLC_HKD_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@41f23499, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,012 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,012 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,012 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,012 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=03-May-16, tradeId=CELERAEQ-2016-12857, description=Listed HSCEI SEP16 7000/8000/9000 1/-2/1 European Put Butterfly REF 8,775 (MAY16), size=800, hedge=20, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$8,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,012 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,012 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,013 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,013 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12860, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=250, hedge=14, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,640, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,013 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,013 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,013 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,013 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=310, hedge=17, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$3,270, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,013 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,014 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12870, description=Listed HSCEI DEC16 10400/11200 1/-1.5 European Call Ratio REF 8,400 (MAY16), size=125, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,260, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,014 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12871, description=Listed HSCEI DEC16 10400/11200 1/-1.5 European Call Ratio REF 8,400 (MAY16), size=125, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,260, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,014 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,015 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12876, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=200, hedge=9, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,090, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,015 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12877, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,015 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,016 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-May-16, tradeId=CELERAEQ-2016-12878, description=Listed HSCEI SEP16/DEC16 7600 European Put Time Spread REF 8,250 (MAY16), size=100, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,016 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=100, hedge=2, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,016 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,016 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3d7314b3
2016-11-09 12:15:54,017 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== ECLIPSE FUTURES (HK) LIMITED_HKD_JUN16, 20460.0, 21720.0
2016-11-09 12:15:54,029 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,029 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,029 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,030 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe78, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0008, due_date=09 July, 2016, amount_due=HK$21,720, description=October 2016 Brokerage Fee, amount=HK$21,720, key=Eclipse Futures (HK) Limited_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3d7314b3, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,030 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,030 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,030 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,030 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12807, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=200, hedge=78, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$4,170, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,031 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,031 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,031 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,031 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=25, hedge=5, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$450, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,031 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,031 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,032 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,032 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Apr-16, tradeId=CELERAEQ-2016-12817, description=Listed HSCEI JUN16 8600/10000 1/1 European Strangle REF 9,100 (APR16), size=52, hedge=10, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$870, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,032 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,032 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,032 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,032 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12831, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,032 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,033 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=200, hedge=14, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,033 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12848, description=Listed HSCEI DEC16 9600/10600 1/-2 European Call Ratio REF 8,900 (APR16), size=300, hedge=2, reference=Seller - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,033 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,034 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,034 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,034 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7c0ff7a0
2016-11-09 12:15:54,034 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Hong Kong Limited, 5490.0, 5490.0
2016-11-09 12:15:54,068 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,069 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,069 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,069 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe80, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160016, invoice_date=09 May, 2016, account_number=CEL0012, due_date=09 June, 2016, amount_due=HK$5,490, description=October 2016 Brokerage Fee, amount=HK$5,490, key=Liquid Capital Hong Kong Limited_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7c0ff7a0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,069 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,070 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,070 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,070 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=492, hedge=27, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,936, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,070 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,070 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,070 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,071 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13077, description=Listed HSCEI OCT16 9600 European Straddle REF 9,675 (SEP16), size=108, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$864, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,071 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,071 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,071 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,072 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13079, description=Listed HSI JUN18 23000 European Straddle REF 23,200 (SEP16), size=100, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,072 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,072 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,072 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,073 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Sep-16, tradeId=CELERAEQ-2016-13080, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=500, hedge=26, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,500, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,073 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,073 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,073 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,074 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13084, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$945, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,074 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,074 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,074 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,075 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Sep-16, tradeId=CELERAEQ-2016-13085, description=Listed HSCEI JUN18 7200/9200 -1.5/1 European Put Ratio REF 9,825 (SEP16), size=135, hedge=7, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$945, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,075 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,075 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,075 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,075 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13104, description=Listed HSCEI DEC17 6800/8000 European Put Spread REF 9,750 (SEP16), size=1000, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,076 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13109, description=Listed HSCEI DEC18 8000/9200/11200 -1/2/-1 European Call Butterfly REF 9,550 (SEP16), size=200, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,100, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,076 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13110, description=Listed HSCEI OCT16 10200 European Call REF 9,550 (SEP16), size=125, hedge=25, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,077 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13111, description=Listed HSCEI DEC16 8400 European Put REF 9,575 (SEP16), size=600, hedge=102, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,800, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,077 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,078 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13112, description=Listed HSI SEP16 22600/23200 -2/1 European Put Ratio REF 23,200 (SEP16), size=450, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,850, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,078 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,078 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,078 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13119, description=Listed HSCEI MAR17 5800/7800 -2/1 European Put Ratio REF 9,750 (SEP16), size=300, hedge=6, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,400, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,078 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,079 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13126, description=Listed HSCEI DEC17 8000/12000 1/-1 European Risk Reversal REF 10,000 (SEP16), size=200, hedge=46, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,079 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,079 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,079 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,080 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=100, hedge=19, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$550, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,080 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,080 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,080 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,081 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13132, description=Listed HSCEI NOV16 10400 European Call REF 9,850 (SEP16), size=900, hedge=252, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$7,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,081 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13135, description=Listed HSCEI DEC18 9600 European Straddle REF 9,750 (SEP16), size=200, hedge=11, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,081 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,082 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13142, description=Listed HSCEI DEC17/JUN18 9600 -1/1 European Straddle Time Spread REF 9,675 (OCT16), size=400, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,082 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,082 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,082 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=536, hedge=24, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,288, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,082 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,083 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=250, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,250, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,083 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,083 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,083 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,084 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13147, description=Listed HSI SEP17 23200 European Call REF 23,325 (OCT16), size=100, hedge=50, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,084 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,084 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,085 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@30b9728f
2016-11-09 12:15:54,085 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== BNP PARIBAS ARBITRAGE S.N.C.*_HKD_OCT16, 57483.0, 58428.0
2016-11-09 12:15:54,101 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,102 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,102 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,102 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe96, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0014, due_date=09 November, 2016, amount_due=HK$58,428, description=October 2016 Brokerage Fee, amount=HK$58,428, key=BNP Paribas Arbitrage S.N.C_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@30b9728f, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,103 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13046, description=HSCEI DEC18 Forward (OTC-Like) REF 9,530 (AUG16), size=200, hedge=200, reference=Seller - Citigroup Global Markets Hong Kong Limited - Godfrey Sham, fee=HK$4,766, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,103 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,104 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@400008bf
2016-11-09 12:15:54,104 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Citigroup Global Markets Hong Kong Limited, 4766.0, 4766.0
2016-11-09 12:15:54,138 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,139 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,139 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,142 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe99, company=Citigroup Global Markets Hong Kong Limited, address=ICG Global Expense Management Team, Citigroup Centre 1, 5th Floor, 33 Canada Square, Canary Wharf, London, E14 5LB, UK, attn=London Billing Email, sentTo=Brokerage.ciplc@citi.com, invoice_number=CEL-160106, invoice_date=09 September, 2016, account_number=CEL0009, due_date=09 October, 2016, amount_due=HK$4,766, description=October 2016 Brokerage Fee, amount=HK$4,766, key=Citigroup Global Markets Hong Kong Limited_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Citigroup Global Markets Hong Kong Limited_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@400008bf, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,142 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,142 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,142 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,143 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12795, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=100, hedge=25, reference=Seller - Korea Investment & Securities Co Ltd - Traders, fee=US$1,058, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,143 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,143 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,143 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,143 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5ebe903a
2016-11-09 12:15:54,143 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 1058.0, 1058.0
2016-11-09 12:15:54,172 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,173 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,173 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,173 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafe9c, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160005, invoice_date=09 April, 2016, account_number=CEL0011, due_date=09 May, 2016, amount_due=US$1,058, description=October 2016 Brokerage Fee, amount=US$1,058, key=Korea Investment & Securities Co Ltd_KRW_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_KRW_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5ebe903a, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,173 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,173 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,173 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,174 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=1000, hedge=95, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$8,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,174 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=106, hedge=10, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$848, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,174 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13153, description=Listed HSCEI DEC17 8000/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=27, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,174 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,175 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=450, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,100, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,175 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13156, description=Listed HSI SEP17 21000/26200 1/-1 European Risk Reversal REF 23,575 (OCT16), size=58, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$464, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,175 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=150, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$700, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,175 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,176 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=300, hedge=48, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,400, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,176 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Oct-16, tradeId=CELERAEQ-2016-13160, description=Listed HSCEI MAR17 9800 European Straddle REF 9,750 (OCT16), size=100, hedge=3, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,176 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=625, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$4,375, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,176 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=400, hedge=12, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13166, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=200, hedge=9, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=1880, hedge=47, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$10,340, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,177 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,177 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,178 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13184, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,300, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,178 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13188, description=Listed HSI NOV16 23200 European Straddle REF 23,300 (OCT16), size=200, hedge=8, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,178 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,179 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@16c0be3b
2016-11-09 12:15:54,179 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 42627.0, 42627.0
2016-11-09 12:15:54,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,217 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,217 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,217 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafead, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160147, invoice_date=09 November, 2016, account_number=CEL0014, due_date=09 December, 2016, amount_due=HK$42,627, description=October 2016 Brokerage Fee, amount=HK$42,627, key=BNP Paribas Arbitrage S.N.C_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@16c0be3b, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,217 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,218 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=150, hedge=3, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,071, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,218 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$952, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,218 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12963, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=54, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$812, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,218 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=54, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$840, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=125, hedge=0, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,750, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,219 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12974, description=Listed HSCEI DEC17 7200/10800 1/-1 European Risk Reversal REF 9,025 (JUL16), size=50, hedge=12, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$868, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,219 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,220 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=23, hedge=5, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$392, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,220 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=60, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$882, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,220 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=28, hedge=7, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$490, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,220 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,221 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,346, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,221 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=57, hedge=4, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$854, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,221 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,222 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=100, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,484, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,222 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=600, hedge=114, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$9,996, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,222 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,223 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12988, description=Listed HSI DEC16 22400/25200 1/-2 European Call Ratio REF 22,200 (JUL16), size=81, hedge=6, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,218, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,223 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Jul-16, tradeId=CELERAEQ-2016-12991, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=100, hedge=8, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,512, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,223 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,224 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=135, hedge=9, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$2,016, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,224 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=54, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$798, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,224 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12994, description=Listed HSCEI DEC16 7000 European Put REF 9,025 (AUG16), size=33, hedge=3, reference=Seller - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$504, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,224 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,225 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=200, hedge=53, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$3,542, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,225 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12996, description=Listed HSCEI MAR17 5300 European Put REF 9,025 (AUG16), size=100, hedge=4, reference=Buyer - Liquid Capital Australia Pty Ltd. - Julian Hoefflin, fee=HK$1,456, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@20afd96f
2016-11-09 12:15:54,226 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Liquid Capital Australia Pty Ltd., 34783.0, 34783.0
2016-11-09 12:15:54,290 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,290 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,290 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,290 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafec3, company=Liquid Capital Australia Pty Ltd., address=United Kindom, attn=Robert Wickham, sentTo=brokerage@liquidcapital.com, invoice_number=CEL-160070, invoice_date=09 August, 2016, account_number=CEL0005, due_date=09 September, 2016, amount_due=HK$34,783, description=October 2016 Brokerage Fee, amount=HK$34,783, key=Liquid Capital Australia Pty Ltd._HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Australia Pty Ltd._HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@20afd96f, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,290 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,291 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,291 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,291 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12890, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$813, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,291 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,291 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,291 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,291 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-May-16, tradeId=CELERAEQ-2016-12891, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 242.15 (JUN16), size=400, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=US$813, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,292 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,292 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,292 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,293 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@40fcaae7
2016-11-09 12:15:54,293 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 1626.0, 1626.0
2016-11-09 12:15:54,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafec7, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160030, invoice_date=09 June, 2016, account_number=CEL0006, due_date=09 July, 2016, amount_due=US$1,626, description=October 2016 Brokerage Fee, amount=US$1,626, key=J.P. Morgan Securities PLC_KRW_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_KRW_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@40fcaae7, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12945, description=Listed HSCEI DEC17 6600 European Put REF 8,700 (JUL16), size=230, hedge=37, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,002, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12951, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=450, hedge=72, reference=Seller - Société Générale (HK) Limited - David Bruchet, fee=HK$5,771, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12954, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=100, hedge=25, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,286, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12957, description=Listed HSCEI DEC17 9600/11200 1/-2 European Call Ratio REF 8,725 (JUL16), size=600, hedge=12, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,618, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12960, description=Listed HSCEI DEC16 8800 European Straddle REF 8,800 (JUL16), size=200, hedge=7, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=HK$2,640, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12962, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=400, hedge=30, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,355, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12967, description=Listed HSCEI JUN18 11200 European Call REF 8,900 (JUL16), size=500, hedge=107, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,675, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12968, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,715, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12971, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,715, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12977, description=Listed HSCEI DEC16 9000 European Straddle REF 9,050 (JUL16), size=320, hedge=16, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,344, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12982, description=Listed HSCEI DEC16 10000/11200 1/-2 European Call Ratio REF 9,050 (JUL16), size=900, hedge=27, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,073, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12984, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,308, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12985, description=Listed HSI DEC16 17000 European Put REF 22,000 (JUL16), size=100, hedge=7, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,300, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Jul-16, tradeId=CELERAEQ-2016-12987, description=Listed HSCEI DEC16 7800/10200 1/-1 European Risk Reversal REF 9,000 (JUL16), size=1100, hedge=209, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$7,425, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12989, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=200, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$6,653, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,332 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,332 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,332 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,332 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12990, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=100, hedge=4, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$3,326, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,333 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=1500, hedge=102, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$8,145, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,333 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,334 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12995, description=Listed HSCEI DEC17 7200/10400 -1/1 European Risk Reversal REF 9,050 (AUG16), size=100, hedge=27, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$679, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,334 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,334 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,335 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,335 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6821c63c
2016-11-09 12:15:54,335 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 74030.0, 74030.0
2016-11-09 12:15:54,385 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,385 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,385 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafedb, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160082, invoice_date=09 August, 2016, account_number=CEL0018, due_date=09 September, 2016, amount_due=HK$74,030, description=October 2016 Brokerage Fee, amount=HK$74,030, key=Société Générale (HK) Limited_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6821c63c, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=132, hedge=4, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$1,632, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,386 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,386 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12948, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=66, hedge=2, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$816, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,387 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Jul-16, tradeId=CELERAEQ-2016-12956, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=200, hedge=42, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$2,904, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,387 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,388 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12957, description=Listed HSCEI DEC17 9600/11200 1/-2 European Call Ratio REF 8,725 (JUL16), size=600, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$7,272, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,388 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12960, description=Listed HSCEI DEC16 8800 European Straddle REF 8,800 (JUL16), size=200, hedge=7, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,484, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,388 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,389 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12963, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=54, hedge=4, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$696, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,389 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12967, description=Listed HSCEI JUN18 11200 European Call REF 8,900 (JUL16), size=500, hedge=105, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$7,260, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,389 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=250, hedge=0, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$3,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,389 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,390 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,390 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,390 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12976, description=Listed HSI DEC16 19400 European Put REF 21,675 (JUL16), size=50, hedge=11, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$732, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,390 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,390 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,390 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,391 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12978, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=200, hedge=36, reference=Buyer - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$2,832, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,391 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12980, description=Listed HSI DEC16 18000/25200 1/-1 European Risk Reversal REF 21,800 (JUL16), size=50, hedge=6, reference=Seller - J.P. Morgan Securities PLC - Franck Cornille, fee=HK$672, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,391 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12982, description=Listed HSCEI DEC16 10000/11200 1/-2 European Call Ratio REF 9,050 (JUL16), size=900, hedge=27, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$11,124, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,391 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,392 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,392 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Jul-16, tradeId=CELERAEQ-2016-12993, description=Listed HSCEI MAR17 9000 European Straddle REF 9,025 (AUG16), size=108, hedge=6, reference=Buyer - J.P. Morgan Securities PLC - Calvin Ko, fee=HK$1,368, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,392 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,392 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,392 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,393 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@55e4dd68
2016-11-09 12:15:54,393 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== J.P. Morgan Securities PLC, 43608.0, 43608.0
2016-11-09 12:15:54,437 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,437 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,438 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,438 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafeeb, company=J.P. Morgan Securities PLC, address=Futures & Options House Reconcillations, One@Changi City 7th Floor,  1 Changi Business Park Central 1, Singapore, 486036, attn=F & O House team, sentTo=edg_asia_index_flow_trader_confos@jpmorgan.com , brokerage.control@jpmorgan.com, invoice_number=CEL-160069, invoice_date=09 August, 2016, account_number=CEL0006, due_date=09 September, 2016, amount_due=HK$43,608, description=October 2016 Brokerage Fee, amount=HK$43,608, key=J.P. Morgan Securities PLC_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/J.P. Morgan Securities PLC_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@55e4dd68, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,438 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,438 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,438 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,438 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13196, description=Listed HSCEI DEC17 6600 European Put REF 9,625 (NOV16), size=200, hedge=14, reference=Seller - HMC Investment - JeongBon, Koo, fee=HK$4,280, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,438 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,439 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,439 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,439 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@27bbe773
2016-11-09 12:15:54,439 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== HMC Investment, 4280.0, 4280.0
2016-11-09 12:15:54,468 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafeee, company=HMC Investment, address=, attn=, sentTo=0401176@hmcib.com;justisoo@hmcib.com;0800574@hmcib.com, invoice_number=CEL-160152, invoice_date=09 November, 2016, account_number=CEL0023, due_date=09 December, 2016, amount_due=HK$4,280, description=October 2016 Brokerage Fee, amount=HK$4,280, key=HMC Investment_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/HMC Investment_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@27bbe773, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,469 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,469 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,469 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,469 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Apr-16, tradeId=CELERAEQ-2016-12805, description=Listed HSCEI DEC17 9600/11600 1/-2 European Call Ratio REF 8,600 (APR16), size=165, hedge=6, reference=Buyer - Optiver Australia Pty Ltd - William Funnell, fee=HK$2,565, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Apr-16, tradeId=CELERAEQ-2016-12806, description=Listed HSCEI SEP16 9000 European Call REF 8,750 (APR16), size=54, hedge=21, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$1,125, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12810, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=25, hedge=5, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$450, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,470 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,470 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Apr-16, tradeId=CELERAEQ-2016-12811, description=Listed HSCEI DEC16 10600 European Call REF 9,100 (APR16), size=50, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$900, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Apr-16, tradeId=CELERAEQ-2016-12818, description=Listed HSCEI SEP16 9200 European Straddle REF 9,175 (APR16), size=200, hedge=10, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,150, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12827, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,050 (APR16), size=300, hedge=16, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$4,740, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,471 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Apr-16, tradeId=CELERAEQ-2016-12828, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=900, hedge=0, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$13,500, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,471 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,472 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12830, description=Listed HSCEI DEC17 12000/13800 1/-2 European Call Ratio REF 9,125 (APR16), size=900, hedge=0, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$13,500, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,472 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12834, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=400, hedge=112, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$7,680, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,472 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12835, description=Listed HSCEI APR16 9400/9600 European Call Spread REF 9,175 (APR16), size=134, hedge=9, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,145, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Apr-16, tradeId=CELERAEQ-2016-12836, description=Listed HSCEI DEC17 7600/10800 1/-1 European Risk Reversal REF 9,200 (APR16), size=200, hedge=56, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$3,840, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,473 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,473 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12840, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,340, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,474 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Apr-16, tradeId=CELERAEQ-2016-12841, description=Listed HSCEI DEC17 6000/8400 -2/1 European Put Ratio REF 9,100 (APR16), size=150, hedge=6, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,340, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,474 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Apr-16, tradeId=CELERAEQ-2016-12844, description=Listed HSCEI SEP16 8800/9600 1/-1 European Risk Reversal REF 9,075 (APR16), size=104, hedge=41, reference=Seller - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$2,175, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,475 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,475 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,475 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Apr-16, tradeId=CELERAEQ-2016-12846, description=Listed HSCEI APR16/MAY16 8800/9000 -1/1 European Call Diagonal REF 9,000 (APR16), size=40, hedge=7, reference=Buyer - Optiver Australia Pty Ltd - Lucy Goulopoulos, fee=HK$705, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,475 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,476 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,476 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,476 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@3ba1f56e
2016-11-09 12:15:54,476 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== OPTIVER AUSTRALIA PTY LTD_HKD_MAY16, 47655.0, 61155.0
2016-11-09 12:15:54,489 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,489 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0bafeff, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=, invoice_date=09 May, 2016, account_number=CEL0003, due_date=09 June, 2016, amount_due=HK$61,155, description=October 2016 Brokerage Fee, amount=HK$61,155, key=Optiver Australia Pty Ltd_HKD_0516, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_HKD_0516.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@3ba1f56e, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,490 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12903, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=3000, hedge=80, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$46,200, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,490 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12904, description=Listed HSCEI DEC17 10000/12000 1/-2 European Call Ratio REF 8,750 (JUN16), size=750, hedge=20, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$11,550, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12907, description=Listed HSCEI JUN16 8800/9200 European Call Spread REF 8,625 (JUN16), size=500, hedge=57, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$8,355, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,491 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,491 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Jun-16, tradeId=CELERAEQ-2016-12924, description=Listed HSCEI DEC16 7600/8800 -1/1 European Risk Reversal REF 8,425 (JUN16), size=110, hedge=39, reference=Buyer - Deutsche Bank AG London Branch - Payton Ong, fee=HK$2,235, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,492 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,492 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,492 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,492 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1f6d7e7c
2016-11-09 12:15:54,492 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Deutsche Bank AG London Branch, 68340.0, 68340.0
2016-11-09 12:15:54,526 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,526 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,526 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,526 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff05, company=Deutsche Bank AG London Branch, address=Velankani Tech Park, No 43, 3rd Floor, Block 5, Electronic City, Phase 1, Hosur Road, Bangalore, 560100, India, attn=Futures Brokerage, sentTo=futures.brokerage@db.com,singh.gagandeep@db.com,mohan.raj-mc@db.com, invoice_number=CEL-160063, invoice_date=09 July, 2016, account_number=CEL0002, due_date=09 August, 2016, amount_due=HK$68,340, description=October 2016 Brokerage Fee, amount=HK$68,340, key=Deutsche Bank AG London Branch_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Deutsche Bank AG London Branch_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1f6d7e7c, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,527 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12970, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=200, hedge=22, reference=Buyer - Thierry, fee=HK$3,330, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,527 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,528 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@a97a895
2016-11-09 12:15:54,528 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 3330.0, 3330.0
2016-11-09 12:15:54,561 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,561 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,562 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff08, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160083, invoice_date=09 August, 2016, account_number=CEL0030, due_date=09 September, 2016, amount_due=HK$3,330, description=October 2016 Brokerage Fee, amount=HK$3,330, key=Thierry_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@a97a895, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,562 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13116, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=400, hedge=80, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$681, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,562 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,563 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,563 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13117, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=200, hedge=40, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$340, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,563 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,563 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,563 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,563 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2a60981c
2016-11-09 12:15:54,563 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 1021.0, 1021.0
2016-11-09 12:15:54,601 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,602 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,602 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,603 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff0c, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160137, invoice_date=09 October, 2016, account_number=CEL0018, due_date=09 November, 2016, amount_due=US$1,021, description=October 2016 Brokerage Fee, amount=US$1,021, key=Société Générale (HK) Limited_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2a60981c, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,603 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-May-16, tradeId=CELERAEQ-2016-12860, description=Listed HSCEI DEC16 6600/8000 -1.5/1 European Put Ratio REF 8,500 (MAY16), size=250, hedge=14, reference=Buyer - Thierry, fee=HK$3,960, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,603 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,604 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=2000, hedge=110, reference=Seller - Thierry, fee=HK$31,650, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,604 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,604 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,604 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,604 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@67292fc7
2016-11-09 12:15:54,605 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Thierry, 35610.0, 35610.0
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,641 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff10, company=Thierry, address=, attn=, sentTo=, invoice_number=CEL-160047, invoice_date=09 June, 2016, account_number=CEL0030, due_date=09 July, 2016, amount_due=HK$35,610, description=October 2016 Brokerage Fee, amount=HK$35,610, key=Thierry_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Thierry_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@67292fc7, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,641 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,642 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=400, hedge=38, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$5,256, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,642 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13154, description=Listed HSCEI MAR17 6000/7600 -2/1 European Put Ratio REF 9,725 (OCT16), size=300, hedge=4, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$3,648, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,642 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13167, description=Listed HSCEI DEC16/JUN17 10000 -2/1 European Call Time Ratio REF 9,675 (OCT16), size=300, hedge=33, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$3,996, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,642 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13184, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=20, hedge=1, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,642 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,643 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=200, hedge=12, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$2,544, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,643 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=200, hedge=12, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$2,544, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,643 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,643 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1f7fcec2
2016-11-09 12:15:54,643 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 17988.0, 17988.0
2016-11-09 12:15:54,676 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,676 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,676 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,677 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff18, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160159, invoice_date=09 November, 2016, account_number=CEL0001, due_date=09 December, 2016, amount_due=HK$17,988, description=October 2016 Brokerage Fee, amount=HK$17,988, key=Nomura International Plc_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1f7fcec2, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,677 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Aug-16, tradeId=CELERAEQ-2016-13005, description=Listed HSCEI DEC16 8600/8800 European Put Spread REF 9,100 (AUG16), size=200, hedge=6, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,060, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,677 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13021, description=Listed HSI DEC16 20400/24800 1/-1 European Risk Reversal REF 22,750 (AUG16), size=158, hedge=30, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,880, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,678 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Aug-16, tradeId=CELERAEQ-2016-13023, description=Listed HSCEI DEC16 8600/10600 -1/1 European Risk Reversal REF 9,650 (AUG16), size=100, hedge=22, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,220, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,678 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$680, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13048, description=Listed HSCEI JUN17 9600 European Straddle REF 9,550 (AUG16), size=100, hedge=0, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,679 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=31-Aug-16, tradeId=CELERAEQ-2016-13072, description=Listed HSI NOV16 22800 European Straddle REF 22,875 (SEP16), size=50, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,679 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,680 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,680 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,680 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@17fb5184
2016-11-09 12:15:54,680 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Eclipse Futures (HK) Limited, 7095.0, 7095.0
2016-11-09 12:15:54,722 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,723 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,723 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,723 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff20, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160095, invoice_date=09 September, 2016, account_number=CEL0008, due_date=09 October, 2016, amount_due=HK$7,095, description=October 2016 Brokerage Fee, amount=HK$7,095, key=Eclipse Futures (HK) Limited_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@17fb5184, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,724 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13176, description=Listed KS200 DEC16/DEC17 240 European Put Time Spread REF 257.50 (DEC16), size=200, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$1,134, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,724 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,725 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13178, description=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), size=400, hedge=20, reference=Buyer - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,288, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,725 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13185, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=200, hedge=78, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,261, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,725 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,726 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13186, description=Listed KS200 DEC17 200 European Put REF 256 (DEC16), size=250, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=US$2,827, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,726 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,726 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,726 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,726 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2728add3
2016-11-09 12:15:54,727 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Yuanta Securities Korea Co., Ltd, 8510.0, 8510.0
2016-11-09 12:15:54,758 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,758 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,758 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,758 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff26, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160168, invoice_date=09 November, 2016, account_number=CEL0025, due_date=09 December, 2016, amount_due=US$8,510, description=October 2016 Brokerage Fee, amount=US$8,510, key=Yuanta Securities Korea Co., Ltd_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2728add3, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,759 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Sep-16, tradeId=CELERAEQ-2016-13099, description=Listed KS200 DEC17/DEC18 290 European Call Time Spread REF 258 (DEC16), size=2, hedge=0, reference=Buyer - Celera Bank Private Test 1 - james Hugh, fee=US$0, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,759 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4a1934e2
2016-11-09 12:15:54,759 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 1
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,759 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,760 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Oct-16, tradeId=CELERAEQ-2016-13162, description=Listed KS200 DEC17 270 European Call REF 256 (DEC16), size=300, hedge=120, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,021, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,760 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Oct-16, tradeId=CELERAEQ-2016-13174, description=Listed KS200 DEC16/MAR17 255/220 1/-1 European Put Diagonal REF 257.50 (DEC16), size=400, hedge=62, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$683, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,760 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13178, description=Listed KS200 DEC16/MAR17 270 European Call Time Spread REF 259 (DEC16), size=400, hedge=20, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=US$686, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,760 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,761 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,761 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,761 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13187, description=Listed KS200 JUN17 240/270 1/-1 European Risk Reversal REF 255 (DEC16), size=600, hedge=174, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,014, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,761 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,761 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,761 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,761 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6963b0bd
2016-11-09 12:15:54,761 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 3404.0, 3404.0
2016-11-09 12:15:54,798 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,798 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,798 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,799 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff2e, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160163, invoice_date=09 November, 2016, account_number=CEL0018, due_date=09 December, 2016, amount_due=US$3,404, description=October 2016 Brokerage Fee, amount=US$3,404, key=Société Générale (HK) Limited_KRW_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6963b0bd, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,799 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13018, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=900, hedge=33, reference=Buyer - Société Générale (HK) Limited - Jacinto Ferreira, fee=US$1,053, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,799 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,800 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Aug-16, tradeId=CELERAEQ-2016-13018, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 257.50 (SEP16), size=900, hedge=33, reference=Buyer - Société Générale (HK) Limited - David Bruchet, fee=US$1,053, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,800 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Aug-16, tradeId=CELERAEQ-2016-13038, description=Listed KS200 JUN17/JUN18 250 -1/1 European Straddle Time Spread REF 256.50 (SEP16), size=1000, hedge=25, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,738, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,800 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Aug-16, tradeId=CELERAEQ-2016-13043, description=Listed KS200 DEC18 190/240 -2/1 European Put Ratio REF 258 (SEP16), size=900, hedge=36, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=US$1,041, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,800 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,801 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6296e4bf
2016-11-09 12:15:54,801 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== SOCIÉTÉ GÉNÉRALE (HK) LIMITED_USD_SEP16, 3832.0, 4885.0
2016-11-09 12:15:54,812 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,813 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,813 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,813 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff34, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=, invoice_date=09 September, 2016, account_number=CEL0018, due_date=09 October, 2016, amount_due=US$4,885, description=October 2016 Brokerage Fee, amount=US$4,885, key=Société Générale (HK) Limited_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6296e4bf, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,813 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,813 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,813 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,814 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-Jun-16, tradeId=CELERAEQ-2016-12905, description=Listed HSCEI DEC17 10000/12000 European Call Spread REF 8,675 (JUN16), size=400, hedge=40, reference=Buyer - Korea Investment & Securities Co Ltd - KIS Traders, fee=HK$6,600, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,814 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,814 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,814 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,814 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1f1ffc18
2016-11-09 12:15:54,814 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Korea Investment & Securities Co Ltd, 6600.0, 6600.0
2016-11-09 12:15:54,843 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,843 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,844 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,844 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff37, company=Korea Investment & Securities Co Ltd, address=19/F, Trading Center, 27-1, Yeouido-dong, Yeongdeungpo-gu, Seoul, -150-747, Korea, attn=Hanna Kim, sentTo=Trading_op@truefriend.com, onlyone@truefriend.com, invoice_number=CEL-160049, invoice_date=09 July, 2016, account_number=CEL0011, due_date=09 August, 2016, amount_due=HK$6,600, description=October 2016 Brokerage Fee, amount=HK$6,600, key=Korea Investment & Securities Co Ltd_HKD_0716, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Korea Investment & Securities Co Ltd_HKD_0716.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1f1ffc18, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,844 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,845 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,845 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,845 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13044, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=400, hedge=86, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,298, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,845 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,845 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,845 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,846 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Aug-16, tradeId=CELERAEQ-2016-13045, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256.50 (SEP16), size=500, hedge=107, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,873, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,846 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,846 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,846 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,846 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Aug-16, tradeId=CELERAEQ-2016-13058, description=Listed KS200 DEC17 200/280 -1/1 European Risk Reversal REF 256 (SEP16), size=1000, hedge=215, reference=Seller - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$5,745, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,846 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,847 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,847 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,847 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2c92f094
2016-11-09 12:15:54,847 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Yuanta Securities Korea Co., Ltd, 10916.0, 10916.0
2016-11-09 12:15:54,900 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,900 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,900 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,901 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff3c, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160112, invoice_date=09 September, 2016, account_number=CEL0025, due_date=09 October, 2016, amount_due=US$10,916, description=October 2016 Brokerage Fee, amount=US$10,916, key=Yuanta Securities Korea Co., Ltd_KRW_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_KRW_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2c92f094, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,901 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,901 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,901 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,902 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Oct-16, tradeId=CELERAEQ-2016-13159, description=Listed HSCEI DEC16 9400 European Straddle REF 9,750 (OCT16), size=200, hedge=32, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$4,320, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,902 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,902 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,902 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,902 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=300, hedge=31, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$3,110, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,902 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,903 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,903 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,903 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1e288c76
2016-11-09 12:15:54,904 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Vivienne Court Trading Pty Ltd, 7430.0, 7430.0
2016-11-09 12:15:54,945 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,946 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,946 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,946 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff40, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160166, invoice_date=09 November, 2016, account_number=CEL0004, due_date=09 December, 2016, amount_due=HK$7,430, description=October 2016 Brokerage Fee, amount=HK$7,430, key=Vivienne Court Trading Pty Ltd_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1e288c76, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,946 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,946 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,946 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,947 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13115, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=600, hedge=126, reference=Buyer - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$3,405, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,947 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Sep-16, tradeId=CELERAEQ-2016-13116, description=Listed KS200 MAR17 230/270 1/-1 European Risk Reversal REF 254 (DEC16), size=400, hedge=80, reference=Buyer - Yuanta Securities Korea Co., Ltd - Dongmin Yoon, fee=US$2,270, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,947 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,948 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@66e218d8
2016-11-09 12:15:54,948 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Yuanta Securities Korea Co., Ltd, 5675.0, 5675.0
2016-11-09 12:15:54,997 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:54,997 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:54,997 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,997 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fa327cb279e0baff44, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160123, invoice_date=09 October, 2016, account_number=CEL0025, due_date=09 November, 2016, amount_due=US$5,675, description=October 2016 Brokerage Fee, amount=US$5,675, key=Yuanta Securities Korea Co., Ltd_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@66e218d8, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,998 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Sep-16, tradeId=CELERAEQ-2016-13107, description=Listed N225 DEC16 14500/18500 1/-1 European Risk Reversal REF 16,600 (DEC16), size=600, hedge=81, reference=Buyer - Barclays Bank PLC - Amine Ahallal, fee=JPY105,000, lastModified=Wed Nov 09 12:15:54 HKT 2016]
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:54,998 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:54,998 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@57a0c261
2016-11-09 12:15:55,019 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,020 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,020 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,020 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff47, company=Barclays Bank PLC, address=, attn=, sentTo=gupdocs@barclayscapital.com , invoice_number=, invoice_date=09 October, 2016, account_number=CEL0021, due_date=09 November, 2016, amount_due=JPY105,000, description=October 2016 Brokerage Fee, amount=JPY105,000, key=Barclays Bank PLC_JPY_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Barclays Bank PLC_JPY_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@57a0c261, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,020 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,021 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=04-Oct-16, tradeId=CELERAEQ-2016-13152, description=Listed HSCEI DEC17 8400/9600 European Put Spread REF 9,700 (OCT16), size=200, hedge=19, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$2,190, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,021 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=250, hedge=12, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,620, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,021 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13168, description=Listed HSCEI JUN17 8000/11000 1/-1 European Risk Reversal REF 9,675 (OCT16), size=200, hedge=41, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$2,410, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,022 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=120, hedge=3, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,230, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,022 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13189, description=Listed HSI NOV16 23200 European Straddle REF 23,200 (NOV16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,023 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,023 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,023 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,023 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4769537a
2016-11-09 12:15:55,024 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Eclipse Futures (HK) Limited, 8705.0, 8705.0
2016-11-09 12:15:55,056 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,056 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,056 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,057 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff4e, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160151, invoice_date=09 November, 2016, account_number=CEL0008, due_date=09 December, 2016, amount_due=HK$8,705, description=October 2016 Brokerage Fee, amount=HK$8,705, key=Eclipse Futures (HK) Limited_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4769537a, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,057 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Mar-16, tradeId=CELERAEQ-2016-12796, description=Listed HSCEI DEC16 9000/10800 European Call Spread REF 8,900 (APR16), size=50, hedge=8, reference=Buyer - Liquid Capital Hong Kong Limited - Anthony Webb, fee=HK$0, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,057 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,058 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@6dfebd2a
2016-11-09 12:15:55,068 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,069 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,069 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,069 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff51, company=Liquid Capital Hong Kong Limited, address=21st Floor, The Center, 99 Queens Road, Central, Hong Kong, attn=Anthony Webb, sentTo=brokerage@liquidcapital.com, invoice_number=, invoice_date=09 April, 2016, account_number=CEL0012, due_date=09 May, 2016, amount_due=HK$0, description=October 2016 Brokerage Fee, amount=HK$0, key=Liquid Capital Hong Kong Limited_HKD_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Liquid Capital Hong Kong Limited_HKD_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@6dfebd2a, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,069 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,069 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,069 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,069 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-May-16, tradeId=CELERAEQ-2016-12887, description=Listed KS200 SEP16/DEC16 240 -1/1 European Straddle Time Spread REF 241.50 (JUN16), size=400, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$460, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,070 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,070 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,070 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,070 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@5819ee0f
2016-11-09 12:15:55,070 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 460.0, 460.0
2016-11-09 12:15:55,099 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,100 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,100 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff54, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160040, invoice_date=09 June, 2016, account_number=CEL0014, due_date=09 July, 2016, amount_due=US$460, description=October 2016 Brokerage Fee, amount=US$460, key=BNP Paribas Arbitrage S.N.C_KRW_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@5819ee0f, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,100 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,100 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,101 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,101 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=16-Feb-16, tradeId=CELERAEQ-2016-12787, description=Listed SPX JUN16 2150 European Call REF 2,115 (MAR16), size=200, hedge=80, reference=Buyer - Celera Bank Private Test 3 - Alex Chau, fee=US$1, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,101 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,101 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,101 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,102 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1d432d56
2016-11-09 12:15:55,102 [main] ERROR com.celera.backoffice.PdfCreateInvoice.run(PdfCreateInvoice.java:225) - company not found: Celera Bank Private Test 3
2016-11-09 12:15:55,102 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,102 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,102 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,102 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Sep-16, tradeId=CELERAEQ-2016-13091, description=Listed KS200 DEC16 260 European Straddle REF 262.50 (DEC16), size=800, hedge=48, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$7,205, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,103 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Sep-16, tradeId=CELERAEQ-2016-13129, description=Listed KS200 NOV16 235/250 -2/1 European Put Ratio REF 259 (DEC16), size=900, hedge=36, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=US$2,642, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,103 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,103 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@147ad4bb
2016-11-09 12:15:55,103 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Nomura International Plc, 9847.0, 9847.0
2016-11-09 12:15:55,134 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,134 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff5a, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=CEL-160130, invoice_date=09 October, 2016, account_number=CEL0001, due_date=09 November, 2016, amount_due=US$9,847, description=October 2016 Brokerage Fee, amount=US$9,847, key=Nomura International Plc_KRW_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_KRW_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@147ad4bb, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,135 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-May-16, tradeId=CELERAEQ-2016-12858, description=Listed HSCEI JUN17 8800/10400 European Call Spread REF 8,650 (MAY16), size=200, hedge=28, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,824, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,135 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-May-16, tradeId=CELERAEQ-2016-12864, description=Listed HSCEI JUN16/SEP16 9000 European Call Time Spread REF 8,550 (MAY16), size=800, hedge=44, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$6,752, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=10-May-16, tradeId=CELERAEQ-2016-12868, description=Listed HSCEI JUN16 8600 European Call REF 8,450 (MAY16), size=100, hedge=32, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,056, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12870, description=***THIS IS A PRE-CONFIRMATION ONLY***Listed HSCEI DEC16 10400/11200 1/-, size=125, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,008, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,136 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,136 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-May-16, tradeId=CELERAEQ-2016-12871, description=***THIS IS A FINAL CONFIRMATION***, size=125, hedge=1, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,008, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,137 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12879, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,325 (MAY16), size=300, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,432, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,137 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-May-16, tradeId=CELERAEQ-2016-12880, description=Listed HSCEI SEP16 8200 European Straddle REF 8,375 (MAY16), size=400, hedge=0, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,137 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-May-16, tradeId=CELERAEQ-2016-12881, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,275 (MAY16), size=75, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$616, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,137 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,138 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-May-16, tradeId=CELERAEQ-2016-12883, description=Listed HSCEI DEC17 6600/7800 2/-1 European Put Ratio REF 8,500 (MAY16), size=300, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,432, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,138 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,138 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,138 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,138 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2d41bb5a
2016-11-09 12:15:55,138 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== BNP PARIBAS ARBITRAGE S.N.C.*_HKD_JUN16, 19320.0, 20328.0
2016-11-09 12:15:55,150 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,150 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,150 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff65, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=, invoice_date=09 June, 2016, account_number=CEL0014, due_date=09 July, 2016, amount_due=HK$20,328, description=October 2016 Brokerage Fee, amount=HK$20,328, key=BNP Paribas Arbitrage S.N.C_HKD_0616, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_0616.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2d41bb5a, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Oct-16, tradeId=CELERAEQ-2016-13157, description=Listed HSCEI DEC17/DEC16 10800 1/-2 European Call Time Ratio REF 9,850 (OCT16), size=300, hedge=2, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,478, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,151 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Oct-16, tradeId=CELERAEQ-2016-13158, description=Listed HSCEI DEC16/DEC17 10000 -1/1 European Straddle Time Spread REF 9,950 (OCT16), size=3000, hedge=8, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$22,388, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,151 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Oct-16, tradeId=CELERAEQ-2016-13163, description=Listed HSCEI DEC16 8400/9800 -2/1 European Put Ratio REF 9,550 (OCT16), size=1200, hedge=124, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,730, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Oct-16, tradeId=CELERAEQ-2016-13164, description=Listed HSCEI DEC17 6600/8400 -1.5/1 European Put Ratio REF 9,600 (OCT16), size=250, hedge=12, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,440, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,152 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=1400, hedge=42, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$10,211, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,152 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13166, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=200, hedge=9, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$2,918, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13169, description=Listed HSCEI JUN18 9200 European Straddle REF 9,675 (OCT16), size=106, hedge=9, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,538, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,153 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13171, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=600, hedge=24, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$8,753, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,153 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=20-Oct-16, tradeId=CELERAEQ-2016-13172, description=Listed HSCEI DEC18 9600 European Straddle REF 9,725 (OCT16), size=400, hedge=16, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$5,835, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=24-Oct-16, tradeId=CELERAEQ-2016-13177, description=Listed HSCEI MAR17/DEC17 10400 European Call Time Spread REF 9,800 (OCT16), size=2000, hedge=50, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$14,700, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=25-Oct-16, tradeId=CELERAEQ-2016-13181, description=Listed HSCEI DEC17 10400 European Call REF 9,825 (OCT16), size=300, hedge=123, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,421, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,154 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,154 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Oct-16, tradeId=CELERAEQ-2016-13183, description=Listed HSCEI DEC18 9600 European Straddle REF 9,775 (OCT16), size=100, hedge=5, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$1,466, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,155 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13191, description=Listed HSI JUN17 19200/24800 1/1 European Strangle REF 23,000 (NOV16), size=400, hedge=24, reference=Buyer - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$13,800, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,155 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=27-Oct-16, tradeId=CELERAEQ-2016-13192, description=Listed HSCEI JUN18 9200 European Straddle REF 9,600 (NOV16), size=300, hedge=18, reference=Seller - Société Générale (HK) Limited - Sourabh Shaha, fee=HK$4,320, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,155 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,156 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@43efe064
2016-11-09 12:15:55,156 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Société Générale (HK) Limited, 98998.0, 98998.0
2016-11-09 12:15:55,192 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,193 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,193 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,193 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff75, company=Société Générale (HK) Limited, address=, attn=85221665027, sentTo=FREDERIC.OLIVE@SGCIB.COM , invoice_number=CEL-160162, invoice_date=09 November, 2016, account_number=CEL0018, due_date=09 December, 2016, amount_due=HK$98,998, description=October 2016 Brokerage Fee, amount=HK$98,998, key=Société Générale (HK) Limited_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Société Générale (HK) Limited_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@43efe064, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,193 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,193 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,193 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,194 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Aug-16, tradeId=CELERAEQ-2016-13013, description=Listed HSI DEC16 20600/22400 European Put Spread REF 22,475 (AUG16), size=200, hedge=25, reference=Buyer - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,650, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,194 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=17-Aug-16, tradeId=CELERAEQ-2016-13034, description=Listed HSCEI SEP16 10000 European Call REF 9,725 (AUG16), size=100, hedge=36, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,360, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,194 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Aug-16, tradeId=CELERAEQ-2016-13042, description=Listed HSCEI SEP16 9800 European Call REF 9,600 (AUG16), size=100, hedge=39, reference=Seller - Vivienne Court Trading Pty Ltd - Jeroen Plooster, fee=HK$2,390, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,194 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,194 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@483fe83a
2016-11-09 12:15:55,195 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Vivienne Court Trading Pty Ltd, 7400.0, 7400.0
2016-11-09 12:15:55,225 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,225 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,225 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff7a, company=Vivienne Court Trading Pty Ltd, address=Suite 304, 24-30 Springfield Avenue Potts Point, Sydney, NSW 2011, Australia, attn=Helen Robertson, sentTo=midoffice@vivcourt.com, invoice_number=CEL-160094, invoice_date=09 September, 2016, account_number=CEL0004, due_date=09 October, 2016, amount_due=HK$7,400, description=October 2016 Brokerage Fee, amount=HK$7,400, key=Vivienne Court Trading Pty Ltd_HKD_0916, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Vivienne Court Trading Pty Ltd_HKD_0916.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@483fe83a, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=02-Sep-16, tradeId=CELERAEQ-2016-13075, description=Listed HSCEI DEC16 8000/9000 -2/1 European Put Ratio REF 9,575 (SEP16), size=150, hedge=4, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$770, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,226 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,226 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=08-Sep-16, tradeId=CELERAEQ-2016-13092, description=Listed HSCEI MAR17 8600/11600 1/-1 European Risk Reversal REF 9,950 (SEP16), size=100, hedge=20, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=09-Sep-16, tradeId=CELERAEQ-2016-13094, description=Listed HSI JUN18 24000 European Straddle REF 23,975 (SEP16), size=50, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$500, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Sep-16, tradeId=CELERAEQ-2016-13108, description=Listed HSI MAR17 23600 European Straddle REF 23,525 (SEP16), size=66, hedge=1, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$670, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,227 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,227 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=23-Sep-16, tradeId=CELERAEQ-2016-13131, description=Listed HSCEI MAR17 8400/11400 -1/1 European Risk Reversal REF 9,925 (SEP16), size=100, hedge=25, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,250, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13140, description=Listed HSCEI SEP16 9600/9800 European Put Spread REF 9,625 (SEP16), size=200, hedge=34, reference=Buyer - Eclipse Futures (HK) Limited - Traders, fee=HK$1,170, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Sep-16, tradeId=CELERAEQ-2016-13143, description=Listed HSCEI OCT16 9600 European Straddle REF 9,650 (OCT16), size=200, hedge=9, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$1,045, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,228 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,228 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13145, description=Listed HSI DEC16 23400 European Straddle REF 23,350 (OCT16), size=50, hedge=1, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$255, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,229 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13150, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Seller - Eclipse Futures (HK) Limited - Traders, fee=HK$500, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,229 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,229 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@1f641fb7
2016-11-09 12:15:55,230 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Eclipse Futures (HK) Limited, 7360.0, 7360.0
2016-11-09 12:15:55,265 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,266 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,266 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,266 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff85, company=Eclipse Futures (HK) Limited, address=Room 3001, 30/F Subi Okaza, 225-257 Gloucester Road, Causeway Bay, Hong Kong, attn=Kelvin Chan, sentTo=kechan@eclipseoptions.com, invoices@eclipseoptions.com, accounts@eclipseoptions.com, invoice_number=CEL-160129, invoice_date=09 October, 2016, account_number=CEL0008, due_date=09 November, 2016, amount_due=HK$7,360, description=October 2016 Brokerage Fee, amount=HK$7,360, key=Eclipse Futures (HK) Limited_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Eclipse Futures (HK) Limited_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@1f641fb7, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,266 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,279 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,279 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,279 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=29-Mar-16, tradeId=CELERAEQ-2016-12793, description=Listed KS200 SEP16 230 European Put REF 246 (JUN16), size=150, hedge=38, reference=Seller - Optiver Australia Pty Ltd - William Funnell, fee=US$793, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,279 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,280 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,280 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,280 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@608c2042
2016-11-09 12:15:55,280 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Optiver Australia Pty Ltd, 793.0, 793.0
2016-11-09 12:15:55,321 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,322 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,322 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baff88, company=Optiver Australia Pty Ltd, address=39 Hunter St., Sydney NSW 2000, Australia., attn=Brian Taylor, sentTo=MiddleOfficeTeam@Optiver.com.au, invoice_number=CEL-160006, invoice_date=09 April, 2016, account_number=CEL0003, due_date=09 May, 2016, amount_due=US$793, description=October 2016 Brokerage Fee, amount=US$793, key=Optiver Australia Pty Ltd_KRW_0416, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Optiver Australia Pty Ltd_KRW_0416.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@608c2042, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,323 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,323 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,323 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=125, hedge=3, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$1,024, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,323 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=05-Jul-16, tradeId=CELERAEQ-2016-12944, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,725 (JUL16), size=125, hedge=2, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,016, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,324 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12946, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=700, hedge=21, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,373, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,324 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12947, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=100, hedge=3, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,339, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=06-Jul-16, tradeId=CELERAEQ-2016-12950, description=Listed HSI AUG16 20200 European Straddle REF 20,300 (JUL16), size=134, hedge=4, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,794, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,325 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,325 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12951, description=Listed HSCEI JUN18 11200 European Call REF 8,550 (JUL16), size=450, hedge=72, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,850, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12952, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=400, hedge=100, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$5,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,326 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=07-Jul-16, tradeId=CELERAEQ-2016-12953, description=Listed HSCEI DEC18 10800 European Call REF 8,575 (JUL16), size=200, hedge=50, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,326 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=12-Jul-16, tradeId=CELERAEQ-2016-12959, description=Listed HSCEI DEC17 6600/7600 -1.5/1 European Put Ratio REF 8,775 (JUL16), size=625, hedge=5, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Josiah Tam, fee=HK$3,250, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12962, description=Listed HSCEI DEC16 8800 European Straddle REF 8,925 (JUL16), size=400, hedge=30, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,327 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=13-Jul-16, tradeId=CELERAEQ-2016-12964, description=Listed HSCEI SEP16 8000/8800 -1.5/1 European Put Ratio REF 8,925 (JUL16), size=625, hedge=45, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,000, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,327 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=14-Jul-16, tradeId=CELERAEQ-2016-12965, description=Listed HSCEI JUL16/AUG16 8600/8800 1/-1 European Call Diagonal REF 8,925 (JUL16), size=100, hedge=11, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Matthieu Barry, fee=HK$400, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,328 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12968, description=Listed HSCEI DEC16 8800 European Straddle REF 9,050 (JUL16), size=400, hedge=44, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$3,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,328 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12969, description=Listed HSCEI DEC17 10000 European Call REF 9,050 (JUL16), size=200, hedge=78, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,329 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12972, description=Listed HSCEI JUN17 8000/8800 -1.5/1 European Put Ratio REF 9,050 (JUL16), size=500, hedge=0, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,329 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=15-Jul-16, tradeId=CELERAEQ-2016-12973, description=Listed HSCEI SEP16 8200 European Put REF 9,075 (JUL16), size=100, hedge=16, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$800, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,330 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12975, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=33, hedge=6, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$264, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,330 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,331 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=18-Jul-16, tradeId=CELERAEQ-2016-12979, description=Listed HSCEI SEP16 8200 European Put REF 9,050 (JUL16), size=167, hedge=30, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$1,336, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,331 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,331 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,331 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,336 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Jul-16, tradeId=CELERAEQ-2016-12981, description=Listed HSI SEP16 20400 European Put REF 21,675 (JUL16), size=56, hedge=14, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$728, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,336 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,336 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,336 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,336 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=21-Jul-16, tradeId=CELERAEQ-2016-12983, description=Listed HSI DEC16 19600/24400 1/-1 European Risk Reversal REF 22,050 (JUL16), size=200, hedge=39, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,337 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=22-Jul-16, tradeId=CELERAEQ-2016-12986, description=Listed HSI DEC16 17000 European Put REF 21,925 (JUL16), size=50, hedge=3, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$650, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,337 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Jul-16, tradeId=CELERAEQ-2016-12989, description=Listed HSI DEC16 15800 European Put REF 22,175 (JUL16), size=200, hedge=4, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$2,600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,337 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,338 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,338 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Jul-16, tradeId=CELERAEQ-2016-12992, description=Listed HSCEI DEC17 10400/12600 1/-1.5 European Call Ratio REF 9,050 (AUG16), size=1365, hedge=93, reference=Buyer - BNP Paribas Arbitrage S.N.C.* - Nicolas Dujardin, fee=HK$9,555, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,338 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,338 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,338 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,338 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@7bc6b117
2016-11-09 12:15:55,339 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 62979.0, 62979.0
2016-11-09 12:15:55,394 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,394 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,394 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,395 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baffa1, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160079, invoice_date=09 August, 2016, account_number=CEL0014, due_date=09 September, 2016, amount_due=HK$62,979, description=October 2016 Brokerage Fee, amount=HK$62,979, key=BNP Paribas Arbitrage S.N.C_HKD_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_HKD_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@7bc6b117, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,395 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,395 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,395 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,396 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13137, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$8,280, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,396 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=26-Sep-16, tradeId=CELERAEQ-2016-13138, description=Listed HSCEI JUN17 9600/11200 European Call Spread REF 9,725 (SEP16), size=600, hedge=90, reference=Seller - Nomura International Plc - Nadjib Ezziane, fee=HK$8,280, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,396 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,397 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13146, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=100, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$1,200, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,397 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,397 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,397 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,397 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=30-Sep-16, tradeId=CELERAEQ-2016-13150, description=Listed HSI JUN17 23400 European Straddle REF 23,375 (OCT16), size=50, hedge=0, reference=Buyer - Nomura International Plc - Nadjib Ezziane, fee=HK$600, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,397 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,397 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,398 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,398 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@468646ea
2016-11-09 12:15:55,398 [main] ERROR com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:349) - =============incorrect amount============== NOMURA INTERNATIONAL PLC_HKD_OCT16, 17760.0, 18360.0
2016-11-09 12:15:55,411 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,411 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baffa7, company=Nomura International Plc, address=7th Floor, Winchester, Hiranandani Business Park, Powai, Mumbai, Maharashtra 400 076, India., attn=Santosh Dange, sentTo=santosh.dange@nomura.com, invoice_number=, invoice_date=09 October, 2016, account_number=CEL0001, due_date=09 November, 2016, amount_due=HK$18,360, description=October 2016 Brokerage Fee, amount=HK$18,360, key=Nomura International Plc_HKD_1016, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Nomura International Plc_HKD_1016.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@468646ea, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,412 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,412 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,412 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,412 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=19-Oct-16, tradeId=CELERAEQ-2016-13165, description=Listed HSCEI JUN17/JUN18 10400 European Call Time Spread REF 9,725 (OCT16), size=1200, hedge=36, reference=Buyer - Yuanta Securities Korea Co., Ltd - Seungwoo Hwangbo, fee=HK$24,720, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,413 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=28-Oct-16, tradeId=CELERAEQ-2016-13197, description=Listed HSCEI DEC16 8800/9600 -1.5/1 European Put Ratio REF 9,575 (NOV16), size=250, hedge=20, reference=Seller - Yuanta Securities Korea Co., Ltd - Gue-yoon Kim, fee=HK$5,400, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,413 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,413 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@2119b989
2016-11-09 12:15:55,413 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== Yuanta Securities Korea Co., Ltd, 30120.0, 30120.0
2016-11-09 12:15:55,442 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,442 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,442 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,443 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baffab, company=Yuanta Securities Korea Co., Ltd, address=, attn=82237705984, sentTo=kyojin.ku@yuantakorea.com , invoice_number=CEL-160167, invoice_date=09 November, 2016, account_number=CEL0025, due_date=09 December, 2016, amount_due=HK$30,120, description=October 2016 Brokerage Fee, amount=HK$30,120, key=Yuanta Securities Korea Co., Ltd_HKD_1116, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/Yuanta Securities Korea Co., Ltd_HKD_1116.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@2119b989, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,443 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailRepo'
2016-11-09 12:15:55,443 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, date, tradeId, description, size, hedge, reference, fee, lastModified] in collection: tradedetail
2016-11-09 12:15:55,443 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,443 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save TradeDetail [date=11-Jul-16, tradeId=CELERAEQ-2016-12958, description=Listed KS200 SEP16/DEC16 220 European Put Time Spread REF 247 (SEP16), size=200, hedge=14, reference=Seller - BNP Paribas Arbitrage S.N.C.* - Roy Tian, fee=US$242, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,443 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'tradeDetailsRepo'
2016-11-09 12:15:55,443 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, size, hedge, total_fee, lastModified, tradeDetail] in collection: tradedetails
2016-11-09 12:15:55,444 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,444 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save com.celera.mongo.entity.TradeDetails@4930213b
2016-11-09 12:15:55,444 [main] INFO  com.celera.backoffice.PdfCreateInvoice.checkInvNumber(PdfCreateInvoice.java:339) - =============same amount============== BNP Paribas Arbitrage S.N.C.*, 242.0, 242.0
2016-11-09 12:15:55,477 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:248) - Returning cached instance of singleton bean 'invoiceRepo'
2016-11-09 12:15:55,477 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate.insertDBObject(MongoTemplate.java:989) - Inserting DBObject containing fields: [_class, _id, company, address, attn, sentTo, invoice_number, invoice_date, account_number, due_date, amount_due, description, amount, key, isPaid, hasSent, paymentBanName, paymentBankAddress, paymentBankCode, paymentBranchCode, paymentAccountNumber, paymentAccountBeneficiary, paymentSwift, file, lastModified, tradeDetails] in collection: invoice
2016-11-09 12:15:55,477 [main] DEBUG org.springframework.data.mongodb.core.MongoDbUtils.doGetDB(MongoDbUtils.java:122) - Getting Mongo Database name=[cm]
2016-11-09 12:15:55,478 [main] INFO  com.celera.adapter.DatabaseAdapter.save(DatabaseAdapter.java:221) - save Invoice [id=5822a2fb327cb279e0baffae, company=BNP Paribas Arbitrage S.N.C.*, address=, attn=, sentTo=bnparbitrage.brokerfees@bnpparibas.com,asia_edo_fees@asia.bnpparibas.com, invoice_number=CEL-160078, invoice_date=09 August, 2016, account_number=CEL0014, due_date=09 September, 2016, amount_due=US$242, description=October 2016 Brokerage Fee, amount=US$242, key=BNP Paribas Arbitrage S.N.C_KRW_0816, isPaid=false, hasSent=false, paymentBanName=DBS Bank (Hong Kong) Limited, paymentBankAddress=Floor 16, The Center, 99 Queen's Road Central, Central, Hong Kong, paymentBankCode=016, paymentBranchCode=478, paymentAccountNumber=7883658530, paymentAccountBeneficiary=Celera Markets Limited, paymentSwift=DHBKHKHH, file=/home/idbs/cmbos/invoice/BNP Paribas Arbitrage S.N.C_KRW_0816.docx, tradeDetails=com.celera.mongo.entity.TradeDetails@4930213b, lastModified=Wed Nov 09 12:15:55 HKT 2016]
2016-11-09 12:15:55,478 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:89) - =============recon error============ BNP PARIBAS PARIS_HKD_MAY16
2016-11-09 12:15:55,478 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:89) - =============recon error============ YUANTA SECURITIES KOREA CO., LTD_HKD_OCT16
2016-11-09 12:15:55,478 [main] ERROR com.celera.backoffice.PdfCreateInvoice.recon(PdfCreateInvoice.java:89) - =============recon error============ MIRAE ASSET SECURITIES CO. LTD_USD_OCT16
